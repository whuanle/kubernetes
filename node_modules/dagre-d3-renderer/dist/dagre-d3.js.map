{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///dagre-d3.js","webpack:///webpack/bootstrap 2d05c50d24087065f965","webpack:///./node_modules/graphlib/lib/lodash.js","webpack:///./lib/util.js","webpack:///./node_modules/lodash/lodash.js","webpack:///./node_modules/d3/d3.js","webpack:///./node_modules/graphlib/index.js","webpack:///./node_modules/graphlib/lib/graph.js","webpack:///./lib/intersect/intersect-ellipse.js","webpack:///./lib/label/add-label.js","webpack:///./node_modules/graphlib/lib/alg/dijkstra.js","webpack:///./node_modules/graphlib/lib/data/priority-queue.js","webpack:///./node_modules/graphlib/lib/alg/tarjan.js","webpack:///./node_modules/graphlib/lib/alg/topsort.js","webpack:///./node_modules/graphlib/lib/alg/dfs.js","webpack:///./node_modules/dagre-layout/dist/dagre-layout.core.js","webpack:///./lib/intersect/intersect-node.js","webpack:///./lib/intersect/intersect-circle.js","webpack:///./lib/intersect/intersect-polygon.js","webpack:///./lib/intersect/intersect-rect.js","webpack:///./index.js","webpack:///./node_modules/graphlib/lib/index.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/graphlib/lib/version.js","webpack:///./node_modules/graphlib/lib/json.js","webpack:///./node_modules/graphlib/lib/alg/index.js","webpack:///./node_modules/graphlib/lib/alg/components.js","webpack:///./node_modules/graphlib/lib/alg/dijkstra-all.js","webpack:///./node_modules/graphlib/lib/alg/find-cycles.js","webpack:///./node_modules/graphlib/lib/alg/floyd-warshall.js","webpack:///./node_modules/graphlib/lib/alg/is-acyclic.js","webpack:///./node_modules/graphlib/lib/alg/postorder.js","webpack:///./node_modules/graphlib/lib/alg/preorder.js","webpack:///./node_modules/graphlib/lib/alg/prim.js","webpack:///./lib/intersect/index.js","webpack:///./lib/intersect/intersect-line.js","webpack:///./lib/render.js","webpack:///./lib/position-nodes.js","webpack:///./lib/position-edge-labels.js","webpack:///./lib/position-clusters.js","webpack:///./lib/create-nodes.js","webpack:///./lib/label/add-text-label.js","webpack:///./lib/label/add-html-label.js","webpack:///./lib/label/add-svg-label.js","webpack:///./lib/create-clusters.js","webpack:///./lib/create-edge-labels.js","webpack:///./lib/create-edge-paths.js","webpack:///./lib/shapes.js","webpack:///./lib/arrows.js","webpack:///./package.json"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","lodash","e","window","_","isSubgraph","g","v","children","length","edgeToId","escapeId","w","str","String","replace","ID_DELIM","applyStyle","dom","styleFn","attr","applyClass","classFn","otherClasses","applyTransition","selection","graph","_lodash2","default","isPlainObject","transition","isFunction","value","_lodash","obj","global","__WEBPACK_AMD_DEFINE_RESULT__","addMapEntry","map","pair","set","addSetEntry","add","apply","func","thisArg","args","arrayAggregator","array","setter","iteratee","accumulator","index","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","Array","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiToArray","string","split","asciiWords","match","reAsciiWord","baseFindKey","collection","eachFunc","key","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","undefined","basePropertyOf","baseReduce","baseSortBy","comparer","sort","current","baseTimes","baseToPairs","props","baseUnary","baseValues","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","escapeStringChar","chr","stringEscapes","getValue","hasUnicode","reHasUnicode","test","hasUnicodeWord","reHasUnicodeWord","iteratorToArray","iterator","data","next","done","push","mapToArray","size","forEach","overArg","transform","arg","replaceHolders","PLACEHOLDER","setToArray","setToPairs","strictLastIndexOf","stringSize","unicodeSize","asciiSize","stringToArray","unicodeToArray","reUnicode","lastIndex","unicodeWords","reUnicodeWord","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsBreakRange","rsMathOpRange","rsBreak","rsCombo","rsLower","rsMisc","rsFitz","rsRegional","rsSurrPair","rsUpper","rsMiscLower","reOptMod","rsModifier","rsOptJoin","join","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","rsMiscUpper","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","htmlEscapes","&","<",">","\"","'","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","\\","\n","\r"," "," ","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","freeSelf","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","binding","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","deburrLetter","escapeHtmlChar","unescapeHtmlChar","runInContext","context","isObjectLike","isArray","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","copyArray","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","end","iteratees","iterLength","takeCount","nativeMin","baseWrapperValue","outer","iterIndex","type","computed","Hash","entries","clear","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","pop","splice","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","Map","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","arrayLikeKeys","inherited","isArg","isArguments","isBuff","isBuffer","isType","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","baseAggregator","baseEach","baseAssign","copyObject","keys","baseAssignIn","keysIn","writable","baseAt","paths","skip","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","isObject","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","copySymbols","initCloneByTag","stacked","keysFunc","getAllKeysIn","getAllKeys","subValue","baseConforms","baseConformsTo","baseDelay","wait","TypeError","setTimeout","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","baseGet","path","castPath","toKey","baseGetAllKeys","symbolsFunc","baseGetTag","symToStringTag","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInverter","baseInvoke","parent","last","baseIsArguments","baseIsArrayBuffer","baseIsDate","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","isMasked","reIsNative","toSource","baseIsRegExp","baseIsSet","baseIsTypedArray","isLength","baseIteratee","identity","baseMatchesProperty","baseMatches","baseKeys","isPrototype","nativeKeys","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","isTyped","isArrayLikeObject","cloneTypedArray","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","baseSet","basePropertyDeep","basePullAll","indexOf","basePullAt","indexes","previous","baseUnset","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","symbolToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","toString","castSlice","buffer","slice","allocUnsafe","constructor","copy","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","exec","cloneSet","cloneSymbol","symbol","symbolValueOf","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","getSymbols","getSymbolsIn","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","wrapper","Ctor","isBind","arguments","createCtor","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","words","deburr","thisBinding","baseCreate","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","reverse","getFuncName","funcName","getData","isLaziable","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","fn","isBindKey","reorder","isFlip","isAry","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createPartial","createRange","toFinite","createRelationalOperation","toNumber","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","newData","setData","setWrapToString","createRound","Math","precision","createToPairs","createWrap","mergeData","baseSetData","customDefaultsAssignIn","objectProto","customDefaultsMerge","customOmitClone","isPartial","arrValue","othValue","compared","message","convert","objProps","objLength","skipCtor","objCtor","othCtor","flatten","realNames","otherFunc","isKeyable","getNative","isOwn","unmasked","nativeObjectToString","transforms","getWrapDetails","hasPath","hasFunc","input","getPrototype","insertWrapDetails","details","spreadableSymbol","maskSrcKey","srcBitmask","newBitmask","isCombo","otherArgs","oldArray","reference","updateWrapDetails","shortOut","count","lastCalled","stamp","nativeNow","remaining","rand","funcToString","chunk","compact","concat","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flattenDeep","flattenDepth","fromPairs","head","initial","separator","nativeJoin","lastIndexOf","nth","pullAll","pullAllBy","pullAllWith","remove","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","filter","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","isString","orderBy","reduce","reduceRight","reject","negate","sample","sampleSize","shuffle","some","after","before","curry","curryRight","debounce","options","invokeFunc","time","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","now","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","flip","memoize","resolver","memoized","Cache","once","rest","spread","throttle","unary","wrap","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isInteger","isMatch","isMatchWith","isNaN","isNumber","isNative","isMaskable","Error","isNull","isNil","proto","objectCtorString","isSafeInteger","isUndefined","isWeakMap","isWeakSet","symIterator","remainder","valueOf","isBinary","toSafeInteger","create","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","mapKeys","mapValues","omitBy","pickBy","prop","setWith","isArrLike","unset","update","updateWith","valuesIn","clamp","inRange","random","floating","temp","capitalize","upperFirst","toLowerCase","endsWith","target","position","escape","escapeRegExp","pad","strLength","padEnd","padStart","radix","nativeParseInt","repeat","limit","startsWith","template","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","attempt","toLower","toUpper","toUpperCase","trim","trimEnd","trimStart","truncate","omission","search","substring","newEnd","unescape","pattern","cond","conforms","constant","defaultTo","matches","matchesProperty","mixin","methodNames","noConflict","oldDash","noop","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","prefix","id","idCounter","max","maxBy","mean","meanBy","min","minBy","sum","sumBy","defaults","pick","Date","arrayProto","funcProto","coreJsData","uid","IE_PROTO","Buffer","Symbol","getPrototypeOf","objectCreate","propertyIsEnumerable","isConcatSpreadable","toStringTag","ctxClearTimeout","ctxNow","ctxSetTimeout","ceil","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","DataView","Promise","Set","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","baseSetToString","castRest","ArrayBuffer","resolve","ctorString","quote","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","keyBy","partition","sortBy","bind","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assign","assignIn","assignWith","at","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","entriesIn","extend","extendWith","each","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","commit","toJSON","__WEBPACK_AMD_DEFINE_FACTORY__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","d3_bisector","compare","left","lo","hi","right","d3_transposeLength","d3_range_integerScale","k","d3_class","ctor","d3_Map","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","d3_vendorSymbol","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","z","listeners","on","listenerByName","listener","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","d3_selection_classedRe","requote","d3_selection_classes","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","getAttribute","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parentNode","removeChild","d3_selection_dataNode","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","d3_selection_each","j","d3_selection_enter","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","d3_array","addEventListener","removeAll","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","select","d3_event_dragSelect","suppressClick","off","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","append","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","m1","m2","vv","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","format","hsl","color","d3_rgb_parseNumber","d3_rgb_names","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","then","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","t0","t1","d3_format_precision","log","LN10","d3_formatPrefix","abs","scale","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","specifier","d3_format_re","align","sign","zfill","comma","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","d3_date_utc","UTC","d3_time_interval","date","d0","d1","d3_date","dt","range_utc","utc","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","points","isSubject","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","P","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","cells","d3_geom_voronoiCells","iCell","prepare","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","d3_geom_quadtreeFind","closestPoint","minDistance2","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","rescale","linear","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","cancelId","tick","tweens","ease","duration","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skipped","d3_json","JSON","d3_html","d3_document","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","permute","permutes","transpose","matrix","row","merged","empty","nest","mapType","rollup","sortValues","keyValue","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","querySelector","querySelectorAll","d3_selectMatcher","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","d3_formatPrefixes","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","childs","revalue","pie","arcs","d3_layout_pieSortByValue","series","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","lib","Graph","alg","opts","_isDirected","directed","_isMultigraph","multigraph","_isCompound","compound","_label","_defaultNodeLabelFn","_defaultEdgeLabelFn","_nodes","_parent","_children","GRAPH_NODE","_in","_preds","_out","_sucs","_edgeObjs","_edgeLabels","incrementOrInitEntry","decrementOrRemoveEntry","edgeArgsToId","isDirected","w_","tmp","EDGE_KEY_DELIM","DEFAULT_EDGE_NAME","edgeArgsToObj","edgeObj","edgeObjToId","_nodeCount","_edgeCount","isMultigraph","isCompound","setGraph","label","setDefaultNodeLabel","newDefault","nodeCount","sinks","setNodes","vs","setNode","hasNode","removeNode","removeEdge","_removeFromParentsChildList","setParent","predecessors","predsV","successors","sucsV","preds","filterNodes","findParent","parents","setEdge","setDefaultEdgeLabel","edgeCount","setPath","valueSpecified","arg0","freeze","hasEdge","inEdges","inV","outEdges","outV","nodeEdges","intersectEllipse","det","_interopRequireDefault","addLabel","labelSvg","labelType","_addSvgLabel2","_addHtmlLabel2","_addTextLabel2","labelBBox","getBBox","height","_addTextLabel","_addHtmlLabel","_addSvgLabel","dijkstra","weightFn","edgeFn","runDijkstra","DEFAULT_WEIGHT_FUNC","vEntry","results","pq","PriorityQueue","updateNeighbors","wEntry","predecessor","decrease","POSITIVE_INFINITY","removeMin","_arr","_keyIndices","keyIndices","arr","_decrease","_swap","_heapify","largest","origArrI","origArrJ","tarjan","dfs","visited","onStack","lowlink","cmpt","topsort","CycleException","navigation","acc","doDfs","postorder","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_2__","addDummyNode","attrs","dummy","simplify","simplified","_graphlib","simpleLabel","minlen","asNonCompoundGraph","successorWeights","weightMap","sucs","predecessorWeights","intersectRect","buildLayerMatrix","layering","maxRank","rank","normalizeRanks","removeEmptyRanks","layers","delta","nodeRankFactor","addBorderNode","lhs","rhs","console","notime","longestPath","slack","feasibleTree","tightTree","findMinSlackEdge","_util","shiftRanks","edgeV","_graphlib2","_layout","_layout2","_debug","_debug2","_util2","_package","graphlib","debug","util","debugTiming","layoutGraph","buildLayoutGraph","runLayout","updateInputGraph","makeSpaceForEdgeLabels","removeSelfEdges","_acyclic2","run","_nestingGraph2","_rank2","injectEdgeLabelProxies","cleanup","assignRankMinMax","removeEdgeLabelProxies","_normalize2","_parentDummyChains2","_addBorderSegments2","_order2","insertSelfEdges","_coordinateSystem2","adjust","_position2","positionSelfEdges","removeBorderNodes","undo","fixupEdgeLabelCoords","translateGraph","assignNodeIntersects","reversePointsForReversedEdges","inputGraph","inputLabel","layoutLabel","canonicalize","graphDefaults","selectNumberAttrs","graphNumAttrs","graphAttrs","nodeNumAttrs","nodeDefaults","edgeDefaults","edgeNumAttrs","edgeAttrs","ranksep","labelpos","rankdir","labeloffset","borderTop","minRank","borderBottom","labelRank","getExtremes","minX","maxX","minY","maxY","graphLabel","marginX","marginx","marginY","marginy","nodeV","nodeW","reversed","borderLeft","borderRight","selfEdges","layer","orderShift","selfEdge","selfNode","newAttrs","_acyclic","_normalize","_rank","_parentDummyChains","_nestingGraph","_addBorderSegments","_coordinateSystem","_order","_position","edgesep","nodesep","fas","acyclicer","_greedyFas2","dfsFAS","forwardName","_greedyFas","greedyFAS","state","buildState","DEFAULT_WEIGHT_FN","doGreedyFAS","buckets","zeroIdx","dequeue","collectPredecessors","uEntry","assignBucket","fasGraph","maxIn","maxOut","prevWeight","edgeWeight","_list2","enqueue","_list","List","sentinel","_next","_prev","_sentinel","unlink","filterOutLinks","strs","curr","dummyChains","normalizeEdge","vRank","wRank","edgeLabel","origLabel","ranker","networkSimplexRanker","tightTreeRanker","longestPathRanker","_feasibleTree2","_networkSimplex2","_feasibleTree","_networkSimplex","networkSimplex","initLowLimValues","initCutValues","leaveEdge","enterEdge","exchangeEdges","assignCutValue","childLab","cutvalue","calcCutValue","childIsTail","graphEdge","cutValue","isOutEdge","pointsToHead","otherWeight","isTreeEdge","otherCutValue","dfsAssignLowLim","nextLim","lim","vLabel","wLabel","tailLabel","isDescendant","updateRanks","preorder","flipped","rootLabel","parentDummyChains","postorderNums","pathData","findPath","pathIdx","pathV","vPath","wPath","depths","treeDepths","nodeSep","nestingRoot","sumWeights","childNode","childTop","childBottom","thisWeight","nestingEdge","addBorderSegments","sg","sgNode","borderType","prev","rankDir","swapWidthHeight","reverseY","swapXY","swapWidthHeightOne","reverseYOne","swapXYOne","downLayerGraphs","buildLayerGraphs","upLayerGraphs","_initOrder2","assignOrder","bestCC","lastBest","sweepLayerGraphs","cc","_crossCount2","ranks","relationship","_buildLayerGraph2","layerGraphs","biasRight","cg","lg","sorted","_sortSubgraph2","_addSubgraphConstraints2","_initOrder","_crossCount","_sortSubgraph","_buildLayerGraph","_addSubgraphConstraints","initOrder","simpleNodes","orderedVs","crossCount","twoLayerCrossCount","northLayer","southLayer","southPos","southEntries","pos","firstIndex","treeSize","weightSum","sortSubgraph","movable","subgraphs","barycenters","_barycenter2","subgraphResult","mergeBarycenters","_resolveConflicts2","expandSubgraphs","_sort2","blPred","brPred","barycenter","_barycenter","_resolveConflicts","_sort","nodeU","resolveConflicts","mappedEntries","indegree","entryV","entryW","doResolveConflicts","sourceSet","mergeEntries","parts","sortable","unsortable","vsIndex","compareWithBias","consumeUnsortable","bias","buildLayerGraph","createRootNode","addSubgraphConstraints","rootPrev","prevChild","positionY","_bk","positionX","rankSep","prevY","maxHeight","findType1Conflicts","visitLayer","prevLayer","k0","scanPos","prevLayerLength","lastNode","findOtherInnerSegmentNode","k1","scanNode","uLabel","uPos","addConflict","conflicts","findType2Conflicts","scan","south","southEnd","prevNorthBorder","nextNorthBorder","uNode","north","prevNorthPos","nextNorthPos","southLookahead","conflictsV","hasConflict","verticalAlignment","neighborFn","prevIdx","ws","mp","il","horizontalCompaction","reverseSep","pass1","blockG","pass2","buildBlockGraph","blockGraph","sepFn","sep","vRoot","uRoot","prevMax","findSmallestWidthAlignment","xss","alignCoordinates","alignTo","alignToMin","alignToMax","vert","horiz","alignment","balance","ul","ignore","adjustedLayering","inner","smallestWidth","edgeSep","debugOrdering","layerMatrix","layerV","description","author","main","keywords","scripts","lint","jest","karma","bench","build","build:watch","upgrade","dependencies","devDependencies","babel-core","babel-loader","babel-preset-env","babel-preset-es2015","benchmark","chai","coveralls","karma-chrome-launcher","karma-firefox-launcher","karma-mocha","karma-safari-launcher","mocha","sprintf","standard","webpack","webpack-node-externals","yarn-upgrade-all","repository","license","files","testRegex","testPathIgnorePatterns","intersectNode","intersectCircle","_intersectEllipse2","_intersectEllipse","intersectPolygon","polyPoints","intersections","_intersectLine2","pdx","pdy","distp","qdx","qdy","distq","_intersectLine","_d","_d2","_dagreLayout","_dagreLayout2","_intersect","_intersect2","_render","_render2","dagre","render","eval","webpackPolyfill","deprecate","write","writeNodes","writeEdges","nodeValue","edgeValue","read","components","dijkstraAll","findCycles","floydWarshall","isAcyclic","prim","cmpts","weightFunc","edgeFunc","runFloydWarshall","rowK","rowI","ik","kj","ij","altDistance","pri","init","_intersectNode","_intersectNode2","_intersectCircle","_intersectCircle2","_intersectPolygon","_intersectPolygon2","_intersectRect","_intersectRect2","ellipse","intersectLine","q2","r3","r4","sameSign","a2","b2","r2","denom","num","_createNodes","_createClusters","_createEdgeLabels","_createEdgePaths","_shapes","_arrows","preProcessGraph","outputGroup","createOrSelectGroup","clustersGroup","edgePathsGroup","edgeLabels","_positionNodes2","_positionEdgeLabels2","clusters","_positionClusters2","postProcessGraph","createNodes","createClusters","createEdgeLabels","createEdgePaths","shapes","arrows","paddingLeft","paddingX","paddingRight","paddingTop","paddingY","paddingBottom","NODE_DEFAULT_ATTRS","_prevWidth","_prevHeight","EDGE_DEFAULT_ATTRS","_positionNodes","_positionEdgeLabels","_positionClusters","_createNodes2","_createNodes3","_createClusters2","_createClusters3","_createEdgeLabels2","_createEdgeLabels3","_createEdgePaths2","_createEdgePaths3","_shapes2","_shapes3","_arrows2","_arrows3","shape","arrowhead","lineInterpolate","positionNodes","positionEdgeLabels","positionClusters","created","svgNodes","thisGroup","labelGroup","labelDom","_addLabel2","elem","labelId","shapeSvg","shapeBBox","_addLabel","addTextLabel","domNode","processEscapeSequences","labelStyle","newText","escaped","ch","addHtmlLabel","fo","div","_typeof","client","addSVGLabel","svgClusters","clusterLabelPos","domCluster","svgEdgeLabels","svgPaths","domEdge","arrowheadId","calcPoints","createLine","lineTension","getCoords","svgPathsEnter","sourceElem","svgPathExit","getTotalLength","marker","vee","undirected","release","dagre-layout","phantomjs-prebuilt"],"mappings":"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AC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAEAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACA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0C,EAAAy0C,YACAz0C,EAAAkzC,aACAlzC,EAAAiD,YACAjD,EAAAmzC,SACAnzC,EAAAymB,QACAzmB,EAAA2mB,UACA3mB,EAAAqC,OACArC,EAAAkpC,WACAlpC,EAAAmpC,aACAnpC,EAAAutC,WACAvtC,EAAAwtC,mBACAxtC,EAAA2lC,WACA3lC,EAAA20C,SACA30C,EAAAu0C,aACAv0C,EAAA01C,UACA11C,EAAA21C,YACA31C,EAAAytC,SACAztC,EAAAwjC,UACAxjC,EAAA8tC,UACA9tC,EAAA40C,QACA50C,EAAAopC,UACAppC,EAAA+lC,QACA/lC,EAAAojC,WACApjC,EAAA41C,QACA51C,EAAA0zC,YACA1zC,EAAA61C,aACA71C,EAAA81C,YACA91C,EAAAqmC,WACArmC,EAAA4zC,gBACA5zC,EAAAozC,aACApzC,EAAAovC,QACApvC,EAAAqpC,UACArpC,EAAAL,YACAK,EAAA+tC,cACA/tC,EAAAkyC,QACAlyC,EAAAsgC,WACAtgC,EAAAugC,aACAvgC,EAAAwgC,eACAxgC,EAAAmyC,UACAnyC,EAAA+1C,SACA/1C,EAAAg2C,cACAh2C,EAAA6zC,SACA7zC,EAAAujC,UACAvjC,EAAAygC,UACAzgC,EAAAgmC,QACAhmC,EAAAo5B,WACAp5B,EAAA0jC,cACA1jC,EAAAuC,OACAvC,EAAAupC,WACAvpC,EAAA2jC,WACA3jC,EAAAi0B,SACAj0B,EAAAqzC,UACArzC,EAAAihC,cACAjhC,EAAAkhC,gBACAlhC,EAAA0E,SACA1E,EAAAimC,UACAjmC,EAAAmhC,QACAnhC,EAAAohC,QACAphC,EAAAqhC,aACArhC,EAAAshC,kBACAthC,EAAAuhC,aACAvhC,EAAAiiC,OACAjiC,EAAAkmC,YACAlmC,EAAAm5B,QACAn5B,EAAAsiC,WACAtiC,EAAA60C,WACA70C,EAAA80C,aACA90C,EAAAsuC,UACAtuC,EAAA2vB,iBACA3vB,EAAAoI,aACApI,EAAAmmC,SACAnmC,EAAAoyC,SACApyC,EAAAqyC,WACAryC,EAAAsyC,aACAtyC,EAAAwhC,QACAxhC,EAAAyhC,UACAzhC,EAAA0hC,YACA1hC,EAAAypC,SACAzpC,EAAA2hC,SACA3hC,EAAA6hC,aACA7hC,EAAA0pC,UACA1pC,EAAA2pC,cACA3pC,EAAAkE,UACAlE,EAAA4pC,YACA5pC,EAAAuyC,WACAvyC,EAAAo4B,SACAp4B,EAAAomC,QACApmC,EAAAwyC,OACAxyC,EAAAyyC,SACAzyC,EAAA0yC,WACA1yC,EAAA2yC,OACA3yC,EAAA8hC,aACA9hC,EAAA+hC,iBACA/hC,EAAA4yC,WAGA5yC,EAAA2iB,QAAAkyB,GACA70C,EAAA62C,UAAA/B,GACA90C,EAAA82C,OAAA3C,GACAn0C,EAAA+2C,WAAAzL,GAGAmC,GAAAztC,KAKAA,EAAAyC,OACAzC,EAAAqsC,WACArsC,EAAA+0C,aACA/0C,EAAAkqC,cACAlqC,EAAAqwC,QACArwC,EAAA6pC,SACA7pC,EAAAuhB,SACAvhB,EAAAwmC,aACAxmC,EAAAymC,iBACAzmC,EAAAumC,aACAvmC,EAAA0mC,cACA1mC,EAAAq4B,UACAr4B,EAAAstC,aACAttC,EAAAm2C,UACAn2C,EAAAqqC,YACArqC,EAAAimB,MACAjmB,EAAAwqC,UACAxqC,EAAAyqC,gBACAzqC,EAAA4iC,SACA5iC,EAAA+yC,QACA/yC,EAAA2/B,aACA3/B,EAAA0oC,WACA1oC,EAAAgzC,YACAhzC,EAAA4/B,iBACA5/B,EAAA2oC,eACA3oC,EAAAswC,SACAtwC,EAAAkI,WACAlI,EAAAijC,gBACAjjC,EAAA4oC,SACA5oC,EAAA6oC,cACA7oC,EAAA8oC,UACA9oC,EAAA+oC,eACA/oC,EAAAT,OACAS,EAAA8zC,MACA9zC,EAAA+zC,OACA/zC,EAAA0G,OACA1G,EAAAkvB,SACAlvB,EAAAggC,QACAhgC,EAAAkuB,YACAluB,EAAAgpB,YACAhpB,EAAAuwB,WACAvwB,EAAA8pC,WACA9pC,EAAA00C,UACA10C,EAAAolB,eACAplB,EAAAogB,WACApgB,EAAAmf,iBACAnf,EAAA6uB,eACA7uB,EAAAyvB,qBACAzvB,EAAA2mC,aACA3mC,EAAAslB,YACAtlB,EAAAqf,UACArf,EAAA4mC,aACA5mC,EAAA6mC,WACA7mC,EAAA8mC,WACA9mC,EAAA+mC,eACA/mC,EAAAgnC,WACAhnC,EAAAinC,YACAjnC,EAAA8B,cACA9B,EAAAmnC,aACAnnC,EAAAguB,YACAhuB,EAAAuf,SACAvf,EAAAonC,WACApnC,EAAAqnC,eACArnC,EAAAsnC,SACAtnC,EAAAwnC,YACAxnC,EAAA4nC,SACA5nC,EAAA2nC,UACA3nC,EAAAunC,YACAvnC,EAAA0nB,YACA1nB,EAAAmgB,gBACAngB,EAAA4B,iBACA5B,EAAAyf,YACAzf,EAAA+nC,iBACA/nC,EAAA2f,SACA3f,EAAAmjC,YACAnjC,EAAAspB,YACAtpB,EAAA6f,gBACA7f,EAAAgoC,eACAhoC,EAAAioC,aACAjoC,EAAAkoC,aACAloC,EAAAwQ,QACAxQ,EAAAi1C,aACAj1C,EAAA+rB,QACA/rB,EAAAogC,eACApgC,EAAAk1C,aACAl1C,EAAAm1C,cACAn1C,EAAAg0C,MACAh0C,EAAAi0C,OACAj0C,EAAA2uC,OACA3uC,EAAA4uC,SACA5uC,EAAA6uC,QACA7uC,EAAA8uC,UACA9uC,EAAA+uC,OACA/uC,EAAAgvC,SACAhvC,EAAAguC,aACAhuC,EAAAiuC,aACAjuC,EAAAkuC,cACAluC,EAAAmuC,cACAnuC,EAAAouC,YACApuC,EAAAs2C,YACAt2C,EAAAqgC,OACArgC,EAAA2tC,cACA3tC,EAAA6tC,QACA7tC,EAAAmlC,OACAnlC,EAAA0qC,OACA1qC,EAAA4qC,UACA5qC,EAAA6qC,YACA7qC,EAAAse,YACAte,EAAA+pC,UACA/pC,EAAAqjC,UACArjC,EAAAsjC,eACAtjC,EAAAgrC,UACAhrC,EAAAc,WACAd,EAAA0D,UACA1D,EAAAy2C,SACAz2C,EAAAigB,eACAjgB,EAAAyjC,UACAzjC,EAAAiI,QACAjI,EAAAo1C,aACAp1C,EAAA4jC,QACA5jC,EAAA2gC,eACA3gC,EAAA4gC,iBACA5gC,EAAA6gC,iBACA7gC,EAAA8gC,mBACA9gC,EAAA+gC,qBACA/gC,EAAAghC,qBACAhhC,EAAAq1C,aACAr1C,EAAAkrC,cACAlrC,EAAA02C,YACA12C,EAAAivC,OACAjvC,EAAAkvC,SACAlvC,EAAAmrC,YACAnrC,EAAAquC,SACAruC,EAAAi7B,YACAj7B,EAAAwpB,aACAxpB,EAAAypB,YACAzpB,EAAAssC,WACAtsC,EAAAm7B,YACAn7B,EAAAuoC,iBACAvoC,EAAA8zB,YACA9zB,EAAAusC,WACAvsC,EAAAysC,QACAzsC,EAAA0sC,WACA1sC,EAAA2sC,aACA3sC,EAAA4sC,YACA5sC,EAAAitC,YACAjtC,EAAAuuC,YACAvuC,EAAAs1C,aACAt1C,EAAAmqC,cAGAnqC,EAAAg3C,KAAA9uC,GACAlI,EAAAi3C,UAAAhU,GACAjjC,EAAAk3C,MAAAlX,GAEAyN,GAAAztC,EAAA,WACA,GAAA4N,KAMA,OALAmc,IAAA/pB,EAAA,SAAA2C,EAAAo1B,GACAl4B,GAAAjB,KAAAoB,EAAAJ,UAAAm4B,KACAnqB,EAAAmqB,GAAAp1B,KAGAiL,MACWo0B,OAAA,IAWXhiC,EAAAm3C,QAn7gBA,SAs7gBA/zC,GAAA,yEAAA20B,GACA/3B,EAAA+3B,GAAA/wB,YAAAhH,IAIAoD,GAAA,wBAAA20B,EAAA50B,GACAkd,EAAAzgB,UAAAm4B,GAAA,SAAAv4B,GACAA,MAAAoG,GAAA,EAAAulB,GAAA3B,GAAAhqB,GAAA,EAEA,IAAAkE,GAAArF,KAAA2iB,eAAA7d,EACA,GAAAkd,GAAAhiB,MACAA,KAAAkjB,OAUA,OARA7d,GAAAsd,aACAtd,EAAAwd,cAAAkB,GAAA5iB,EAAAkE,EAAAwd,eAEAxd,EAAAyd,UAAApZ,MACAE,KAAAma,GAAA5iB,EAAAyL,IACAuX,KAAAuV,GAAAr0B,EAAAqd,QAAA,gBAGArd,GAGA2c,EAAAzgB,UAAAm4B,EAAA,kBAAAv4B,GACA,MAAAnB,MAAA+6B,UAAArB,GAAAv4B,GAAA45B,aAKAh2B,GAAA,qCAAA20B,EAAA50B,GACA,GAAAqf,GAAArf,EAAA,EACAi0C,EAAA50B,GAAA5X,IAp6gBA,GAo6gBA4X,CAEAnC,GAAAzgB,UAAAm4B,GAAA,SAAA90B,GACA,GAAAS,GAAArF,KAAAkjB,OAMA,OALA7d,GAAAud,cAAAlZ,MACA9E,SAAA8sB,GAAA9sB,EAAA,GACAuf,SAEA9e,EAAAsd,aAAAtd,EAAAsd,cAAAo2B,EACA1zC,KAKAN,GAAA,wBAAA20B,EAAA50B,GACA,GAAAk0C,GAAA,QAAAl0C,EAAA,WAEAkd,GAAAzgB,UAAAm4B,GAAA,WACA,MAAA15B,MAAAg5C,GAAA,GAAAt1C,QAAA,MAKAqB,GAAA,2BAAA20B,EAAA50B,GACA,GAAAm0C,GAAA,QAAAn0C,EAAA,WAEAkd,GAAAzgB,UAAAm4B,GAAA,WACA,MAAA15B,MAAA2iB,aAAA,GAAAX,GAAAhiB,WAAAi5C,GAAA,MAIAj3B,EAAAzgB,UAAAw/B,QAAA,WACA,MAAA/gC,MAAAwkC,OAAA3U,KAGA7N,EAAAzgB,UAAAmzC,KAAA,SAAAxvC,GACA,MAAAlF,MAAAwkC,OAAAt/B,GAAAy8B,QAGA3f,EAAAzgB,UAAAozC,SAAA,SAAAzvC,GACA,MAAAlF,MAAA+6B,UAAA2Z,KAAAxvC,IAGA8c,EAAAzgB,UAAAszC,UAAAhiB,GAAA,SAAA7G,EAAAxnB,GACA,wBAAAwnB,GACA,GAAAhK,GAAAhiB,MAEAA,KAAAgE,IAAA,SAAAN,GACA,MAAA8pB,IAAA9pB,EAAAsoB,EAAAxnB,OAIAwd,EAAAzgB,UAAA2jC,OAAA,SAAAhgC,GACA,MAAAlF,MAAAwkC,OAAAW,GAAAzT,GAAAxsB,MAGA8c,EAAAzgB,UAAAq0B,MAAA,SAAAlS,EAAAC,GACAD,EAAAyH,GAAAzH,EAEA,IAAAre,GAAArF,IACA,OAAAqF,GAAAsd,eAAAe,EAAA,GAAAC,EAAA,GACA,GAAA3B,GAAA3c,IAEAqe,EAAA,EACAre,IAAA29B,WAAAtf,GACOA,IACPre,IAAA47B,KAAAvd,IAEAC,IAAApc,KACAoc,EAAAwH,GAAAxH,GACAte,EAAAse,EAAA,EAAAte,EAAA67B,WAAAvd,GAAAte,EAAA09B,KAAApf,EAAAD,IAEAre,IAGA2c,EAAAzgB,UAAA0hC,eAAA,SAAA/9B,GACA,MAAAlF,MAAA+6B,UAAAmI,UAAAh+B,GAAA61B,WAGA/Y,EAAAzgB,UAAA0iC,QAAA,WACA,MAAAjkC,MAAA+iC,KAAAn2B,KAIA8e,GAAA1J,EAAAzgB,UAAA,SAAA+C,EAAAo1B,GACA,GAAAwf,GAAA,qCAAAhwC,KAAAwwB,GACAyf,EAAA,kBAAAjwC,KAAAwwB,GACA0f,EAAAz3C,EAAAw3C,EAAA,gBAAAzf,EAAA,YAAAA,GACA2f,EAAAF,GAAA,QAAAjwC,KAAAwwB,EAEA0f,KAGAz3C,EAAAJ,UAAAm4B,GAAA,WACA,GAAAh2B,GAAA1D,KAAAqiB,YACA7d,EAAA20C,GAAA,GAAA5f,UACA+f,EAAA51C,YAAAse,GACApd,EAAAJ,EAAA,GACA+0C,EAAAD,GAAAv3B,GAAAre,GAEAmgC,EAAA,SAAAngC,GACA,GAAA2B,GAAA+zC,EAAA/0C,MAAA1C,EAAAiE,GAAAlC,GAAAc,GACA,OAAA20C,IAAA/2B,EAAA/c,EAAA,GAAAA,EAGAk0C,IAAAL,GAAA,kBAAAt0C,IAAA,GAAAA,EAAAzC,SAEAm3C,EAAAC,GAAA,EAEA,IAAAn3B,GAAApiB,KAAAuiB,UACAi3B,IAAAx5C,KAAAsiB,YAAAngB,OACAs3C,EAAAJ,IAAAj3B,EACAs3B,EAAAJ,IAAAE,CAEA,KAAAH,GAAAE,EAAA,CACA71C,EAAAg2C,EAAAh2C,EAAA,GAAAse,GAAAhiB,KACA,IAAAqF,GAAAf,EAAAD,MAAAX,EAAAc,EAEA,OADAa,GAAAid,YAAA5Y,MAAmCpF,KAAAw2B,GAAAt2B,MAAAq/B,GAAAt/B,QAAAgD,KACnC,GAAA0a,GAAA5c,EAAA+c,GAEA,MAAAq3B,IAAAC,EACAp1C,EAAAD,MAAArE,KAAAwE,IAEAa,EAAArF,KAAA86B,KAAA+I,GACA4V,EAAAN,EAAA9zC,EAAA3B,QAAA,GAAA2B,EAAA3B,QAAA2B,OAKAN,GAAA,yDAAA20B,GACA,GAAAp1B,GAAA2sC,GAAAvX,GACAigB,EAAA,0BAAAzwC,KAAAwwB,GAAA,aACA2f,EAAA,kBAAAnwC,KAAAwwB,EAEA/3B,GAAAJ,UAAAm4B,GAAA,WACA,GAAAl1B,GAAA+0B,SACA,IAAA8f,IAAAr5C,KAAAuiB,UAAA,CACA,GAAA7e,GAAA1D,KAAA0D,OACA,OAAAY,GAAAD,MAAA0d,GAAAre,QAAAc,GAEA,MAAAxE,MAAA25C,GAAA,SAAAj2C,GACA,MAAAY,GAAAD,MAAA0d,GAAAre,QAAAc,QAMAknB,GAAA1J,EAAAzgB,UAAA,SAAA+C,EAAAo1B,GACA,GAAA0f,GAAAz3C,EAAA+3B,EACA,IAAA0f,EAAA,CACA,GAAAxyC,GAAAwyC,EAAAz4C,KAAA,IACAm+B,GAAAl4B,KAAAk4B,GAAAl4B,QAEA8C,MAAoB/I,KAAA+4B,EAAAp1B,KAAA80C,OAIpBta,GAAAvE,GAAAhzB,GAAAmE,IAAA/K,QACAA,KAAA,UACA2D,KAAAiD,KAIAya,EAAAzgB,UAAA2hB,MAAAH,EACAf,EAAAzgB,UAAAw5B,QAAA9X,EACAjB,EAAAzgB,UAAAmC,MAAAyf,GAGAxhB,EAAAJ,UAAAy0C,GAAAxB,GACA7yC,EAAAJ,UAAAoiC,MAAAG,GACAniC,EAAAJ,UAAAq4C,OAAA7V,GACApiC,EAAAJ,UAAAiI,KAAAw6B,GACAriC,EAAAJ,UAAA65B,MAAA+I,GACAxiC,EAAAJ,UAAAw5B,QAAAqJ,GACAziC,EAAAJ,UAAAs4C,OAAAl4C,EAAAJ,UAAAyoC,QAAAroC,EAAAJ,UAAAmC,MAAA4gC,GAGA3iC,EAAAJ,UAAAs3C,MAAAl3C,EAAAJ,UAAAogC,KAEAmI,KACAnoC,EAAAJ,UAAAuoC,IAAA5F,IAEAviC,IAcAlC,IAAAqC,MAIAgC,EAAA,WACA,MAAAhC,KACKvB,KAAAZ,EAAAO,EAAAP,EAAAC,MAAA2H,KAAA3H,EAAAD,QAAAmE,KAaJvD,KAAAP,QJ2K4BO,KAAKZ,EAASO,EAAoB,IAAKA,EAAoB,IAAIN,KAItF,SAAUA,EAAQD,EAASO,GK12hBjC,GAAA45C,GAAAh2C,GAAA,WAQA,QAAAi2C,GAAAC,GACA,MAAAA,OAAAC,eAAAD,EAAAE,UAAAF,GAAAG,gBAEA,QAAAC,GAAAJ,GACA,MAAAA,OAAAC,eAAAD,EAAAC,cAAAI,aAAAL,EAAAE,UAAAF,KAAAK,aAiCA,QAAAC,GAAAC,EAAAC,GACA,MAAAD,GAAAC,GAAA,EAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAAC,IA8DA,QAAAC,GAAAC,GACA,cAAAA,EAAAF,KAAAE,EAEA,QAAAC,GAAAD,GACA,OAAA1R,MAAA0R,GA0DA,QAAAE,GAAAC,GACA,OACAC,KAAA,SAAAR,EAAAI,EAAAK,EAAAC,GAGA,IAFA1hB,UAAAp3B,OAAA,IAAA64C,EAAA,GACAzhB,UAAAp3B,OAAA,IAAA84C,EAAAV,EAAAp4C,QACA64C,EAAAC,GAAA,CACA,GAAAvnB,GAAAsnB,EAAAC,IAAA,CACAH,GAAAP,EAAA7mB,GAAAinB,GAAA,EAAAK,EAAAtnB,EAAA,EAAmDunB,EAAAvnB,EAEnD,MAAAsnB,IAEAE,MAAA,SAAAX,EAAAI,EAAAK,EAAAC,GAGA,IAFA1hB,UAAAp3B,OAAA,IAAA64C,EAAA,GACAzhB,UAAAp3B,OAAA,IAAA84C,EAAAV,EAAAp4C,QACA64C,EAAAC,GAAA,CACA,GAAAvnB,GAAAsnB,EAAAC,IAAA,CACAH,GAAAP,EAAA7mB,GAAAinB,GAAA,EAAAM,EAAAvnB,EAA+CsnB,EAAAtnB,EAAA,EAE/C,MAAAsnB,KA2CA,QAAAG,GAAAz6C,GACA,MAAAA,GAAAyB,OAmDA,QAAAi5C,GAAAT,GAEA,IADA,GAAAU,GAAA,EACAV,EAAAU,EAAA,GAAAA,GAAA,EACA,OAAAA,GAEA,QAAAC,GAAAC,EAAAnR,GACA,OAAAxjC,KAAAwjC,GACAtpC,OAAAC,eAAAw6C,EAAAh6C,UAAAqF,GACAlD,MAAA0mC,EAAAxjC,GACA3F,YAAA,IAkBA,QAAAu6C,KACAx7C,KAAA8B,EAAAhB,OAAAqpC,OAAA,MAgCA,QAAAsR,GAAA70C,GACA,OAAAA,GAAA,MAAA80C,IAAA90C,EAAA,KAAA+0C,MAAA/0C,IAEA,QAAAg1C,GAAAh1C,GACA,OAAAA,GAAA,SAAA+0C,GAAA/0C,EAAAgvB,MAAA,GAAAhvB,EAEA,QAAAi1C,GAAAj1C,GACA,MAAA60C,GAAA70C,IAAA5G,MAAA8B,EAEA,QAAAg6C,GAAAl1C,GACA,OAAAA,EAAA60C,EAAA70C,KAAA5G,MAAA8B,SAAA9B,MAAA8B,EAAA8E,GAEA,QAAAm1C,KACA,GAAA3zB,KACA,QAAAxhB,KAAA5G,MAAA8B,EAAAsmB,EAAA1e,KAAAkyC,EAAAh1C,GACA,OAAAwhB,GAEA,QAAA4zB,KACA,GAAApyC,GAAA,CACA,QAAAhD,KAAA5G,MAAA8B,IAAA8H,CACA,OAAAA,GAEA,QAAAqyC,KACA,OAAAr1C,KAAA5G,MAAA8B,EAAA,QACA,UAsEA,QAAAo6C,KACAl8C,KAAA8B,EAAAhB,OAAAqpC,OAAA,MAiBA,QAAAgS,GAAAz7C,GACA,MAAAA,GAOA,QAAA07C,GAAAnQ,EAAA18B,EAAA8nC,GACA,kBACA,GAAA3zC,GAAA2zC,EAAAhzC,MAAAkL,EAAAgqB,UACA,OAAA71B,KAAA6L,EAAA08B,EAAAvoC,GAGA,QAAA24C,GAAAh7C,EAAAV,GACA,GAAAA,IAAAU,GAAA,MAAAV,EACAA,KAAAg5B,OAAA,GAAAwU,cAAAxtC,EAAAi1B,MAAA,EACA,QAAAv1B,GAAA,EAAAc,EAAAm7C,GAAAn6C,OAAiD9B,EAAAc,IAAOd,EAAA,CACxD,GAAAk8C,GAAAD,GAAAj8C,GAAAM,CACA,IAAA47C,IAAAl7C,GAAA,MAAAk7C,IAIA,QAAAC,MAMA,QAAAC,MAeA,QAAAC,GAAAC,GAEA,QAAAC,KAEA,IADA,GAAAt8C,GAAAu8C,EAAAC,EAAAz8C,GAAA,EAAAc,EAAA07C,EAAA16C,SACA9B,EAAAc,IAAAb,EAAAu8C,EAAAx8C,GAAA08C,KAAAz8C,EAAA+D,MAAArE,KAAAu5B,UACA,OAAAojB,GAJA,GAAAG,MAAAE,EAAA,GAAAxB,EAmBA,OAbAoB,GAAAG,GAAA,SAAAp8C,EAAAs8C,GACA,GAAA58C,GAAAC,EAAA08C,EAAA97C,IAAAP,EACA,OAAA44B,WAAAp3B,OAAA,EAAA7B,KAAAy8C,IACAz8C,IACAA,EAAAy8C,GAAA,KACAD,IAAAlnB,MAAA,EAAAv1B,EAAAy8C,EAAA5qB,QAAA5xB,IAAA0gC,OAAA8b,EAAAlnB,MAAAv1B,EAAA,IACA28C,EAAA5a,OAAAzhC,IAEAs8C,GAAAH,EAAApzC,KAAAszC,EAAA94C,IAAAvD,GACAo8C,GAAAE,KAEAN,IAEAC,EAGA,QAAAM,KACAC,GAAAP,MAAAQ,iBAEA,QAAAC,KAEA,IADA,GAAA37C,GAAAE,EAAAu7C,GAAAP,MACAl7C,EAAAE,EAAA07C,aAAA17C,EAAAF,CACA,OAAAE,GAEA,QAAA27C,GAAAtR,GAEA,IADA,GAAA0Q,GAAA,GAAAF,GAAAp8C,EAAA,EAAAc,EAAAo4B,UAAAp3B,SACA9B,EAAAc,GAAAw7C,EAAApjB,UAAAl5B,IAAAq8C,EAAAC,EAaA,OAZAA,GAAAa,GAAA,SAAAC,EAAAC,GACA,gBAAAC,GACA,IACA,GAAAC,GAAAD,EAAAL,YAAAH,GAAAP,KACAe,GAAA1R,SACAkR,GAAAP,MAAAe,EACAhB,EAAAgB,EAAAx5B,MAAA9f,MAAAo5C,EAAAC,GACS,QACTP,GAAAP,MAAAgB,KAIAjB,EAWA,QAAAkB,GAAAC,GAEA,MADAC,IAAAD,EAAAE,IACAF,EAyCA,QAAAG,GAAAC,GACA,wBAAAA,KAAA,WACA,MAAAC,IAAAD,EAAAl+C,OAgBA,QAAAo+C,GAAAF,GACA,wBAAAA,KAAA,WACA,MAAAG,IAAAH,EAAAl+C,OAkCA,QAAAs+C,GAAA39C,EAAA+C,GAEA,QAAA66C,KACAv+C,KAAAw+C,gBAAA79C,GAEA,QAAA89C,KACAz+C,KAAA0+C,kBAAA/9C,EAAAg+C,MAAAh+C,EAAAi+C,OAEA,QAAAC,KACA7+C,KAAA8+C,aAAAn+C,EAAA+C,GAEA,QAAAq7C,KACA/+C,KAAAg/C,eAAAr+C,EAAAg+C,MAAAh+C,EAAAi+C,MAAAl7C,GAEA,QAAAu7C,KACA,GAAAtE,GAAAj3C,EAAAW,MAAArE,KAAAu5B,UACA,OAAAohB,EAAA36C,KAAAw+C,gBAAA79C,GAAgDX,KAAA8+C,aAAAn+C,EAAAg6C,GAEhD,QAAAuE,KACA,GAAAvE,GAAAj3C,EAAAW,MAAArE,KAAAu5B,UACA,OAAAohB,EAAA36C,KAAA0+C,kBAAA/9C,EAAAg+C,MAAAh+C,EAAAi+C,OAAoE5+C,KAAAg/C,eAAAr+C,EAAAg+C,MAAAh+C,EAAAi+C,MAAAjE,GAEpE,MArBAh6C,GAAAw8C,GAAAgC,GAAAC,QAAAz+C,GAqBA,MAAA+C,EAAA/C,EAAAi+C,MAAAH,EAAAF,EAAA,kBAAA76C,GAAA/C,EAAAi+C,MAAAM,EAAAD,EAAAt+C,EAAAi+C,MAAAG,EAAAF,EAEA,QAAAQ,GAAA39C,GACA,MAAAA,GAAA0sC,OAAA3rC,QAAA,YAmBA,QAAA68C,GAAA3+C,GACA,UAAA2O,QAAA,aAAA6tC,GAAAoC,QAAA5+C,GAAA,kBAEA,QAAA6+C,GAAA7+C,GACA,OAAAA,EAAA,IAAAytC,OAAA/nC,MAAA,SAEA,QAAAo5C,GAAA9+C,EAAA+C,GAGA,QAAAg8C,KAEA,IADA,GAAAr/C,IAAA,IACAA,EAAAc,GAAAR,EAAAN,GAAAL,KAAA0D,GAEA,QAAAi8C,KAEA,IADA,GAAAt/C,IAAA,EAAAs6C,EAAAj3C,EAAAW,MAAArE,KAAAu5B,aACAl5B,EAAAc,GAAAR,EAAAN,GAAAL,KAAA26C,GARAh6C,EAAA6+C,EAAA7+C,GAAAqD,IAAA47C,EACA,IAAAz+C,GAAAR,EAAAwB,MASA,yBAAAuB,GAAAi8C,EAAAD,EAEA,QAAAE,GAAAj/C,GACA,GAAAk/C,GAAAP,EAAA3+C,EACA,iBAAAq5C,EAAAt2C,GACA,GAAAjD,EAAAu5C,EAAA8F,UAAA,MAAAp8C,GAAAjD,EAAA2D,IAAAzD,GAAAF,EAAA2hC,OAAAzhC,EACA,IAAAF,GAAAu5C,EAAA+F,aAAA,YACAr8C,IACAm8C,EAAAj1C,UAAA,EACAi1C,EAAA32C,KAAAzI,IAAAu5C,EAAA8E,aAAA,QAAAO,EAAA5+C,EAAA,IAAAE,KAEAq5C,EAAA8E,aAAA,QAAAO,EAAA5+C,EAAAgC,QAAAo9C,EAAA,QAoBA,QAAAG,GAAAr/C,EAAA+C,EAAAu8C,GACA,QAAAC,KACAlgD,KAAAmgD,MAAAC,eAAAz/C,GAEA,QAAA0/C,KACArgD,KAAAmgD,MAAAG,YAAA3/C,EAAA+C,EAAAu8C,GAEA,QAAAM,KACA,GAAA5F,GAAAj3C,EAAAW,MAAArE,KAAAu5B,UACA,OAAAohB,EAAA36C,KAAAmgD,MAAAC,eAAAz/C,GAAqDX,KAAAmgD,MAAAG,YAAA3/C,EAAAg6C,EAAAsF,GAErD,aAAAv8C,EAAAw8C,EAAA,kBAAAx8C,GAAA68C,EAAAF,EAUA,QAAAG,GAAA7/C,EAAA+C,GACA,QAAA+8C,WACAzgD,MAAAW,GAEA,QAAA+/C,KACA1gD,KAAAW,GAAA+C,EAEA,QAAAi9C,KACA,GAAAhG,GAAAj3C,EAAAW,MAAArE,KAAAu5B,UACA,OAAAohB,QAAA36C,MAAAW,GAAuCX,KAAAW,GAAAg6C,EAEvC,aAAAj3C,EAAA+8C,EAAA,kBAAA/8C,GAAAi9C,EAAAD,EA4BA,QAAAE,GAAAjgD,GACA,QAAAwpC,KACA,GAAA+P,GAAAl6C,KAAAi6C,cAAA4G,EAAA7gD,KAAA8gD,YACA,OAAAD,KAAAE,IAAA7G,EAAAC,gBAAA2G,eAAAC,GAAA7G,EAAA8G,cAAArgD,GAAAu5C,EAAA+G,gBAAAJ,EAAAlgD,GAEA,QAAAugD,KACA,MAAAlhD,MAAAi6C,cAAAgH,gBAAAtgD,EAAAg+C,MAAAh+C,EAAAi+C,OAEA,wBAAAj+C,QAAAw8C,GAAAgC,GAAAC,QAAAz+C,IAAAi+C,MAAAsC,EAAA/W,EAYA,QAAAgX,KACA,GAAA1zB,GAAAztB,KAAAohD,UACA3zB,MAAA4zB,YAAArhD,MAmFA,QAAAshD,GAAA/3C,GACA,OACAmb,SAAAnb,GAoBA,QAAAg4C,GAAArD,GACA,kBACA,MAAAsD,IAAAxhD,KAAAk+C,IAmBA,QAAAuD,GAAAh8C,GAEA,MADA8zB,WAAAp3B,SAAAsD,EAAA60C,GACA,SAAAC,EAAAC,GACA,MAAAD,IAAAC,EAAA/0C,EAAA80C,EAAA71B,SAAA81B,EAAA91B,WAAA61B,GAAAC,GAQA,QAAAkH,GAAA5D,EAAAhkB,GACA,OAAA6nB,GAAA,EAAAnhD,EAAAs9C,EAAA37C,OAAsCw/C,EAAAnhD,EAAOmhD,IAC7C,OAAA3H,GAAAzW,EAAAua,EAAA6D,GAAAthD,EAAA,EAAAc,EAAAoiC,EAAAphC,OAAgE9B,EAAAc,EAAOd,KACvE25C,EAAAzW,EAAAljC,KAAAy5B,EAAAkgB,EAAA35C,EAAAshD,EAGA,OAAA7D,GA0BA,QAAA8D,GAAAz+C,GAEA,MADA46C,IAAA56C,EAAA0+C,IACA1+C,EA+BA,QAAA2+C,GAAAC,GACA,GAAAC,GAAAC,CACA,iBAAAvhD,EAAAL,EAAAshD,GACA,GAAA3H,GAAAzW,EAAAwe,EAAAJ,GAAAtW,OAAAlqC,EAAAoiC,EAAAphC,MAGA,KAFAw/C,GAAAM,MAAAN,EAAAK,EAAA,GACA3hD,GAAA2hD,MAAA3hD,EAAA,KACA25C,EAAAzW,EAAAye,SAAA7gD,IACA,MAAA64C,IAsCA,QAAAkI,GAAA/9B,EAAA84B,EAAAkF,GAKA,QAAAC,KACA,GAAA9hD,GAAAN,KAAAW,EACAL,KACAN,KAAAqiD,oBAAAl+B,EAAA7jB,IAAAgiD,SACAtiD,MAAAW,IAGA,QAAA4hD,KACA,GAAAjiD,GAAAynC,EAAAkV,EAAAuF,GAAAjpB,WACA6oB,GAAA7hD,KAAAP,MACAA,KAAAyiD,iBAAAt+B,EAAAnkB,KAAAW,GAAAL,IAAAgiD,EAAAH,GACA7hD,EAAAwB,EAAAm7C,EAEA,QAAAyF,KACA,GAAAn8C,GAAAs5C,EAAA,GAAAvwC,QAAA,eAAA6tC,GAAAoC,QAAAp7B,GAAA,IACA,QAAAxjB,KAAAX,MACA,GAAAuG,EAAA5F,EAAA4F,MAAAs5C,GAAA,CACA,GAAAv/C,GAAAN,KAAAW,EACAX,MAAAqiD,oBAAA97C,EAAA,GAAAjG,IAAAgiD,SACAtiD,MAAAW,IAvBA,GAAAA,GAAA,OAAAwjB,EAAA9jB,EAAA8jB,EAAA+N,QAAA,KAAA6V,EAAA4a,CACAtiD,GAAA,IAAA8jB,IAAAyR,MAAA,EAAAv1B,GACA,IAAAmkC,GAAAoe,GAAA1hD,IAAAijB,EAyBA,OAxBAqgB,KAAArgB,EAAAqgB,EAAAuD,EAAA8a,GAwBAxiD,EAAA48C,EAAAsF,EAAAH,EAAAnF,EAAAT,EAAAkG,EAWA,QAAAC,GAAA1F,EAAAS,GACA,gBAAA97C,GACA,GAAAf,GAAAs8C,GAAAP,KACAO,IAAAP,MAAAh7C,EACA87C,EAAA,GAAA19C,KAAA0kB,QACA,KACAu4B,EAAA54C,MAAArE,KAAA09C,GACO,QACPP,GAAAP,MAAA/7C,IAIA,QAAAgiD,GAAA5F,EAAAS,GACA,GAAAp9C,GAAAqiD,EAAA1F,EAAAS,EACA,iBAAA97C,GACA,GAAAqqC,GAAAjsC,KAAA8iD,EAAAlhD,EAAAmhD,aACAD,SAAA7W,GAAA,EAAA6W,EAAAE,wBAAA/W,KACA3rC,EAAAC,KAAA0rC,EAAArqC,IAKA,QAAAqhD,IAAAjJ,GACA,GAAAr5C,GAAA,oBAAAuiD,GAAAC,EAAA,QAAAxiD,EAAA2B,EAAA66C,GAAAiG,OAAAhJ,EAAAJ,IAAA+C,GAAA,YAAAp8C,EAAAu8C,GAAAH,GAAA,YAAAp8C,EAAAu8C,GAAAH,GAAA,cAAAp8C,EAAAu8C,EAIA,IAHA,MAAAmG,KACAA,KAAA,iBAAArJ,KAAAqC,EAAArC,EAAAmG,MAAA,eAEAkD,GAAA,CACA,GAAAlD,GAAApG,EAAAC,GAAAmG,MAAAiD,EAAAjD,EAAAkD,GACAlD,GAAAkD,IAAA,OAEA,gBAAAC,GAGA,GAFAhhD,EAAAy6C,GAAAp8C,EAAA,MACA0iD,KAAAlD,EAAAkD,IAAAD,GACAE,EAAA,CACA,GAAAC,GAAA,WACAjhD,EAAAy6C,GAAAoG,EAAA,MAEA7gD,GAAAy6C,GAAAoG,EAAA,WACAjG,IACAqG,MACS,GACT94B,WAAA84B,EAAA,KAQA,QAAAC,IAAAC,EAAA7hD,GACAA,EAAA8hD,iBAAA9hD,IAAA8hD,eAAA,GACA,IAAAC,GAAAF,EAAAG,iBAAAH,CACA,IAAAE,EAAAE,eAAA,CACA,GAAAC,GAAAH,EAAAE,gBACA,IAAAE,GAAA,GACA,GAAAliD,GAAAu4C,EAAAqJ,EACA,IAAA5hD,EAAAmiD,SAAAniD,EAAAoiD,QAAA,CACAN,EAAAxG,GAAAiG,OAAA,QAAAc,OAAA,OAAA/D,OACAjU,SAAA,WACAiY,IAAA,EACApJ,KAAA,EACAqJ,OAAA,EACAC,QAAA,EACAC,OAAA,QACW,YACX,IAAAC,GAAAZ,EAAA,MAAAa,cACAT,MAAAQ,EAAAE,GAAAF,EAAA3iD,GACA+hD,EAAAvhB,UAMA,MAHA2hB,KAAAD,EAAAnJ,EAAA/4C,EAAA8iD,MAAAZ,EAAAa,EAAA/iD,EAAAgjD,QAAkEd,EAAAnJ,EAAA/4C,EAAAijD,QAClEf,EAAAa,EAAA/iD,EAAAkjD,SACAhB,IAAAiB,gBAAAtB,EAAAe,eAAAQ,YACAlB,EAAAnJ,EAAAmJ,EAAAa,GAEA,GAAAM,GAAAxB,EAAAyB,uBACA,QAAAtjD,EAAAijD,QAAAI,EAAAlK,KAAA0I,EAAA0B,WAAAvjD,EAAAkjD,QAAAG,EAAAd,IAAAV,EAAA2B,WA2DA,QAAAC,MACA,MAAAlI,IAAAP,MAAA8G,eAAA,GAAA4B,WAWA,QAAAC,IAAA5K,GACA,MAAAA,GAAA,IAAAA,EAAA,OAEA,QAAA6K,IAAAjL,EAAAC,EAAA/5C,GACA,OAAA+5C,EAAA,GAAAD,EAAA,KAAA95C,EAAA,GAAA85C,EAAA,KAAAC,EAAA,GAAAD,EAAA,KAAA95C,EAAA,GAAA85C,EAAA,IAEA,QAAAkL,IAAA9K,GACA,MAAAA,GAAA,IAAAA,GAAA,EAAA+K,GAAAloB,KAAAmoB,KAAAhL,GAEA,QAAAiL,IAAAjL,GACA,MAAAA,GAAA,EAAAkL,GAAAlL,GAAA,GAAAkL,GAAAroB,KAAAsoB,KAAAnL,GAEA,QAAAoL,IAAApL,GACA,QAAAA,EAAAnd,KAAAwoB,IAAArL,IAAA,EAAAA,GAAA,EAEA,QAAAsL,IAAAtL,GACA,QAAAA,EAAAnd,KAAAwoB,IAAArL,IAAA,EAAAA,GAAA,EAEA,QAAAuL,IAAAvL,GACA,QAAAA,EAAAnd,KAAAwoB,IAAA,EAAArL,IAAA,IAAAA,EAAA,GAEA,QAAAwL,IAAAxL,GACA,OAAAA,EAAAnd,KAAA4oB,IAAAzL,EAAA,IAAAA,EAuSA,QAAA0L,OAKA,QAAAC,IAAAC,EAAA7kD,EAAApB,GACA,MAAAN,gBAAAsmD,KAAAtmD,KAAAumD,KAAAvmD,KAAA0B,UAAA1B,KAAAM,OAAAi5B,UAAAp3B,OAAA,EAAAokD,YAAAD,IAAA,GAAAA,IAAAC,MAAA7kD,EAAA6kD,EAAAjmD,GAAAkmD,GAAA,GAAAD,EAAAE,GAAAH,IAAA,GAAAA,IAAAC,EAAA7kD,EAAApB,GAcA,QAAAomD,IAAAH,EAAA7kD,EAAApB,GAOA,QAAA2B,GAAAskD,GAEA,MADAA,GAAA,IAAAA,GAAA,IAA4BA,EAAA,IAAAA,GAAA,KAC5BA,EAAA,GAAAI,GAAAC,EAAAD,GAAAJ,EAAA,GACAA,EAAA,IAAAK,EACAL,EAAA,IAAAI,GAAAC,EAAAD,IAAA,IAAAJ,GAAA,GACAI,EAEA,QAAAE,GAAAN,GACA,MAAA/oB,MAAA4a,MAAA,IAAAn2C,EAAAskD,IAdA,GAAAI,GAAAC,CAgBA,OAfAL,GAAAtd,MAAAsd,GAAA,GAAAA,GAAA,OAAAA,EAAA,IAAAA,EACA7kD,EAAAunC,MAAAvnC,GAAA,EAAAA,EAAA,IAAAA,EAAA,IAAAA,EACApB,IAAA,IAAAA,EAAA,IAAAA,EACAsmD,EAAAtmD,GAAA,GAAAA,GAAA,EAAAoB,GAAApB,EAAAoB,EAAApB,EAAAoB,EACAilD,EAAA,EAAArmD,EAAAsmD,EAWA,GAAAE,IAAAD,EAAAN,EAAA,KAAAM,EAAAN,GAAAM,EAAAN,EAAA,MAGA,QAAAQ,IAAAR,EAAA9lD,EAAAH,GACA,MAAAN,gBAAA+mD,KAAA/mD,KAAAumD,KAAAvmD,KAAAS,UAAAT,KAAAM,OAAAi5B,UAAAp3B,OAAA,EAAAokD,YAAAQ,IAAA,GAAAA,IAAAR,MAAA9lD,EAAA8lD,EAAAjmD,GAAAimD,YAAAS,IAAAC,GAAAV,EAAAjmD,EAAAimD,EAAAhM,EAAAgM,EAAA/L,GAAAyM,IAAAV,EAAAW,IAAAX,EAAApJ,GAAAgK,IAAAZ,IAAAa,EAAAb,EAAAvkD,EAAAukD,EAAA/L,IAAAl6C,EAAAimD,EAAAhM,EAAAgM,EAAA/L,GAAA,GAAAuM,IAAAR,EAAA9lD,EAAAH,GAYA,QAAA+mD,IAAAd,EAAA9lD,EAAAH,GAGA,MAFA2oC,OAAAsd,OAAA,GACAtd,MAAAxoC,OAAA,GACA,GAAAumD,IAAA1mD,EAAAk9B,KAAA8pB,IAAAf,GAAAgB,IAAA9mD,EAAA+8B,KAAA4oB,IAAAG,GAAA9lD,GAGA,QAAAumD,IAAA1mD,EAAAi6C,EAAAC,GACA,MAAAx6C,gBAAAgnD,KAAAhnD,KAAAM,KAAAN,KAAAu6C,UAAAv6C,KAAAw6C,OAAAjhB,UAAAp3B,OAAA,EAAA7B,YAAA0mD,IAAA,GAAAA,IAAA1mD,MAAAi6C,EAAAj6C,EAAAk6C,GAAAl6C,YAAAymD,IAAAM,GAAA/mD,EAAAimD,EAAAjmD,EAAAG,EAAAH,KAAA4mD,IAAA5mD,EAAAwmD,GAAAxmD,IAAA8mD,EAAA9mD,EAAA0B,EAAA1B,EAAAk6C,GAAA,GAAAwM,IAAA1mD,EAAAi6C,EAAAC,GAcA,QAAAgN,IAAAlnD,EAAAi6C,EAAAC,GACA,GAAAmK,IAAArkD,EAAA,QAAAq6C,EAAAgK,EAAApK,EAAA,IAAAsC,EAAA8H,EAAAnK,EAAA,GAIA,OAHAG,GAAA8M,GAAA9M,GAAA+M,GACA/C,EAAA8C,GAAA9C,GAAAgD,GACA9K,EAAA4K,GAAA5K,GAAA+K,GACA,GAAAd,IAAAe,GAAA,UAAAlN,EAAA,UAAAgK,EAAA,SAAA9H,GAAAgL,IAAA,QAAAlN,EAAA,UAAAgK,EAAA,QAAA9H,GAAAgL,GAAA,SAAAlN,EAAA,SAAAgK,EAAA,UAAA9H,IAEA,QAAAoK,IAAA3mD,EAAAi6C,EAAAC,GACA,MAAAl6C,GAAA,KAAAymD,IAAAvpB,KAAAsqB,MAAAtN,EAAAD,GAAAwN,GAAAvqB,KAAAwqB,KAAAzN,IAAAC,KAAAl6C,GAAA,GAAAymD,IAAAtM,QAAAn6C,GAEA,QAAAmnD,IAAA9M,GACA,MAAAA,GAAA,WAAAA,SAAA,eAEA,QAAAsN,IAAAtN,GACA,MAAAA,GAAA,QAAAnd,KAAA0qB,IAAAvN,EAAA,cAAAA,EAAA,KAEA,QAAAkN,IAAAT,GACA,MAAA5pB,MAAA4a,MAAA,KAAAgP,GAAA,aAAAA,EAAA,MAAA5pB,KAAA0qB,IAAAd,EAAA,cAGA,QAAAN,IAAAM,EAAAplD,EAAAw4C,GACA,MAAAx6C,gBAAA8mD,KAAA9mD,KAAAonD,MAAApnD,KAAAgC,WAAAhC,KAAAw6C,QAAAjhB,UAAAp3B,OAAA,EAAAilD,YAAAN,IAAA,GAAAA,IAAAM,MAAAplD,EAAAolD,EAAA5M,GAAAgM,GAAA,GAAAY,EAAAN,GAAAJ,IAAA,GAAAI,IAAAM,EAAAplD,EAAAw4C,GAEA,QAAA2N,IAAAzkD,GACA,UAAAojD,IAAApjD,GAAA,GAAAA,GAAA,UAAAA,GAEA,QAAA0kD,IAAA1kD,GACA,MAAAykD,IAAAzkD,GAAA,GAsBA,QAAA2kD,IAAApmD,GACA,MAAAA,GAAA,OAAAu7B,KAAA8S,IAAA,EAAAruC,GAAAwzB,SAAA,IAAA+H,KAAAkT,IAAA,IAAAzuC,GAAAwzB,SAAA,IAEA,QAAA+wB,IAAA8B,EAAAnB,EAAAoB,GACA,GAAA5B,GAAAC,EAAA4B,EAAApB,EAAA,EAAAplD,EAAA,EAAAw4C,EAAA,CAEA,IADAmM,EAAA,mBAAAhwB,KAAA2xB,IAAAvc,eAGA,OADA6a,EAAAD,EAAA,GAAAtgD,MAAA,KACAsgD,EAAA,IACA,UAEA,MAAA4B,GAAAxoC,WAAA6mC,EAAA,IAAA7mC,WAAA6mC,EAAA,QAAA7mC,WAAA6mC,EAAA,QAGA,WAEA,MAAAO,GAAAsB,GAAA7B,EAAA,IAAA6B,GAAA7B,EAAA,IAAA6B,GAAA7B,EAAA,KAIA,OAAA4B,EAAAE,GAAAxnD,IAAAonD,IACAnB,EAAAqB,EAAApB,EAAAoB,EAAAxmD,EAAAwmD,EAAAhO,IAEA,MAAA8N,GAAA,MAAAA,EAAA3uB,OAAA,IAAAsP,MAAAuf,EAAAvoC,SAAAqoC,EAAA1yB,MAAA,UACA,IAAA0yB,EAAAnmD,QACAilD,GAAA,KAAAoB,IAAA,EACApB,MAAA,EACAplD,EAAA,IAAAwmD,EACAxmD,MAAA,EACAw4C,EAAA,GAAAgO,EACAhO,MAAA,GACO,IAAA8N,EAAAnmD,SACPilD,GAAA,SAAAoB,IAAA,GACAxmD,GAAA,MAAAwmD,IAAA,EACAhO,EAAA,IAAAgO,IAGArB,EAAAC,EAAAplD,EAAAw4C,IAEA,QAAAiM,IAAAW,EAAAplD,EAAAw4C,GACA,GAAA+L,GAAA7kD,EAAAgvC,EAAAlT,KAAAkT,IAAA0W,GAAA,IAAAplD,GAAA,IAAAw4C,GAAA,KAAAlK,EAAA9S,KAAA8S,IAAA8W,EAAAplD,EAAAw4C,GAAA95C,EAAA4vC,EAAAI,EAAApwC,GAAAgwC,EAAAI,GAAA,CASA,OARAhwC,IACAgB,EAAApB,EAAA,GAAAI,GAAA4vC,EAAAI,GAAAhwC,GAAA,EAAA4vC,EAAAI,GACA6V,EAAAa,GAAA9W,GAAAtuC,EAAAw4C,GAAA95C,GAAAsB,EAAAw4C,EAAA,KAAsDx4C,GAAAsuC,GAAAkK,EAAA4M,GAAA1mD,EAAA,GAAwC0mD,EAAAplD,GAAAtB,EAAA,EAC9F6lD,GAAA,KAEAA,EAAA9L,IACA/4C,EAAApB,EAAA,GAAAA,EAAA,IAAAimD,GAEA,GAAAD,IAAAC,EAAA7kD,EAAApB,GAEA,QAAA4mD,IAAAE,EAAAplD,EAAAw4C,GACA4M,EAAAuB,GAAAvB,GACAplD,EAAA2mD,GAAA3mD,GACAw4C,EAAAmO,GAAAnO,EACA,IAAAG,GAAAsN,IAAA,SAAAb,EAAA,SAAAplD,EAAA,SAAAw4C,GAAAkN,IAAA/C,EAAAsD,IAAA,SAAAb,EAAA,SAAAplD,EAAA,QAAAw4C,GAAAmN,GACA,OAAAX,IAAA,IAAArC,EAAA,QAAAhK,EAAAgK,GAAA,KAAAA,EADAsD,IAAA,SAAAb,EAAA,QAAAplD,EAAA,SAAAw4C,GAAAoN,MAGA,QAAAe,IAAAvB,GACA,OAAAA,GAAA,aAAAA,EAAA,MAAA5pB,KAAA0qB,KAAAd,EAAA,iBAEA,QAAAqB,IAAAhoD,GACA,GAAAgkD,GAAA1kC,WAAAtf,EACA,aAAAA,EAAAk5B,OAAAl5B,EAAA0B,OAAA,GAAAq7B,KAAA4a,MAAA,KAAAqM,KA2JA,QAAAmE,IAAA3mD,GACA,wBAAAA,KAAA,WACA,MAAAA,IAKA,QAAA4mD,IAAAC,GACA,gBAAAC,EAAAC,EAAAlvB,GAGA,MAFA,KAAAP,UAAAp3B,QAAA,kBAAA6mD,KAAAlvB,EAAAkvB,EACAA,EAAA,MACAC,GAAAF,EAAAC,EAAAF,EAAAhvB,IAGA,QAAAmvB,IAAAF,EAAAC,EAAAF,EAAAhvB,GAMA,QAAAovB,KACA,GAAA7jD,GAAA8jD,EAAAC,EAAAD,MACA,KAAAA,GAAAE,GAAAD,IAAAD,GAAA,KAAAA,EAAA,WAAAA,EAAA,CACA,IACA9jD,EAAAyjD,EAAAvoD,KAAA+oD,EAAAF,GACS,MAAAxnD,GAET,WADA+6C,GAAA4M,MAAAhpD,KAAA+oD,EAAA1nD,GAGA+6C,EAAA6M,KAAAjpD,KAAA+oD,EAAAjkD,OAEAs3C,GAAA4M,MAAAhpD,KAAA+oD,EAAAF,GAhBA,GAAAE,MAAgB3M,EAAAQ,GAAAR,SAAA,wCAAA8M,KAAiFL,EAAA,GAAAM,gBAAAC,EAAA,IAwEjG,QAvEA3pD,KAAA4pD,gBAAA,mBAAAR,KAAA,oBAAAlgD,KAAA6/C,KAAAK,EAAA,GAAAQ,iBACA,UAAAR,KAAAS,OAAAT,EAAAU,QAAAZ,EAAAE,EAAAW,mBAAA,WACAX,EAAAY,WAAA,GAAAd,KAgBAE,EAAAa,WAAA,SAAArN,GACA,GAAA/7C,GAAAs8C,GAAAP,KACAO,IAAAP,OACA,KACAD,EAAAuN,SAAA3pD,KAAA+oD,EAAAF,GACO,QACPjM,GAAAP,MAAA/7C,IAGAyoD,EAAAa,OAAA,SAAAxpD,EAAA+C,GAEA,MADA/C,MAAA,IAAAorC,cACAxS,UAAAp3B,OAAA,EAAAsnD,EAAA9oD,IACA,MAAA+C,QAAA+lD,GAAA9oD,GAA8C8oD,EAAA9oD,GAAA+C,EAAA,GAC9C4lD,IAEAA,EAAAN,SAAA,SAAAtlD,GACA,MAAA61B,WAAAp3B,QACA6mD,EAAA,MAAAtlD,EAAA,KAAAA,EAAA,GACA4lD,GAFAN,GAIAM,EAAAK,aAAA,SAAAjmD,GACA,MAAA61B,WAAAp3B,QACAwnD,EAAAjmD,EACA4lD,GAFAK,GAIAL,EAAAR,SAAA,SAAAplD,GAEA,MADAolD,GAAAplD,EACA4lD,IAEA,cAAAz/C,QAAA,SAAAwtC,GACAiS,EAAAjS,GAAA,WACA,MAAAiS,GAAAc,KAAA/lD,MAAAilD,GAAAjS,GAAArW,OAAAwhB,GAAAjpB,gBAGA+vB,EAAAc,KAAA,SAAA/S,EAAA9tC,EAAAuwB,GAIA,GAHA,IAAAP,UAAAp3B,QAAA,kBAAAoH,KAAAuwB,EAAAvwB,IAAA,MACA6/C,EAAAiB,KAAAhT,EAAA0R,GAAA,GACA,MAAAC,GAAA,UAAAS,OAAA,OAAAT,EAAA,QACAI,EAAAkB,iBAAA,OAAA3pD,KAAA8oD,GAAAL,EAAAkB,iBAAA3pD,EAAA8oD,EAAA9oD,GAQA,OAPA,OAAAqoD,GAAAI,EAAAmB,kBAAAnB,EAAAmB,iBAAAvB,GACA,MAAAW,IAAAP,EAAAO,gBACA,MAAA7vB,GAAAwvB,EAAAvM,GAAA,QAAAjjB,GAAAijB,GAAA,gBAAAqM,GACAtvB,EAAA,KAAAsvB,KAEAzM,EAAA6N,WAAAjqD,KAAA+oD,EAAAF,GACAA,EAAAgB,KAAA,MAAA7gD,EAAA,KAAAA,GACA+/C,GAEAA,EAAAmB,MAAA,WAEA,MADArB,GAAAqB,QACAnB,GAEAnM,GAAAuN,OAAApB,EAAA3M,EAAA,MACA,MAAA7iB,EAAAwvB,IAAApoD,IAAAypD,GAAA7wB,IAEA,QAAA6wB,IAAA7wB,GACA,WAAAA,EAAA33B,OAAA,SAAAonD,EAAAH,GACAtvB,EAAA,MAAAyvB,EAAAH,EAAA,OACKtvB,EAEL,QAAAuvB,IAAAD,GACA,GAAAjlC,GAAAilC,EAAAO,YACA,OAAAxlC,IAAA,SAAAA,EAAAilC,EAAAN,SAAAM,EAAAwB,aAgHA,QAAAC,IAAA/wB,EAAAsb,EAAA0V,GACA,GAAA3pD,GAAAo4B,UAAAp3B,MACAhB,GAAA,IAAAi0C,EAAA,GACAj0C,EAAA,IAAA2pD,EAAA9Z,KAAAlK,MACA,IAAAf,GAAA+kB,EAAA1V,EAAA2V,GACAtqD,EAAAq5B,EACAkxB,EAAAjlB,EACA5kC,EAAA,KASA,OAPA8pD,OAAA9pD,EAAA4pD,EAAyDG,GAAAH,EACzDE,GAAAF,EACAI,KACAC,GAAAnkB,aAAAmkB,IACAD,GAAA,EACAE,GAAAC,KAEAP,EAEA,QAAAO,MACA,GAAAxkB,GAAAykB,KAAAnW,EAAAoW,KAAA1kB,CACAsO,GAAA,IACAxM,SAAAwM,KACAnO,aAAAmkB,IACAA,GAAA3gC,WAAA6gC,GAAAlW,IAEA+V,GAAA,IAEAA,GAAA,EACAE,GAAAC,KAOA,QAAAC,MAEA,IADA,GAAAzkB,GAAAkK,KAAAlK,MAAAikB,EAAAG,GACAH,GACAjkB,GAAAikB,EAAAC,GAAAD,EAAAtqD,EAAAqmC,EAAAikB,EAAAC,KAAAD,EAAAtqD,EAAA,MACAsqD,IAAA5pD,CAEA,OAAA2lC,GAEA,QAAA0kB,MAEA,IADA,GAAAC,GAAAC,EAAAR,GAAAnlB,EAAA1Y,IACAq+B,GACAA,EAAAjrD,GACAirD,EAAAV,EAAAjlB,MAAA2lB,EAAAV,GACAU,GAAAD,EAAAC,GAAAvqD,GAEAuqD,EAAAD,IAAAtqD,EAAAuqD,EAAAvqD,EAAA+pD,GAAAQ,EAAAvqD,CAIA,OADA8pD,IAAAQ,EACA1lB,EAEA,QAAA4lB,IAAAhR,EAAAl5C,GACA,MAAAA,IAAAk5C,EAAAnd,KAAAwU,KAAAxU,KAAAouB,IAAAjR,GAAAnd,KAAAquB,MAAA,GAgBA,QAAAC,IAAAprD,EAAAL,GACA,GAAAg7C,GAAA7d,KAAA0qB,IAAA,KAAA6D,GAAA,EAAA1rD,GACA,QACA2rD,MAAA3rD,EAAA,WAAAK,GACA,MAAAA,GAAA26C,GACO,SAAA36C,GACP,MAAAA,GAAA26C,GAEAvkB,OAAAp2B,GAGA,QAAAurD,IAAAC,GACA,GAAAC,GAAAD,EAAAE,QAAAC,EAAAH,EAAAI,UAAAC,EAAAL,EAAAM,SAAAC,EAAAP,EAAAQ,SAAAC,EAAAJ,GAAAF,EAAA,SAAA3oD,EAAAkpD,GAEA,IADA,GAAAvsD,GAAAqD,EAAAvB,OAAA6oD,KAAArJ,EAAA,EAAA3/C,EAAAuqD,EAAA,GAAApqD,EAAA,EACA9B,EAAA,GAAA2B,EAAA,IACAG,EAAAH,EAAA,EAAA4qD,IAAA5qD,EAAAw7B,KAAA8S,IAAA,EAAAsc,EAAAzqD,IACA6oD,EAAAthD,KAAAhG,EAAAgrC,UAAAruC,GAAA2B,EAAA3B,EAAA2B,OACAG,GAAAH,EAAA,GAAA4qD,KACA5qD,EAAAuqD,EAAA5K,KAAA,GAAA4K,EAAApqD,OAEA,OAAA6oD,GAAAjwB,UAAA5oB,KAAAk6C,IACKlQ,CACL,iBAAA0Q,GACA,GAAAtmD,GAAAumD,GAAAn2B,KAAAk2B,GAAAxrB,EAAA96B,EAAA,QAAAwmD,EAAAxmD,EAAA,QAAAymD,EAAAzmD,EAAA,QAAAuwB,EAAAvwB,EAAA,OAAA0mD,EAAA1mD,EAAA,GAAAqmD,GAAArmD,EAAA,GAAA2mD,EAAA3mD,EAAA,GAAAk3B,EAAAl3B,EAAA,GAAA4d,EAAA5d,EAAA,GAAAylD,EAAA,EAAA7b,EAAA,GAAAgd,EAAA,GAAAC,GAAA,EAAAC,GAAA,CAMA,QALA5vB,SAAAiR,UAAA,KACAue,GAAA,MAAA5rB,GAAA,MAAA0rB,KACAE,EAAA5rB,EAAA,IACA0rB,EAAA,KAEA5oC,GACA,QACA+oC,GAAA,EACA/oC,EAAA,GACA,MAEA,SACA6nC,EAAA,IACAmB,EAAA,IACAhpC,EAAA,GACA,MAEA,SACA6nC,EAAA,IACAmB,EAAA,IACAhpC,EAAA,GACA,MAEA,SACA,QACA,QACA,QACA,MAAA2S,IAAAqZ,EAAA,IAAAhsB,EAAA4nB,cAEA,SACAshB,GAAA,CAEA,SACAD,GAAA,EACA3vB,EAAA,CACA,MAEA,SACAuuB,GAAA,EACA7nC,EAAA,IAGA,MAAA2S,IAAAqZ,EAAAsc,EAAA,GAAAU,EAAAV,EAAA,IACA,KAAAtoC,GAAAsZ,IAAAtZ,EAAA,KACA,MAAAsZ,IACA,KAAAtZ,EAAAsZ,EAAAD,KAAA8S,IAAA,EAAA9S,KAAAkT,IAAA,GAAAjT,IAA0E,KAAAtZ,GAAA,KAAAA,IAAAsZ,EAAAD,KAAA8S,IAAA,EAAA9S,KAAAkT,IAAA,GAAAjT,MAE1EtZ,EAAAmpC,GAAApsD,IAAAijB,IAAAopC,EACA,IAAAC,GAAAP,GAAAC,CACA,iBAAAxpD,GACA,GAAA+pD,GAAAN,CACA,IAAAC,GAAA1pD,EAAA,UACA,IAAAgqD,GAAAhqD,EAAA,OAAAA,GAAA,EAAAA,EAAA,GAAAA,KAAA,WAAAspD,EAAA,GAAAA,CACA,IAAAhB,EAAA,GACA,GAAA2B,GAAAxQ,GAAAyQ,aAAAlqD,EAAA+5B,EACA/5B,GAAAiqD,EAAA3B,MAAAtoD,GACA+pD,EAAAE,EAAA72B,OAAAq2B,MAEAzpD,IAAAsoD,CAEAtoD,GAAAygB,EAAAzgB,EAAA+5B,EACA,IAAAgI,GAAAD,EAAAnlC,EAAAqD,EAAAq+B,YAAA,IACA,IAAA1hC,EAAA,GACA,GAAAshD,GAAA0L,EAAA3pD,EAAAq+B,YAAA,OACA4f,GAAA,GAAAlc,EAAA/hC,EAAA8hC,EAAA,KAAgDC,EAAA/hC,EAAAgrC,UAAA,EAAAiT,GAAAnc,EAAA9hC,EAAAgrC,UAAAiT,QAEhDlc,GAAA/hC,EAAAgrC,UAAA,EAAAruC,GACAmlC,EAAA2mB,EAAAzoD,EAAAgrC,UAAAruC,EAAA,IAEA4sD,GAAAC,IAAAznB,EAAAknB,EAAAlnB,EAAApY,KACA,IAAAlrB,GAAAguC,EAAAhuC,OAAAsjC,EAAAtjC,OAAAqjC,EAAArjC,QAAAqrD,EAAA,EAAAE,EAAAvrD,QAAAkiD,EAAAliD,EAAAyqD,EAAA,GAAAjnD,OAAAxD,EAAAyqD,EAAAzqD,EAAA,GAAAgQ,KAAAkvB,GAAA,EAIA,OAHAmsB,KAAA/nB,EAAAknB,EAAAtI,EAAA5e,EAAA4e,EAAAliD,OAAAyqD,EAAApnB,EAAArjC,OAAAkrB,MACAqgC,GAAAvd,EACAzsC,EAAA+hC,EAAAD,GACA,MAAAunB,EAAAW,EAAAhqD,EAAA2gD,EAAA,MAAA0I,EAAA1I,EAAAqJ,EAAAhqD,EAAA,MAAAqpD,EAAA1I,EAAA3V,UAAA,EAAAvsC,IAAA,GAAAurD,EAAAhqD,EAAA2gD,EAAA3V,UAAAvsC,GAAAurD,GAAAF,EAAA9pD,EAAA2gD,EAAA3gD,IAAA+pD,IAkCA,QAAAF,IAAA5S,GACA,MAAAA,GAAA,GAGA,QAAAkT,MACA7tD,KAAA8B,EAAA,GAAAkvC,MAAAzX,UAAAp3B,OAAA,EAAA6uC,KAAA8c,IAAAzpD,MAAArE,KAAAu5B,qBAAA,IAiEA,QAAAw0B,IAAAnP,EAAAlsB,EAAA/J,GACA,QAAAyvB,GAAA4V,GACA,GAAAC,GAAArP,EAAAoP,GAAAE,EAAApoD,EAAAmoD,EAAA,EACA,OAAAD,GAAAC,EAAAC,EAAAF,EAAAC,EAAAC,EAEA,QAAAlc,GAAAgc,GAEA,MADAt7B,GAAAs7B,EAAApP,EAAA,GAAAuP,IAAAH,EAAA,OACAA,EAEA,QAAAloD,GAAAkoD,EAAA3S,GAEA,MADA3oB,GAAAs7B,EAAA,GAAAG,KAAAH,GAAA3S,GACA2S,EAEA,QAAAtW,GAAA+T,EAAAC,EAAA0C,GACA,GAAAroB,GAAAiM,EAAAyZ,GAAAzb,IACA,IAAAoe,EAAA,EACA,KAAAroB,EAAA2lB,GACA/iC,EAAAod,GAAAqoB,GAAApe,EAAAtmC,KAAA,GAAAsnC,OAAAjL,IACArT,EAAAqT,EAAA,OAGA,MAAAA,EAAA2lB,GAAA1b,EAAAtmC,KAAA,GAAAsnC,OAAAjL,IAAArT,EAAAqT,EAAA,EAEA,OAAAiK,GAEA,QAAAqe,GAAA5C,EAAAC,EAAA0C,GACA,IACAD,GAAAN,EACA,IAAAS,GAAA,GAAAT,GAEA,OADAS,GAAAxsD,EAAA2pD,EACA/T,EAAA4W,EAAA5C,EAAA0C,GACO,QACPD,GAAAnd,MAGA4N,EAAA3M,MAAA2M,EACAA,EAAAxG,QACAwG,EAAA5M,OACA4M,EAAA94C,SACA84C,EAAAlH,OACA,IAAA4W,GAAA1P,EAAA0P,IAAAC,GAAA3P,EAMA,OALA0P,GAAArc,MAAAqc,EACAA,EAAAlW,MAAAmW,GAAAnW,GACAkW,EAAAtc,KAAAuc,GAAAvc,GACAsc,EAAAxoD,OAAAyoD,GAAAzoD,GACAwoD,EAAA5W,MAAA2W,EACAzP,EAEA,QAAA2P,IAAAlX,GACA,gBAAA2W,EAAA3S,GACA,IACA8S,GAAAN,EACA,IAAAS,GAAA,GAAAT,GAEA,OADAS,GAAAxsD,EAAAksD,EACA3W,EAAAiX,EAAAjT,GAAAv5C,EACO,QACPqsD,GAAAnd,OAoDA,QAAAwd,IAAAtC,GAEA,QAAAuC,GAAA3hB,GAEA,QAAAwb,GAAA0F,GAEA,IADA,GAAAvtD,GAAAgB,EAAAgjD,EAAAr+C,KAAA/F,GAAA,EAAAshD,EAAA,IACAthD,EAAAc,GACA,KAAA2rC,EAAA4hB,WAAAruD,KACA+F,EAAAsD,KAAAojC,EAAAlX,MAAA+rB,EAAAthD,IACA,OAAAoB,EAAAktD,GAAAluD,EAAAqsC,EAAAnT,SAAAt5B,OAAAI,EAAAqsC,EAAAnT,SAAAt5B,KACAokD,EAAAmK,EAAAnuD,QAAAgkD,EAAAuJ,EAAA,MAAAvsD,EAAA,MAAAhB,EAAA,QAAAgB,IACA2E,EAAAsD,KAAAjJ,GACAkhD,EAAAthD,EAAA,EAIA,OADA+F,GAAAsD,KAAAojC,EAAAlX,MAAA+rB,EAAAthD,IACA+F,EAAA+L,KAAA,IAbA,GAAAhR,GAAA2rC,EAAA3qC,MAwCA,OAzBAmmD,GAAAuG,MAAA,SAAAzoD,GACA,GAAA1F,IACAikD,EAAA,KACAnkD,EAAA,EACAE,EAAA,EACAouD,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,KAEA,IADSC,EAAAzuD,EAAAosC,EAAA1mC,EAAA,IACTA,EAAAjE,OAAA,WACA,MAAAzB,OAAAouD,EAAApuD,EAAAouD,EAAA,MAAApuD,EAAAe,EACA,IAAA2tD,GAAA,MAAA1uD,EAAAwuD,GAAAf,KAAAN,GAAAG,EAAA,IAAAoB,EAAAvB,GAAAM,GAOA,OANA,KAAAztD,GAAAstD,EAAAqB,YAAA3uD,EAAAikD,EAAA,EAAAjkD,EAAAihD,GAAoD,KAAAjhD,IAAA,KAAAA,IACpD,KAAAA,OAAA4B,EAAA,KAAA5B,GAAA,KACAstD,EAAAqB,YAAA3uD,EAAAikD,EAAA,KACAqJ,EAAAqB,YAAA3uD,EAAAikD,EAAA,OAAAjkD,MAAA4B,EAAA,OAAA5B,EAAA4uD,GAAAtB,EAAAuB,SAAA,KAAA7uD,EAAA4B,EAAA,EAAA5B,EAAA8uD,GAAAxB,EAAAuB,SAAA,OACSvB,EAAAqB,YAAA3uD,EAAAikD,EAAAjkD,EAAAF,EAAAE,KACTstD,EAAAyB,SAAA/uD,EAAAouD,GAAApuD,EAAAwuD,EAAA,OAAAxuD,EAAAquD,EAAAruD,EAAAwuD,EAAA,IAAAxuD,EAAAsuD,EAAAtuD,EAAAuuD,GACAG,EAAApB,EAAAlsD,EAAAksD,GAEA1F,EAAA7yB,SAAA,WACA,MAAAqX,IAEAwb,EAEA,QAAA6G,GAAAnB,EAAAlhB,EAAA1mC,EAAAu7C,GAEA,IADA,GAAAlhD,GAAAgB,EAAAupD,EAAA3qD,EAAA,EAAAc,EAAA2rC,EAAA3qC,OAAA3B,EAAA4F,EAAAjE,OACA9B,EAAAc,GAAA,CACA,GAAAwgD,GAAAnhD,EAAA,QAEA,UADAC,EAAAqsC,EAAA4hB,WAAAruD,OAIA,GAFA2qD,EAAAle,EAAAnT,OAAAt5B,OACAoB,EAAAiuD,EAAA1E,IAAA2D,IAAA7hB,EAAAnT,OAAAt5B,KAAA2qD,MACArJ,EAAAlgD,EAAAusD,EAAA5nD,EAAAu7C,IAAA,eACS,IAAAlhD,GAAA2F,EAAAsoD,WAAA/M,KACT,SAGA,MAAAA,GA2HA,QAAAgO,GAAA3B,EAAA5nD,EAAA/F,GACAuvD,EAAAhlD,UAAA,CACA,IAAAzJ,GAAAyuD,EAAAj5B,KAAAvwB,EAAAwvB,MAAAv1B,GACA,OAAAc,IAAA6sD,EAAA1rD,EAAAutD,EAAA3uD,IAAAC,EAAA,GAAA4qC,eAAA1rC,EAAAc,EAAA,GAAAgB,SAAA,EAEA,QAAA2tD,GAAA9B,EAAA5nD,EAAA/F,GACA0vD,EAAAnlD,UAAA,CACA,IAAAzJ,GAAA4uD,EAAAp5B,KAAAvwB,EAAAwvB,MAAAv1B,GACA,OAAAc,IAAA6sD,EAAA1rD,EAAA0tD,EAAA9uD,IAAAC,EAAA,GAAA4qC,eAAA1rC,EAAAc,EAAA,GAAAgB,SAAA,EAEA,QAAA8tD,GAAAjC,EAAA5nD,EAAA/F,GACA6vD,EAAAtlD,UAAA,CACA,IAAAzJ,GAAA+uD,EAAAv5B,KAAAvwB,EAAAwvB,MAAAv1B,GACA,OAAAc,IAAA6sD,EAAAxtD,EAAA2vD,EAAAjvD,IAAAC,EAAA,GAAA4qC,eAAA1rC,EAAAc,EAAA,GAAAgB,SAAA,EAEA,QAAAiuD,GAAApC,EAAA5nD,EAAA/F,GACAgwD,EAAAzlD,UAAA,CACA,IAAAzJ,GAAAkvD,EAAA15B,KAAAvwB,EAAAwvB,MAAAv1B,GACA,OAAAc,IAAA6sD,EAAAxtD,EAAA8vD,EAAApvD,IAAAC,EAAA,GAAA4qC,eAAA1rC,EAAAc,EAAA,GAAAgB,SAAA,EAEA,QAAAouD,GAAAvC,EAAA5nD,EAAA/F,GACA,MAAA8uD,GAAAnB,EAAAY,EAAAnuD,EAAAg1B,WAAArvB,EAAA/F,GAEA,QAAAmwD,GAAAxC,EAAA5nD,EAAA/F,GACA,MAAA8uD,GAAAnB,EAAAY,EAAAjU,EAAAllB,WAAArvB,EAAA/F,GAEA,QAAAowD,GAAAzC,EAAA5nD,EAAA/F,GACA,MAAA8uD,GAAAnB,EAAAY,EAAA8B,EAAAj7B,WAAArvB,EAAA/F,GAEA,QAAAswD,GAAA3C,EAAA5nD,EAAA/F,GACA,GAAAc,GAAAyvD,EAAA1vD,IAAAkF,EAAAwvB,MAAAv1B,KAAA,GAAA0rC,cACA,cAAA5qC,GAAA,GAAA6sD,EAAAvsD,EAAAN,EAAAd,GAnNA,GAAAwwD,GAAA3E,EAAA4E,SAAAC,EAAA7E,EAAA8B,KAAAgD,EAAA9E,EAAAnmB,KAAAkrB,EAAA/E,EAAAgF,QAAAC,EAAAjF,EAAAkF,KAAAC,EAAAnF,EAAAoF,UAAAC,EAAArF,EAAAsF,OAAAC,EAAAvF,EAAAwF,WA2DAjD,GAAAH,IAAA,SAAAxhB,GAEA,QAAAwb,GAAA0F,GACA,IACAG,GAAAN,EACA,IAAAS,GAAA,GAAAH,GAEA,OADAG,GAAAxsD,EAAAksD,EACApP,EAAA0P,GACS,QACTH,GAAAnd,MARA,GAAA4N,GAAA6P,EAAA3hB,EAqBA,OAVAwb,GAAAuG,MAAA,SAAAzoD,GACA,IACA+nD,GAAAN,EACA,IAAAG,GAAApP,EAAAiQ,MAAAzoD,EACA,OAAA4nD,MAAAlsD,EACS,QACTqsD,GAAAnd,OAGAsX,EAAA7yB,SAAAmpB,EAAAnpB,SACA6yB,GAEAmG,EAAAkD,MAAAlD,EAAAH,IAAAqD,MAAAC,EACA,IAAAhB,GAAAzT,GAAAn5C,MAAA+rD,EAAA8B,GAAAV,GAAAnB,EAAA8B,GAAAX,GAAAvB,EAAAiC,GAAAR,GAAAxB,EAAAiC,GAAAT,GAAAhB,EAAAwB,GAAAN,GAAAjB,EAAAwB,GAAAP,GAAArB,EAAA2B,GAAAJ,GAAAtB,EAAA2B,GAAAL,EACAR,GAAApnD,QAAA,SAAApI,EAAApB,GACAuwD,EAAA1sD,IAAAzC,EAAAsqC,cAAA1rC,IAEA,IAAAuuD,IACArU,EAAA,SAAA75C,GACA,MAAA2wD,GAAA3wD,EAAA6uD,WAEAwC,EAAA,SAAArxD,GACA,MAAAywD,GAAAzwD,EAAA6uD,WAEA/U,EAAA,SAAA95C,GACA,MAAA+wD,GAAA/wD,EAAAsxD,aAEAC,EAAA,SAAAvxD,GACA,MAAA6wD,GAAA7wD,EAAAsxD,aAEAvxD,EAAAguD,EAAAoC,GACAnwD,EAAA,SAAAA,EAAAe,GACA,MAAAywD,IAAAxxD,EAAAyxD,UAAA1wD,EAAA,IAEAG,EAAA,SAAAlB,EAAAe,GACA,MAAAywD,IAAAxxD,EAAAyxD,UAAA1wD,EAAA,IAEAqtD,EAAA,SAAApuD,EAAAe,GACA,MAAAywD,IAAAxxD,EAAA0xD,WAAA3wD,EAAA,IAEA4wD,EAAA,SAAA3xD,EAAAe,GACA,MAAAywD,IAAAxxD,EAAA0xD,WAAA,OAAA3wD,EAAA,IAEAkgD,EAAA,SAAAjhD,EAAAe,GACA,MAAAywD,IAAA,EAAAI,GAAAC,UAAA7xD,GAAAe,EAAA,IAEAwtD,EAAA,SAAAvuD,EAAAe,GACA,MAAAywD,IAAAxxD,EAAA8xD,kBAAA/wD,EAAA,IAEAjB,EAAA,SAAAE,EAAAe,GACA,MAAAywD,IAAAxxD,EAAAsxD,WAAA,EAAAvwD,EAAA,IAEAstD,EAAA,SAAAruD,EAAAe,GACA,MAAAywD,IAAAxxD,EAAA+xD,aAAAhxD,EAAA,IAEAA,EAAA,SAAAf,GACA,MAAAuwD,KAAAvwD,EAAA0xD,YAAA,MAEApD,EAAA,SAAAtuD,EAAAe,GACA,MAAAywD,IAAAxxD,EAAAgyD,aAAAjxD,EAAA,IAEA+tD,EAAA,SAAA9uD,EAAAe,GACA,MAAAywD,IAAAI,GAAAK,aAAAjyD,GAAAe,EAAA,IAEAa,EAAA,SAAA5B,GACA,MAAAA,GAAA6uD,UAEAD,EAAA,SAAA5uD,EAAAe,GACA,MAAAywD,IAAAI,GAAAM,aAAAlyD,GAAAe,EAAA,IAEAk5C,EAAA8T,EAAAsC,GACAL,EAAAjC,EAAAuC,GACArM,EAAA,SAAAjkD,EAAAe,GACA,MAAAywD,IAAAxxD,EAAAmyD,cAAA,IAAApxD,EAAA,IAEAqxD,EAAA,SAAApyD,EAAAe,GACA,MAAAywD,IAAAxxD,EAAAmyD,cAAA,IAAApxD,EAAA,IAEAytD,EAAA6D,GACAC,IAAA,WACA,YAGAtD,GACAnV,EAAAoV,EACAoC,EAAAjC,EACAtV,EAAAyV,EACAgC,EAAA7B,EACA3vD,EAAA8vD,EACA7vD,EAAAuyD,GACArxD,EAAAqxD,GACAnE,EAAAoE,GACAb,EAAAa,GACAvR,EAAAwR,GACAlE,EAAAmE,GACA5yD,EAAA6yD,GACAtE,EAAAuE,GACA7xD,EAAAkvD,EACA3B,EAAAuE,GACA/D,EAAAgE,GACAlxD,EAAAmxD,GACAnE,EAAAoE,GACA/Y,EAAA6V,EACAE,EAAAD,EACA9L,EAAAgP,GACAb,EAAAc,GACA1E,EAAA2E,GACAb,IAAAc,GAmCA,OAAArF,GAOA,QAAAyD,IAAAxuD,EAAA29B,EAAAurB,GACA,GAAAI,GAAAtpD,EAAA,SAAA0C,GAAA4mD,GAAAtpD,KAAA,GAAAvB,EAAAiE,EAAAjE,MACA,OAAA6qD,IAAA7qD,EAAAyqD,EAAA,GAAAjnD,OAAAinD,EAAAzqD,EAAA,GAAAgQ,KAAAkvB,GAAAj7B,KAEA,QAAAyrD,IAAAkC,GACA,UAAAzkD,QAAA,OAAAykD,EAAA/vD,IAAAm5C,GAAAoC,SAAAptC,KAAA,cAEA,QAAA2/C,IAAAiC,GAEA,IADA,GAAA/vD,GAAA,GAAAw3C,GAAAn7C,GAAA,EAAAc,EAAA4yD,EAAA5xD,SACA9B,EAAAc,GAAA6C,EAAAE,IAAA6vD,EAAA1zD,GAAA0rC,cAAA1rC,EACA,OAAA2D,GAEA,QAAAyvD,IAAAzF,EAAA5nD,EAAA/F,GACA2zD,GAAAppD,UAAA,CACA,IAAAzJ,GAAA6yD,GAAAr9B,KAAAvwB,EAAAwvB,MAAAv1B,IAAA,GACA,OAAAc,IAAA6sD,EAAA1rD,GAAAnB,EAAA,GAAAd,EAAAc,EAAA,GAAAgB,SAAA,EAEA,QAAAqxD,IAAAxF,EAAA5nD,EAAA/F,GACA2zD,GAAAppD,UAAA,CACA,IAAAzJ,GAAA6yD,GAAAr9B,KAAAvwB,EAAAwvB,MAAAv1B,GACA,OAAAc,IAAA6sD,EAAAwB,GAAAruD,EAAA,GAAAd,EAAAc,EAAA,GAAAgB,SAAA,EAEA,QAAAuxD,IAAA1F,EAAA5nD,EAAA/F,GACA2zD,GAAAppD,UAAA,CACA,IAAAzJ,GAAA6yD,GAAAr9B,KAAAvwB,EAAAwvB,MAAAv1B,GACA,OAAAc,IAAA6sD,EAAAsB,GAAAnuD,EAAA,GAAAd,EAAAc,EAAA,GAAAgB,SAAA,EAEA,QAAAyxD,IAAA5F,EAAA5nD,EAAA/F,GACA2zD,GAAAppD,UAAA,CACA,IAAAzJ,GAAA6yD,GAAAr9B,KAAAvwB,EAAAwvB,MAAAv1B,IAAA,GACA,OAAAc,IAAA6sD,EAAArJ,GAAAxjD,EAAA,GAAAd,EAAAc,EAAA,GAAAgB,SAAA,EAEA,QAAAwxD,IAAA3F,EAAA5nD,EAAA/F,GACA2zD,GAAAppD,UAAA,CACA,IAAAzJ,GAAA6yD,GAAAr9B,KAAAvwB,EAAAwvB,MAAAv1B,IAAA,GACA,OAAAc,IAAA6sD,EAAArJ,EAAAsP,IAAA9yD,EAAA,IAAAd,EAAAc,EAAA,GAAAgB,SAAA,EAEA,QAAA0xD,IAAA7F,EAAA5nD,EAAA/F,GACA,oBAAsB6I,KAAA9C,IAAAwvB,MAAAv1B,IAAA,KAAA2tD,EAAAkB,GAAA9oD,EACtB/F,EAAA,MAEA,QAAA4zD,IAAAvzD,GACA,MAAAA,MAAA,aAEA,QAAA2yD,IAAArF,EAAA5nD,EAAA/F,GACA2zD,GAAAppD,UAAA,CACA,IAAAzJ,GAAA6yD,GAAAr9B,KAAAvwB,EAAAwvB,MAAAv1B,IAAA,GACA,OAAAc,IAAA6sD,EAAAxtD,EAAAW,EAAA,KAAAd,EAAAc,EAAA,GAAAgB,SAAA,EAEA,QAAA8wD,IAAAjF,EAAA5nD,EAAA/F,GACA2zD,GAAAppD,UAAA,CACA,IAAAzJ,GAAA6yD,GAAAr9B,KAAAvwB,EAAAwvB,MAAAv1B,IAAA,GACA,OAAAc,IAAA6sD,EAAAttD,GAAAS,EAAA,GAAAd,EAAAc,EAAA,GAAAgB,SAAA,EAEA,QAAAgxD,IAAAnF,EAAA5nD,EAAA/F,GACA2zD,GAAAppD,UAAA,CACA,IAAAzJ,GAAA6yD,GAAAr9B,KAAAvwB,EAAAwvB,MAAAv1B,IAAA,GACA,OAAAc,IAAA6sD,EAAArM,GAAAxgD,EAAA,GAAAd,EAAAc,EAAA,GAAAgB,SAAA,EAEA,QAAA+wD,IAAAlF,EAAA5nD,EAAA/F,GACA2zD,GAAAppD,UAAA,CACA,IAAAzJ,GAAA6yD,GAAAr9B,KAAAvwB,EAAAwvB,MAAAv1B,IAAA,GACA,OAAAc,IAAA6sD,EAAAc,GAAA3tD,EAAA,GAAAd,EAAAc,EAAA,GAAAgB,SAAA,EAEA,QAAAmxD,IAAAtF,EAAA5nD,EAAA/F,GACA2zD,GAAAppD,UAAA,CACA,IAAAzJ,GAAA6yD,GAAAr9B,KAAAvwB,EAAAwvB,MAAAv1B,IAAA,GACA,OAAAc,IAAA6sD,EAAAe,GAAA5tD,EAAA,GAAAd,EAAAc,EAAA,GAAAgB,SAAA,EAEA,QAAAoxD,IAAAvF,EAAA5nD,EAAA/F,GACA2zD,GAAAppD,UAAA,CACA,IAAAzJ,GAAA6yD,GAAAr9B,KAAAvwB,EAAAwvB,MAAAv1B,IAAA,GACA,OAAAc,IAAA6sD,EAAAgB,GAAA7tD,EAAA,GAAAd,EAAAc,EAAA,GAAAgB,SAAA,EAEA,QAAAixD,IAAApF,EAAA5nD,EAAA/F,GACA2zD,GAAAppD,UAAA,CACA,IAAAzJ,GAAA6yD,GAAAr9B,KAAAvwB,EAAAwvB,MAAAv1B,IAAA,GACA,OAAAc,IAAA6sD,EAAAiB,GAAA9tD,EAAA,GAAAd,EAAAc,EAAA,GAAAgB,SAAA,EAEA,QAAA4wD,IAAAryD,GACA,GAAAm8C,GAAAn8C,EAAAwzD,oBAAAC,EAAAtX,EAAA,UAAAuX,EAAArI,GAAAlP,GAAA,KAAAwX,EAAAtI,GAAAlP,GAAA,EACA,OAAAsX,GAAAjC,GAAAkC,EAAA,OAAAlC,GAAAmC,EAAA,OAEA,QAAAP,IAAA9F,EAAA5nD,EAAA/F,GACAi0D,GAAA1pD,UAAA,CACA,IAAAzJ,GAAAmzD,GAAA39B,KAAAvwB,EAAAwvB,MAAAv1B,IAAA,GACA,OAAAc,GAAAd,EAAAc,EAAA,GAAAgB,QAAA,EAEA,QAAAyvD,IAAA2C,GAEA,IADA,GAAApzD,GAAAozD,EAAApyD,OAAA9B,GAAA,IACAA,EAAAc,GAAAozD,EAAAl0D,GAAA,GAAAL,KAAAu0D,EAAAl0D,GAAA,GACA,iBAAA2tD,GAEA,IADA,GAAA3tD,GAAA,EAAAokD,EAAA8P,EAAAl0D,IACAokD,EAAA,GAAAuJ,IAAAvJ,EAAA8P,IAAAl0D,EACA,OAAAokD,GAAA,GAAAuJ,IAyBA,QAAAwG,OAiBA,QAAAC,IAAAla,EAAAC,EAAA35C,GACA,GAAA85C,GAAA95C,EAAAa,EAAA64C,EAAAC,EAAAka,EAAA/Z,EAAAJ,EAAAoa,EAAAha,EAAA+Z,CACA7zD,GAAAmqD,EAAAzQ,EAAAoa,GAAAna,EAAAka,GASA,QAAAE,IAAAC,EAAA5X,GACA4X,GAAAC,GAAAtzD,eAAAqzD,EAAA1wC,OACA2wC,GAAAD,EAAA1wC,MAAA0wC,EAAA5X,GA2CA,QAAA8X,IAAAC,EAAA/X,EAAAgY,GACA,GAAAC,GAAA70D,GAAA,EAAAc,EAAA6zD,EAAA7yD,OAAA8yD,CAEA,KADAhY,EAAAkY,cACA90D,EAAAc,GAAA+zD,EAAAF,EAAA30D,GAAA48C,EAAA6G,MAAAoR,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAjY,GAAAmY,UAEA,QAAAC,IAAAL,EAAA/X,GACA,GAAA58C,IAAA,EAAAc,EAAA6zD,EAAA7yD,MAEA,KADA86C,EAAAqY,iBACAj1D,EAAAc,GAAA4zD,GAAAC,EAAA30D,GAAA48C,EAAA,EACAA,GAAAsY,aAyBA,QAAAC,MAOA,QAAAC,GAAAC,EAAAC,GACAD,GAAAnO,GACAoO,IAAApO,GAAA,EAAA7B,GAAA,CACA,IAAAkQ,GAAAF,EAAAG,EAAAC,EAAAF,GAAA,OAAAG,EAAAD,EAAAF,EAAAI,EAAAx4B,KAAA8pB,IAAAqO,GAAAM,EAAAz4B,KAAA4oB,IAAAuP,GAAAta,EAAA6a,EAAAD,EAAAE,EAAAC,EAAAJ,EAAA3a,EAAA7d,KAAA8pB,IAAAyO,GAAA9zD,EAAAo5C,EAAAya,EAAAt4B,KAAA4oB,IAAA2P,EACAM,IAAAjyD,IAAAo5B,KAAAsqB,MAAA7lD,EAAAk0D,IACAN,EAAAH,EAAAU,EAAAJ,EAAAE,EAAAD,EAXA,GAAAK,GAAAC,EAAAV,EAAAO,EAAAF,CACAM,IAAA1S,MAAA,SAAA4R,EAAAC,GACAa,GAAA1S,MAAA2R,EACAI,GAAAS,EAAAZ,GAAAnO,GAAA6O,EAAA54B,KAAA8pB,IAAAqO,GAAAY,EAAAZ,GAAApO,GAAA,EAAA7B,GAAA,GACAwQ,EAAA14B,KAAA4oB,IAAAuP,IASAa,GAAApB,QAAA,WACAK,EAAAa,EAAAC,IAGA,QAAAE,IAAAC,GACA,GAAAhB,GAAAgB,EAAA,GAAAf,EAAAe,EAAA,GAAAV,EAAAx4B,KAAA8pB,IAAAqO,EACA,QAAAK,EAAAx4B,KAAA8pB,IAAAoO,GAAAM,EAAAx4B,KAAA4oB,IAAAsP,GAAAl4B,KAAA4oB,IAAAuP,IAEA,QAAAgB,IAAApc,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAEA,QAAAoc,IAAArc,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAEA,QAAAqc,IAAAtc,EAAAC,GACAD,EAAA,IAAAC,EAAA,GACAD,EAAA,IAAAC,EAAA,GACAD,EAAA,IAAAC,EAAA,GAEA,QAAAsc,IAAAC,EAAA1b,GACA,OAAA0b,EAAA,GAAA1b,EAAA0b,EAAA,GAAA1b,EAAA0b,EAAA,GAAA1b,GAEA,QAAA2b,IAAAt2D,GACA,GAAAJ,GAAAk9B,KAAAwqB,KAAAtnD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,GAAA,IAAAJ,EACAI,EAAA,IAAAJ,EACAI,EAAA,IAAAJ,EAEA,QAAA22D,IAAAC,GACA,OAAA15B,KAAAsqB,MAAAoP,EAAA,GAAAA,EAAA,IAAAtR,GAAAsR,EAAA,KAEA,QAAAC,IAAA5c,EAAAC,GACA,MAAAuR,IAAAxR,EAAA,GAAAC,EAAA,IAAA4c,IAAArL,GAAAxR,EAAA,GAAAC,EAAA,IAAA4c,GA2JA,QAAAC,IAAA3B,EAAAC,GACAD,GAAAnO,EACA,IAAAyO,GAAAx4B,KAAA8pB,IAAAqO,GAAApO,GACA+P,IAAAtB,EAAAx4B,KAAA8pB,IAAAoO,GAAAM,EAAAx4B,KAAA4oB,IAAAsP,GAAAl4B,KAAA4oB,IAAAuP,IAEA,QAAA2B,IAAA3c,EAAAgK,EAAA9H,KACA0a,GACAC,KAAA7c,EAAA6c,IAAAD,GACAE,KAAA9S,EAAA8S,IAAAF,GACAG,KAAA7a,EAAA6a,IAAAH,GAEA,QAAAI,MAWA,QAAAlC,GAAAC,EAAAC,GACAD,GAAAnO,EACA,IAAAyO,GAAAx4B,KAAA8pB,IAAAqO,GAAApO,IAAA5M,EAAAqb,EAAAx4B,KAAA8pB,IAAAoO,GAAA/Q,EAAAqR,EAAAx4B,KAAA4oB,IAAAsP,GAAA7Y,EAAArf,KAAA4oB,IAAAuP,GAAArzD,EAAAk7B,KAAAsqB,MAAAtqB,KAAAwqB,MAAA1lD,EAAAs1D,EAAA/a,EAAAgb,EAAAlT,GAAAriD,KAAAu1D,EAAAld,EAAAmd,EAAAjb,GAAAv6C,KAAAw1D,EAAAnT,EAAAiT,EAAAjd,GAAAr4C,GAAAw1D,EAAAnd,EAAAid,EAAAjT,EAAAkT,EAAAhb,EACAkb,KAAAz1D,EACA01D,IAAA11D,GAAAw1D,KAAAnd,IACAsd,IAAA31D,GAAAs1D,KAAAjT,IACAuT,IAAA51D,GAAAu1D,KAAAhb,IACAya,GAAAQ,EAAAF,EAAAC,GAjBA,GAAAC,GAAAF,EAAAC,CACAM,IAAArU,MAAA,SAAA4R,EAAAC,GACAD,GAAAnO,EACA,IAAAyO,GAAAx4B,KAAA8pB,IAAAqO,GAAApO,GACAuQ,GAAA9B,EAAAx4B,KAAA8pB,IAAAoO,GACAkC,EAAA5B,EAAAx4B,KAAA4oB,IAAAsP,GACAmC,EAAAr6B,KAAA4oB,IAAAuP,GACAwC,GAAArU,MAAA2R,EACA6B,GAAAQ,EAAAF,EAAAC,IAYA,QAAAO,MACAD,GAAArU,MAAAuT,GAEA,QAAAgB,MAiBA,QAAA5C,GAAAC,EAAAC,GACAD,GAAAnO,EACA,IAAAyO,GAAAx4B,KAAA8pB,IAAAqO,GAAApO,IAAA5M,EAAAqb,EAAAx4B,KAAA8pB,IAAAoO,GAAA/Q,EAAAqR,EAAAx4B,KAAA4oB,IAAAsP,GAAA7Y,EAAArf,KAAA4oB,IAAAuP,GAAA2C,EAAAV,EAAA/a,EAAAgb,EAAAlT,EAAA4T,EAAAV,EAAAld,EAAAmd,EAAAjb,EAAA2b,EAAAV,EAAAnT,EAAAiT,EAAAjd,EAAAn6C,EAAAg9B,KAAAwqB,KAAAsQ,IAAAC,IAAAC,KAAArC,EAAA2B,EAAAnd,EAAAid,EAAAjT,EAAAkT,EAAAhb,EAAA56C,EAAAzB,IAAAilD,GAAA0Q,GAAA31D,EAAA8B,EAAAk7B,KAAAsqB,MAAAtnD,EAAA21D,EACAsC,KAAAx2D,EAAAq2D,EACAI,IAAAz2D,EAAAs2D,EACAI,IAAA12D,EAAAu2D,EACAT,IAAAz1D,EACA01D,IAAA11D,GAAAw1D,KAAAnd,IACAsd,IAAA31D,GAAAs1D,KAAAjT,IACAuT,IAAA51D,GAAAu1D,KAAAhb,IACAya,GAAAQ,EAAAF,EAAAC,GA1BA,GAAAvB,GAAAC,EAAAuB,EAAAF,EAAAC,CACAM,IAAArU,MAAA,SAAA4R,EAAAC,GACAW,EAAAZ,EAAAa,EAAAZ,EACAwC,GAAArU,MAAA2R,EACAC,GAAAnO,EACA,IAAAyO,GAAAx4B,KAAA8pB,IAAAqO,GAAApO,GACAuQ,GAAA9B,EAAAx4B,KAAA8pB,IAAAoO,GACAkC,EAAA5B,EAAAx4B,KAAA4oB,IAAAsP,GACAmC,EAAAr6B,KAAA4oB,IAAAuP,GACA2B,GAAAQ,EAAAF,EAAAC,IAEAM,GAAA/C,QAAA,WACAK,EAAAa,EAAAC,GACA4B,GAAA/C,QAAAgD,GACAD,GAAArU,MAAAuT,IAeA,QAAAuB,IAAAre,EAAAC,GACA,QAAAqe,GAAAle,EAAAgK,GACA,MAAAhK,GAAAJ,EAAAI,EAAAgK,GAAAnK,EAAAG,EAAA,GAAAA,EAAA,IAKA,MAHAJ,GAAApE,QAAAqE,EAAArE,SAAA0iB,EAAA1iB,OAAA,SAAAwE,EAAAgK,GACA,OAAAhK,EAAAH,EAAArE,OAAAwE,EAAAgK,KAAApK,EAAApE,OAAAwE,EAAA,GAAAA,EAAA,MAEAke,EAEA,QAAAC,MACA,SAEA,QAAAC,IAAAC,EAAAle,EAAAme,EAAA1rB,EAAA0P,GACA,GAAAic,MAAAC,IAuBA,IAtBAH,EAAAnvD,QAAA,SAAAuvD,GACA,MAAAj4D,EAAAi4D,EAAAj3D,OAAA,QACA,GAAAhB,GAAAk4D,EAAAD,EAAA,GAAAE,EAAAF,EAAAj4D,EACA,IAAAg2D,GAAAkC,EAAAC,GAAA,CACArc,EAAAkY,WACA,QAAA90D,GAAA,EAAuBA,EAAAc,IAAOd,EAAA48C,EAAA6G,OAAAuV,EAAAD,EAAA/4D,IAAA,GAAAg5D,EAAA,GAE9B,YADApc,GAAAmY,UAGA,GAAA7a,GAAA,GAAAgf,IAAAF,EAAAD,EAAA,SAAA5e,EAAA,GAAA+e,IAAAF,EAAA,KAAA9e,GAAA,EACAA,GAAA15C,EAAA25C,EACA0e,EAAAxvD,KAAA6wC,GACA4e,EAAAzvD,KAAA8wC,GACAD,EAAA,GAAAgf,IAAAD,EAAAF,EAAA,SACA5e,EAAA,GAAA+e,IAAAD,EAAA,KAAA/e,GAAA,GACAA,EAAA15C,EAAA25C,EACA0e,EAAAxvD,KAAA6wC,GACA4e,EAAAzvD,KAAA8wC,MAEA2e,EAAAvxD,KAAAkzC,GACA0e,GAAAN,GACAM,GAAAL,GACAD,EAAA/2D,OAAA,CACA,OAAA9B,GAAA,EAAAmkB,EAAAy0C,EAAA93D,EAAAg4D,EAAAh3D,OAA6D9B,EAAAc,IAAOd,EACpE84D,EAAA94D,GAAAuB,EAAA4iB,IAGA,KADA,GAAAi1C,GAAA3V,EAAApgC,EAAAw1C,EAAA,KACA,CAEA,IADA,GAAArxD,GAAA6b,EAAAg2C,GAAA,EACA7xD,EAAA5F,GAAA,IAAA4F,IAAA1G,KAAAuiB,EAAA,MACA+1C,GAAA5xD,EAAAg1C,EACAI,EAAAkY,WACA,IAEA,GADAttD,EAAA5F,EAAA4F,EAAAhH,EAAAoB,GAAA,EACA4F,EAAAjG,EAAA,CACA,GAAA83D,EACA,OAAAr5D,GAAA,EAAAc,EAAAs4D,EAAAt3D,OAA8C9B,EAAAc,IAAOd,EAAA48C,EAAA6G,SAAA2V,EAAAp5D,IAAA,GAAAyjD,EAAA,QAErDvW,GAAA1lC,EAAA8yC,EAAA9yC,EAAA1G,EAAAw5C,EAAA,EAAAsC,EAEAp1C,KAAA1G,MACS,CACT,GAAAu4D,EAAA,CACAD,EAAA5xD,EAAApG,EAAAo7C,CACA,QAAAx8C,GAAAo5D,EAAAt3D,OAAA,EAA2C9B,GAAA,IAAQA,EAAA48C,EAAA6G,SAAA2V,EAAAp5D,IAAA,GAAAyjD,EAAA,QAEnDvW,GAAA1lC,EAAA8yC,EAAA9yC,EAAApG,EAAAk5C,GAAA,EAAAsC,EAEAp1C,KAAApG,EAEAoG,IAAAhH,EACA44D,EAAA5xD,EAAAg1C,EACA6c,YACO7xD,EAAA5F,EACPg7C,GAAAmY,YAGA,QAAAoE,IAAA90D,GACA,GAAAvD,EAAAuD,EAAAvC,OAAA,CAEA,IADA,GAAAhB,GAAAq5C,EAAAn6C,EAAA,EAAAk6C,EAAA71C,EAAA,KACArE,EAAAc,GACAo5C,EAAAp5C,EAAAq5C,EAAA91C,EAAArE,GACAm6C,EAAA/4C,EAAA84C,EACAA,EAAAC,CAEAD,GAAAp5C,EAAAq5C,EAAA91C,EAAA,GACA81C,EAAA/4C,EAAA84C,GAEA,QAAAgf,IAAAzV,EAAA2V,EAAA/sC,EAAAlI,GACAxkB,KAAA26C,EAAAmJ,EACA9jD,KAAA68C,EAAA4c,EACAz5D,KAAAa,EAAA6rB,EACA1sB,KAAA4B,EAAA4iB,EACAxkB,KAAAiC,GAAA,EACAjC,KAAAmB,EAAAnB,KAAAyB,EAAA,KAEA,QAAAk4D,IAAAC,EAAAC,EAAAtsB,EAAAusB,GACA,gBAAAC,EAAA9c,GAuCA,QAAA6G,GAAA4R,EAAAC,GACA,GAAA7R,GAAAiW,EAAArE,EAAAC,EACAiE,GAAAlE,EAAA5R,EAAA,GAAA6R,EAAA7R,EAAA,KAAA7G,EAAA6G,MAAA4R,EAAAC,GAEA,QAAAqE,GAAAtE,EAAAC,GACA,GAAA7R,GAAAiW,EAAArE,EAAAC,EACAsE,GAAAnW,QAAA,GAAAA,EAAA,IAEA,QAAAqR,KACAgE,EAAArV,MAAAkW,EACAC,EAAA9E,YAEA,QAAAC,KACA+D,EAAArV,QACAmW,EAAA7E,UAIA,QAAA8E,GAAAxE,EAAAC,GACAwE,EAAAzwD,MAAAgsD,EAAAC,GACA,IAAA7R,GAAAiW,EAAArE,EAAAC,EACAyE,GAAAtW,QAAA,GAAAA,EAAA,IAEA,QAAAuW,KACAD,EAAAjF,YACAgF,KAEA,QAAAG,KACAJ,EAAAC,EAAA,MAAAA,EAAA,OACAC,EAAAhF,SACA,IAAAgE,GAAAmB,EAAAH,EAAAG,QAAAC,EAAA7kC,WAAAx0B,EAAAq5D,EAAAr4D,MAIA,IAHAg4D,EAAA/0C,MACAq1C,EAAA/wD,KAAAywD,GACAA,EAAA,KACAh5D,EACA,KAAAo5D,EAAA,CACAnB,EAAAoB,EAAA,EACA,IAAA1W,GAAA3iD,EAAAi4D,EAAAj3D,OAAA,EAAA9B,GAAA,CACA,IAAAc,EAAA,GAGA,IAFAu5D,IAAAzd,EAAAqY,eAAAoF,GAAA,GACAzd,EAAAkY,cACA90D,EAAAc,GAAA87C,EAAA6G,SAAAsV,EAAA/4D,IAAA,GAAAyjD,EAAA,GACA7G,GAAAmY,eAIAj0D,GAAA,KAAAo5D,GAAAC,EAAA9wD,KAAA8wD,EAAAp1C,MAAA4b,OAAAw5B,EAAAG,UACA3B,EAAAtvD,KAAA8wD,EAAAh2B,OAAAo2B,KArFA,GAsDA5B,GACAyB,EAAAN,EAvDAF,EAAAJ,EAAA5c,GAAA4d,EAAAd,EAAA5jB,OAAA2jB,EAAA,GAAAA,EAAA,IACAX,GACArV,QACAqR,YACAC,UACAE,aAAA,WACA6D,EAAArV,MAAAoW,EACAf,EAAAhE,UAAAkF,EACAlB,EAAA/D,QAAAkF,EACAtB,KACAyB,MAEAlF,WAAA,WACA4D,EAAArV,QACAqV,EAAAhE,YACAgE,EAAA/D,UACA4D,EAAA7b,GAAA7G,MAAA0iB,EACA,IAAAC,GAAA6B,GAAAD,EAAAJ,EACAzB,GAAA72D,QACAu4D,IAAAzd,EAAAqY,eAAAoF,GAAA,GACA3B,GAAAC,EAAA+B,GAAA9B,EAAA1rB,EAAA0P,IACWgc,IACXyB,IAAAzd,EAAAqY,eAAAoF,GAAA,GACAzd,EAAAkY,YACA5nB,EAAA,YAAA0P,GACAA,EAAAmY,WAEAsF,IAAAzd,EAAAsY,aAAAmF,GAAA,GACA1B,EAAAyB,EAAA,MAEAO,OAAA,WACA/d,EAAAqY,eACArY,EAAAkY,YACA5nB,EAAA,YAAA0P,GACAA,EAAAmY,UACAnY,EAAAsY,eAoBA5/B,EAAAslC,KAAAb,EAAAP,EAAAlkC,GAAA+kC,GAAA,CAgCA,OAAAvB,IAGA,QAAAyB,IAAAxB,GACA,MAAAA,GAAAj3D,OAAA,EAEA,QAAA84D,MACA,GAAAhB,GAAAiB,IACA,QACA/F,UAAA,WACA+F,EAAAxxD,KAAAuwD,OAEAnW,MAAA,SAAA4R,EAAAC,GACAsE,EAAAvwD,MAAAgsD,EAAAC,KAEAP,QAAA5Y,EACA7mB,OAAA,WACA,GAAAA,GAAAulC,CAGA,OAFAA,MACAjB,EAAA,KACAtkC,GAEAwlC,OAAA,WACAD,EAAA/4D,OAAA,GAAA+4D,EAAAxxD,KAAAwxD,EAAA91C,MAAA4b,OAAAk6B,EAAAP,YAIA,QAAAI,IAAAxgB,EAAAC,GACA,QAAAD,IAAAI,GAAA,KAAAJ,EAAA,GAAAsL,GAAAuR,GAAAvR,GAAAtL,EAAA,MAAAC,IAAAG,GAAA,KAAAH,EAAA,GAAAqL,GAAAuR,GAAAvR,GAAArL,EAAA,IAGA,QAAA4gB,IAAAne,GACA,GAAAsd,GAAA1E,EAAApb,IAAA4gB,EAAA5gB,IAAA6gB,EAAA7gB,GACA,QACA0a,UAAA,WACAlY,EAAAkY,YACAoF,EAAA,GAEAzW,MAAA,SAAAyX,EAAAC,GACA,GAAAC,GAAAF,EAAA,EAAA7V,OAAAkQ,EAAA7J,GAAAwP,EAAA1F,EACA9J,IAAA6J,EAAAlQ,IAAA0R,IACAna,EAAA6G,MAAA+R,EAAAwF,KAAAG,GAAA,IAAA3V,QACA5I,EAAA6G,MAAAwX,EAAAD,GACApe,EAAAmY,UACAnY,EAAAkY,YACAlY,EAAA6G,MAAA2X,EAAAJ,GACApe,EAAA6G,MAAAyX,EAAAF,GACAd,EAAA,GACSe,IAAAG,GAAA7F,GAAAlQ,KACTqG,GAAA8J,EAAAyF,GAAAlE,KAAAvB,GAAAyF,EAAAlE,IACArL,GAAAwP,EAAAE,GAAArE,KAAAmE,GAAAE,EAAArE,IACAiE,EAAAK,GAAA7F,EAAAwF,EAAAE,EAAAC,GACAve,EAAA6G,MAAAwX,EAAAD,GACApe,EAAAmY,UACAnY,EAAAkY,YACAlY,EAAA6G,MAAA2X,EAAAJ,GACAd,EAAA,GAEAtd,EAAA6G,MAAA+R,EAAA0F,EAAAF,EAAAG,GACAF,EAAAG,GAEArG,QAAA,WACAnY,EAAAmY,UACAS,EAAAwF,EAAA5gB,KAEA8f,MAAA,WACA,SAAAA,IAIA,QAAAmB,IAAA7F,EAAAwF,EAAAE,EAAAC,GACA,GAAApF,GAAAuF,EAAAC,EAAAp+B,KAAA4oB,IAAAyP,EAAA0F,EACA,OAAAxP,IAAA6P,GAAAxE,GAAA55B,KAAAq+B,MAAAr+B,KAAA4oB,IAAAiV,IAAAM,EAAAn+B,KAAA8pB,IAAAkU,IAAAh+B,KAAA4oB,IAAAmV,GAAA/9B,KAAA4oB,IAAAoV,IAAApF,EAAA54B,KAAA8pB,IAAA+T,IAAA79B,KAAA4oB,IAAAyP,KAAAO,EAAAuF,EAAAC,KAAAP,EAAAG,GAAA,EAEA,QAAAM,IAAAC,EAAAC,EAAAC,EAAAhf,GACA,GAAA0Y,EACA,UAAAoG,EACApG,EAAAsG,EAAApW,GACA5I,EAAA6G,OAAA4B,GAAAiQ,GACA1Y,EAAA6G,MAAA,EAAA6R,GACA1Y,EAAA6G,MAAA4B,GAAAiQ,GACA1Y,EAAA6G,MAAA4B,GAAA,GACAzI,EAAA6G,MAAA4B,IAAAiQ,GACA1Y,EAAA6G,MAAA,GAAA6R,GACA1Y,EAAA6G,OAAA4B,IAAAiQ,GACA1Y,EAAA6G,OAAA4B,GAAA,GACAzI,EAAA6G,OAAA4B,GAAAiQ,OACK,IAAA5J,GAAAgQ,EAAA,GAAAC,EAAA,IAAA5E,GAAA,CACL,GAAA11D,GAAAq6D,EAAA,GAAAC,EAAA,GAAAtW,MACAiQ,GAAAsG,EAAAv6D,EAAA,EACAu7C,EAAA6G,OAAApiD,EAAAi0D,GACA1Y,EAAA6G,MAAA,EAAA6R,GACA1Y,EAAA6G,MAAApiD,EAAAi0D,OAEA1Y,GAAA6G,MAAAkY,EAAA,GAAAA,EAAA,IAGA,QAAAlB,IAAAhX,EAAA2W,GACA,GAAAyB,GAAApY,EAAA,GAAAqY,EAAArY,EAAA,GAAAsY,GAAA5+B,KAAA4oB,IAAA8V,IAAA1+B,KAAA8pB,IAAA4U,GAAA,GAAAG,EAAA,EAAAC,EAAA,CACAjG,IAAAkG,OACA,QAAAl8D,GAAA,EAAAc,EAAAs5D,EAAAt4D,OAAuC9B,EAAAc,IAAOd,EAAA,CAC9C,GAAA85D,GAAAM,EAAAp6D,GAAAG,EAAA25D,EAAAh4D,MACA,IAAA3B,EAEA,IADA,GAAAg8D,GAAArC,EAAA,GAAAtE,EAAA2G,EAAA,GAAAnB,EAAAmB,EAAA,KAAA9W,GAAA,EAAAwQ,EAAA14B,KAAA4oB,IAAAiV,GAAAjF,EAAA54B,KAAA8pB,IAAA+T,GAAA1Z,EAAA,IACA,CACAA,IAAAnhD,IAAAmhD,EAAA,GACAmC,EAAAqW,EAAAxY,EACA,IAAA+T,GAAA5R,EAAA,GAAA6R,EAAA7R,EAAA,KAAA4B,GAAA,EAAAuQ,EAAAz4B,KAAA4oB,IAAAuP,GAAAK,EAAAx4B,KAAA8pB,IAAAqO,GAAAC,EAAAF,EAAAG,EAAAC,EAAAF,GAAA,OAAAG,EAAAD,EAAAF,EAAA6G,EAAA1G,EAAArQ,GAAArK,EAAA6a,EAAAD,CAGA,IAFAI,GAAAjyD,IAAAo5B,KAAAsqB,MAAAzM,EAAAya,EAAAt4B,KAAA4oB,IAAA2P,GAAAK,EAAAJ,EAAA3a,EAAA7d,KAAA8pB,IAAAyO,KACAsG,GAAAI,EAAA7G,EAAAE,EAAA4G,GAAA9G,EACA6G,EAAA5G,GAAAqG,EAAAxG,GAAAwG,EAAA,CACA,GAAAS,GAAA/F,GAAAH,GAAA+F,GAAA/F,GAAA3S,GACAkT,IAAA2F,EACA,IAAAlpB,GAAAmjB,GAAAwF,EAAAO,EACA3F,IAAAvjB,EACA,IAAAmpB,IAAAH,EAAA7G,GAAA,QAAAhQ,GAAAnS,EAAA,KACA0oB,EAAAS,GAAAT,IAAAS,IAAAD,EAAA,IAAAA,EAAA,OACAL,GAAAG,EAAA7G,GAAA,QAGA,IAAAjU,IAAA,KACAkU,GAAAH,EAAAQ,EAAAD,EAAAG,EAAAJ,EAAAwG,EAAA1Y,GAGA,OAAAuY,GAAAjF,IAAAiF,EAAAjF,IAAAf,IAAAe,IAAA,EAAAkF,EAEA,QAAAO,IAAAC,GAGA,QAAAC,GAAArH,EAAAC,GACA,MAAAn4B,MAAA8pB,IAAAoO,GAAAl4B,KAAA8pB,IAAAqO,GAAAqH,EAEA,QAAAnD,GAAA5c,GACA,GAAAuf,GAAAS,EAAAC,EAAAC,EAAA5C,CACA,QACApF,UAAA,WACAgI,EAAAD,GAAA,EACA3C,EAAA,GAEAzW,MAAA,SAAA4R,EAAAC,GACA,GAAAyH,GAAAC,GAAA3H,EAAAC,GAAA1zD,EAAA86D,EAAArH,EAAAC,GAAAl1D,EAAA68D,EAAAr7D,EAAA,EAAAs7D,EAAA7H,EAAAC,GAAA1zD,EAAAs7D,EAAA7H,KAAA,EAAAhQ,QAAAiQ,GAAA,CAUA,KATA6G,IAAAW,EAAAD,EAAAj7D,IAAAg7C,EAAAkY,YACAlzD,IAAAi7D,IACAE,EAAAI,EAAAhB,EAAAa,IACAlG,GAAAqF,EAAAY,IAAAjG,GAAAkG,EAAAD,MACAC,EAAA,IAAAjG,GACAiG,EAAA,IAAAjG,GACAn1D,EAAA86D,EAAAM,EAAA,GAAAA,EAAA,MAGAp7D,IAAAi7D,EACA3C,EAAA,EACAt4D,GACAg7C,EAAAkY,YACAiI,EAAAI,EAAAH,EAAAb,GACAvf,EAAA6G,MAAAsZ,EAAA,GAAAA,EAAA,MAEAA,EAAAI,EAAAhB,EAAAa,GACApgB,EAAA6G,MAAAsZ,EAAA,GAAAA,EAAA,IACAngB,EAAAmY,WAEAoH,EAAAY,MACW,IAAAK,GAAAjB,GAAAc,EAAAr7D,EAAA,CACX,GAAA+oD,EACAvqD,GAAAw8D,KAAAjS,EAAAwS,EAAAH,EAAAb,GAAA,MACAjC,EAAA,EACA+C,GACArgB,EAAAkY,YACAlY,EAAA6G,MAAAkH,EAAA,MAAAA,EAAA,OACA/N,EAAA6G,MAAAkH,EAAA,MAAAA,EAAA,OACA/N,EAAAmY,YAEAnY,EAAA6G,MAAAkH,EAAA,MAAAA,EAAA,OACA/N,EAAAmY,UACAnY,EAAAkY,YACAlY,EAAA6G,MAAAkH,EAAA,MAAAA,EAAA,UAIA/oD,GAAAu6D,GAAArF,GAAAqF,EAAAa,IACApgB,EAAA6G,MAAAuZ,EAAA,GAAAA,EAAA,IAEAb,EAAAa,EAAAH,EAAAj7D,EAAAg7D,EAAAx8D,GAEA20D,QAAA,WACA8H,GAAAjgB,EAAAmY,UACAoH,EAAA,MAEAjC,MAAA,WACA,MAAAA,IAAA4C,GAAAD,IAAA,IAIA,QAAAM,GAAAjjB,EAAAC,EAAAkjB,GACA,GAAAC,GAAAlH,GAAAlc,GAAAqjB,EAAAnH,GAAAjc,GACAqjB,GAAA,OAAAC,EAAAlH,GAAA+G,EAAAC,GAAAG,EAAApH,GAAAmH,KAAAE,EAAAF,EAAA,GAAAG,EAAAF,EAAAC,GACA,KAAAC,EAAA,OAAAP,GAAAnjB,CACA,IAAA2jB,GAAAlB,EAAAe,EAAAE,EAAAE,GAAAnB,EAAAgB,EAAAC,EAAAG,EAAAxH,GAAAiH,EAAAC,GAAA/L,EAAA+E,GAAA+G,EAAAK,EACArH,IAAA9E,EADA+E,GAAAgH,EAAAK,GAEA,IAAAhI,GAAAiI,EAAA97D,EAAAq0D,GAAA5E,EAAAoE,GAAAkI,EAAA1H,GAAAR,KAAAmI,EAAAh8D,IAAA+7D,GAAA1H,GAAA5E,KAAA,EACA,MAAAuM,EAAA,IACA,GAAAtT,GAAAxtB,KAAAwqB,KAAAsW,GAAAC,EAAAzH,GAAAX,IAAA7zD,EAAA0oD,GAAAqT,EAGA,IAFAxH,GAAA0H,EAAAxM,GACAwM,EAAAtH,GAAAsH,IACAb,EAAA,MAAAa,EACA,IAAA1hB,GAAAgZ,EAAAtb,EAAA,GAAAghB,EAAA/gB,EAAA,GAAA6gB,EAAA9gB,EAAA,GAAAihB,EAAAhhB,EAAA,EACA+gB,GAAA1F,IAAAhZ,EAAAgZ,IAAA0F,IAAA1e,EACA,IAAA2hB,GAAAjD,EAAA1F,EAAA4I,EAAA1S,GAAAyS,EAAA9Y,IAAA0R,GAAA8E,EAAAuC,GAAAD,EAAApH,EAEA,KADAqH,GAAAjD,EAAAH,IAAAxe,EAAAwe,IAAAG,IAAA3e,GACAqf,EAAAuC,EAAApD,EAAAG,EAAA,EAAA+C,EAAA,IAAAxS,GAAAwS,EAAA,GAAA1I,GAAAuB,GAAAiE,EAAAG,GAAAH,GAAAkD,EAAA,IAAAA,EAAA,IAAA/C,EAAAgD,EAAA9Y,IAAAmQ,GAAA0I,EAAA,IAAAA,EAAA,IAAAhD,GAAA,CACA,GAAAmD,GAAA5H,GAAAX,IAAA7zD,EAAA0oD,GAAAqT,EAEA,OADAxH,IAAA6H,EAAA3M,IACAwM,EAAAtH,GAAAyH,MAGA,QAAAnB,GAAA7H,EAAAC,GACA,GAAAvO,GAAAkW,EAAAR,EAAApX,GAAAoX,EAAAS,EAAA,CAGA,OAFA7H,IAAAtO,EAAAmW,GAAA,EAA4B7H,EAAAtO,IAAAmW,GAAA,GAC5B5H,GAAAvO,EAAAmW,GAAA,EAA4B5H,EAAAvO,IAAAmW,GAAA,GAC5BA,EA5FA,GAAAP,GAAAx/B,KAAA8pB,IAAAwV,GAAAQ,EAAAN,EAAA,EAAAS,EAAA1R,GAAAiR,GAAA5F,EACA,OAAAuC,IAAAoD,EAAAlD,EADA8E,GAAA7B,EAAA,EAAAvV,IACA+V,GAAA,GAAAR,KAAApX,GAAAoX,EAAApX,KA8FA,QAAAkZ,IAAA9G,EAAAF,EAAAiH,EAAAC,GACA,gBAAA7E,GACA,GAAA7S,GAAA7M,EAAA0f,EAAA1f,EAAAC,EAAAyf,EAAAzf,EAAAukB,EAAAxkB,EAAAI,EAAAqkB,EAAAzkB,EAAAoK,EAAAsa,EAAAzkB,EAAAG,EAAAukB,EAAA1kB,EAAAmK,EAAA8G,EAAA,EAAAC,EAAA,EAAAyT,EAAAF,EAAAF,EAAAK,EAAAF,EAAAF,CAEA,IADA5X,EAAA0Q,EAAAiH,EACAI,KAAA/X,EAAA,IAEA,GADAA,GAAA+X,EACAA,EAAA,GACA,GAAA/X,EAAAqE,EAAA,MACArE,GAAAsE,MAAAtE,OACO,IAAA+X,EAAA,GACP,GAAA/X,EAAAsE,EAAA,MACAtE,GAAAqE,MAAArE,GAGA,GADAA,EAAAyX,EAAAE,EACAI,KAAA/X,EAAA,IAEA,GADAA,GAAA+X,EACAA,EAAA,GACA,GAAA/X,EAAAsE,EAAA,MACAtE,GAAAqE,MAAArE,OACO,IAAA+X,EAAA,GACP,GAAA/X,EAAAqE,EAAA,MACArE,GAAAsE,MAAAtE,GAGA,GADAA,EAAAwQ,EAAAoH,EACAI,KAAAhY,EAAA,IAEA,GADAA,GAAAgY,EACAA,EAAA,GACA,GAAAhY,EAAAqE,EAAA,MACArE,GAAAsE,MAAAtE,OACO,IAAAgY,EAAA,GACP,GAAAhY,EAAAsE,EAAA,MACAtE,GAAAqE,MAAArE,GAGA,GADAA,EAAA0X,EAAAE,EACAI,KAAAhY,EAAA,IAEA,GADAA,GAAAgY,EACAA,EAAA,GACA,GAAAhY,EAAAsE,EAAA,MACAtE,GAAAqE,MAAArE,OACO,IAAAgY,EAAA,GACP,GAAAhY,EAAAqE,EAAA,MACArE,GAAAsE,MAAAtE,GAUA,MARAqE,GAAA,IAAAwO,EAAA1f,GACAI,EAAAokB,EAAAtT,EAAA0T,EACAxa,EAAAqa,EAAAvT,EAAA2T,IAEA1T,EAAA,IAAAuO,EAAAzf,GACAG,EAAAokB,EAAArT,EAAAyT,EACAxa,EAAAqa,EAAAtT,EAAA0T,IAEAnF,OAqBA,QAAAoF,IAAAvH,EAAAF,EAAAiH,EAAAC,GA2HA,QAAAQ,GAAA79D,EAAAw6D,GACA,MAAAlQ,IAAAtqD,EAAA,GAAAq2D,GAAAV,GAAA6E,EAAA,MAAAlQ,GAAAtqD,EAAA,GAAAo9D,GAAAzH,GAAA6E,EAAA,MAAAlQ,GAAAtqD,EAAA,GAAAm2D,GAAAR,GAAA6E,EAAA,MAAAA,EAAA,MAEA,QAAAnhB,GAAAP,EAAAC,GACA,MAAA+kB,GAAAhlB,EAAAI,EAAAH,EAAAG,GAEA,QAAA4kB,GAAAhlB,EAAAC,GACA,GAAAglB,GAAAF,EAAA/kB,EAAA,GAAAklB,EAAAH,EAAA9kB,EAAA,EACA,OAAAglB,KAAAC,EAAAD,EAAAC,EAAA,IAAAD,EAAAhlB,EAAA,GAAAD,EAAA,OAAAilB,EAAAjlB,EAAA,GAAAC,EAAA,OAAAglB,EAAAjlB,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,GAlIA,gBAAA0C,GA+BA,QAAAyiB,GAAAj+D,GAEA,OADAk+D,GAAA,EAAAx+D,EAAAs5D,EAAAt4D,OAAAwiD,EAAAljD,EAAA,GACApB,EAAA,EAAuBA,EAAAc,IAAOd,EAC9B,OAAAm6C,GAAAmH,EAAA,EAAA1/C,EAAAw4D,EAAAp6D,GAAAG,EAAAyB,EAAAE,OAAAo4C,EAAAt4C,EAAA,GAAoE0/C,EAAAnhD,IAAOmhD,EAC3EnH,EAAAv4C,EAAA0/C,GACApH,EAAA,IAAAoK,EACAnK,EAAA,GAAAmK,GAAAa,GAAAjL,EAAAC,EAAA/4C,GAAA,KAAAk+D,EAEAnlB,EAAA,IAAAmK,GAAAa,GAAAjL,EAAAC,EAAA/4C,GAAA,KAAAk+D,EAEAplB,EAAAC,CAGA,YAAAmlB,EAEA,QAAApyB,GAAAwuB,EAAAC,EAAAC,EAAAhf,GACA,GAAA1C,GAAA,EAAAqlB,EAAA,CACA,UAAA7D,IAAAxhB,EAAA+kB,EAAAvD,EAAAE,OAAA2D,EAAAN,EAAAtD,EAAAC,KAAAsD,EAAAxD,EAAAC,GAAA,EAAAC,EAAA,EACA,GACAhf,EAAA6G,MAAA,IAAAvJ,GAAA,IAAAA,EAAAud,EAAA+G,EAAAtkB,EAAA,EAAAukB,EAAAlH,UACWrd,KAAA0hB,EAAA,QAAA2D,OAEX3iB,GAAA6G,MAAAkY,EAAA,GAAAA,EAAA,IAGA,QAAApC,GAAAjf,EAAAgK,GACA,MAAAmT,IAAAnd,MAAAkkB,GAAAjH,GAAAjT,MAAAma,EAEA,QAAAhb,GAAAnJ,EAAAgK,GACAiV,EAAAjf,EAAAgK,IAAA1H,EAAA6G,MAAAnJ,EAAAgK,GAGA,QAAAwQ,KACAgE,EAAArV,MAAA+b,EACApF,KAAA/wD,KAAAywD,MACAthB,GAAA,EACAinB,GAAA,EACAC,EAAAC,EAAAvlB,IAEA,QAAA2a,KACA4D,IACA6G,EAAAI,EAAAC,GACAC,GAAAL,GAAAM,EAAAjF,SACAnC,EAAAtvD,KAAA02D,EAAAzqC,WAEAwjC,EAAArV,QACAgc,GAAA7iB,EAAAmY,UAEA,QAAAyK,GAAAllB,EAAAgK,GACAhK,EAAAnd,KAAA8S,KAAA+vB,GAAA7iC,KAAAkT,IAAA2vB,GAAA1lB,IACAgK,EAAAnnB,KAAA8S,KAAA+vB,GAAA7iC,KAAAkT,IAAA2vB,GAAA1b,GACA,IAAA1iD,GAAA23D,EAAAjf,EAAAgK,EAEA,IADA8V,GAAAN,EAAAzwD,MAAAixC,EAAAgK,IACA9L,EACAonB,EAAAtlB,EAAAulB,EAAAvb,EAAAwb,EAAAl+D,EACA42C,GAAA,EACA52C,IACAg7C,EAAAkY,YACAlY,EAAA6G,MAAAnJ,EAAAgK,QAGA,IAAA1iD,GAAA69D,EAAA7iB,EAAA6G,MAAAnJ,EAAAgK,OAA4C,CAC5C,GAAArkD,IACAi6C,GACAI,EAAAolB,EACApb,EAAAqb,GAEAxlB,GACAG,IACAgK,KAGAkV,GAAAv5D,IACAw/D,IACA7iB,EAAAkY,YACAlY,EAAA6G,MAAAxjD,EAAAi6C,EAAAI,EAAAr6C,EAAAi6C,EAAAoK,IAEA1H,EAAA6G,MAAAxjD,EAAAk6C,EAAAG,EAAAr6C,EAAAk6C,EAAAmK,GACA1iD,GAAAg7C,EAAAmY,UACAmF,GAAA,GACat4D,IACbg7C,EAAAkY,YACAlY,EAAA6G,MAAAnJ,EAAAgK,GACA4V,GAAA,GAIAwF,EAAAplB,EAAAqlB,EAAArb,EAAAmb,EAAA79D,EArHA,GAAA+2D,GAAAyB,EAAAN,EA6DA8F,EAAAC,EAAAC,EAAAJ,EAAAC,EAAAF,EAAAjnB,EAAA0hB,EA7DA+F,EAAArjB,EAAAmjB,EAAAnF,KAAApB,EAAA+E,GAAA9G,EAAAF,EAAAiH,EAAAC,GACA3F,GACArV,QACAqR,YACAC,UACAE,aAAA,WACArY,EAAAmjB,EACApH,KACAyB,KACAF,GAAA,GAEAhF,WAAA,WACAtY,EAAAqjB,EACAtH,EAAA7b,GAAA7G,MAAA0iB,EACA,IAAAC,GAAAyG,GAAA5H,EAAAgH,IAAAyB,EAAAhG,GAAAtB,EAAA8D,EAAA/D,EAAA72D,QACAo+D,GAAAxD,KACA9f,EAAAqY,eACAiL,IACAtjB,EAAAkY,YACA5nB,EAAA,YAAA0P,GACAA,EAAAmY,WAEA2H,GACAhE,GAAAC,EAAAle,EAAAme,EAAA1rB,EAAA0P,GAEAA,EAAAsY,cAEAyD,EAAAyB,EAAAN,EAAA,MA4FA,OAAAhB,IAaA,QAAAqH,IAAAC,GACA,GAAApF,GAAA,EAAAG,EAAA9V,GAAA,EAAAllD,EAAAkgE,GAAAD,GAAAh/D,EAAAjB,EAAA66D,EAAAG,EAKA,OAJA/5D,GAAAk/D,UAAA,SAAA7+D,GACA,MAAAy3B,WAAAp3B,OACA3B,EAAA66D,EAAAv5D,EAAA,GAAA4jD,GAAA,IAAA8V,EAAA15D,EAAA,GAAA4jD,GAAA,MADA2V,EAAA3V,GAAA,IAAA8V,EAAA9V,GAAA,MAGAjkD,EAEA,QAAAm/D,IAAAvF,EAAAG,GAEA,QAAAqF,GAAAnL,EAAAC,GACA,GAAAmL,GAAAtjC,KAAAwqB,KAAA+Y,EAAA,EAAA5/D,EAAAq8B,KAAA4oB,IAAAuP,IAAAx0D,CACA,QAAA2/D,EAAAtjC,KAAA4oB,IAAAsP,GAAAv0D,GAAA6/D,EAAAF,EAAAtjC,KAAA8pB,IAAAoO,IAHA,GAAAQ,GAAA14B,KAAA4oB,IAAAiV,GAAAl6D,GAAA+0D,EAAA14B,KAAA4oB,IAAAoV,IAAA,EAAAuF,EAAA,EAAA7K,GAAA,EAAA/0D,EAAA+0D,GAAA8K,EAAAxjC,KAAAwqB,KAAA+Y,GAAA5/D,CASA,OAJA0/D,GAAA1qB,OAAA,SAAAwE,EAAAgK,GACA,GAAAsc,GAAAD,EAAArc,CACA,QAAAnnB,KAAAsqB,MAAAnN,EAAAsmB,GAAA9/D,EAAAykD,IAAAmb,GAAApmB,IAAAsmB,KAAA9/D,MAAA,EAAAA,MAEA0/D,EAmGA,QAAAK,MAMA,QAAAzL,GAAA9a,EAAAgK,GACAwc,IAAAvJ,EAAAjd,EAAAmd,EAAAnT,EACAmT,EAAAnd,EAAAid,EAAAjT,EAPA,GAAAyc,GAAAC,EAAAvJ,EAAAF,CACA0J,IAAAxd,MAAA,SAAAnJ,EAAAgK,GACA2c,GAAAxd,MAAA2R,EACA2L,EAAAtJ,EAAAnd,EAAA0mB,EAAAzJ,EAAAjT,GAMA2c,GAAAlM,QAAA,WACAK,EAAA2L,EAAAC,IAWA,QAAAE,IAAA5mB,EAAAgK,GACAhK,EAAA6mB,QAAA7mB,GACAA,EAAA8mB,QAAA9mB,GACAgK,EAAA+c,QAAA/c,GACAA,EAAAgd,QAAAhd,GAEA,QAAAid,MA2BA,QAAA9d,GAAAnJ,EAAAgK,GACAhvB,EAAAjsB,KAAA,IAAAixC,EAAA,IAAAgK,EAAAkd,GAEA,QAAAC,GAAAnnB,EAAAgK,GACAhvB,EAAAjsB,KAAA,IAAAixC,EAAA,IAAAgK,GACAod,EAAAje,MAAAkW,EAEA,QAAAA,GAAArf,EAAAgK,GACAhvB,EAAAjsB,KAAA,IAAAixC,EAAA,IAAAgK,GAEA,QAAAyQ,KACA2M,EAAAje,QAEA,QAAAke,KACArsC,EAAAjsB,KAAA,KAxCA,GAAAm4D,GAAAI,GAAA,KAAAtsC,KACAosC,GACAje,QACAqR,UAAA,WACA4M,EAAAje,MAAAge,GAEA1M,UACAE,aAAA,WACAyM,EAAA3M,QAAA4M,GAEAzM,WAAA,WACAwM,EAAA3M,UACA2M,EAAAje,SAEAoe,YAAA,SAAApgE,GAEA,MADA+/D,GAAAI,GAAAngE,GACAigE,GAEA18D,OAAA,WACA,GAAAswB,EAAAxzB,OAAA,CACA,GAAAkD,GAAAswB,EAAAxjB,KAAA,GAEA,OADAwjB,MACAtwB,IAoBA,OAAA08D,GAEA,QAAAE,IAAAnF,GACA,YAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,eAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,cAAAA,EAAA,IAeA,QAAAqF,IAAAxnB,EAAAgK,GACA6S,IAAA7c,EACA8c,IAAA9S,IACA+S,GAEA,QAAA0K,MAMA,QAAA3M,GAAA9a,EAAAgK,GACA,GAAAwa,GAAAxkB,EAAAmd,EAAAsH,EAAAza,EAAAiT,EAAA/a,EAAArf,KAAAwqB,KAAAmX,IAAAC,IACApH,KAAAnb,GAAAib,EAAAnd,GAAA,EACAsd,IAAApb,GAAA+a,EAAAjT,GAAA,EACAuT,IAAArb,EACAslB,GAAArK,EAAAnd,EAAAid,EAAAjT,GAVA,GAAAmT,GAAAF,CACAyK,IAAAve,MAAA,SAAAnJ,EAAAgK,GACA0d,GAAAve,MAAA2R,EACA0M,GAAArK,EAAAnd,EAAAid,EAAAjT,IAUA,QAAA2d,MACAD,GAAAve,MAAAqe,GAEA,QAAAI,MAMA,QAAA9M,GAAA9a,EAAAgK,GACA,GAAAwa,GAAAxkB,EAAAmd,EAAAsH,EAAAza,EAAAiT,EAAA/a,EAAArf,KAAAwqB,KAAAmX,IAAAC,IACApH,KAAAnb,GAAAib,EAAAnd,GAAA,EACAsd,IAAApb,GAAA+a,EAAAjT,GAAA,EACAuT,IAAArb,EACAA,EAAA+a,EAAAjd,EAAAmd,EAAAnT,EACA8T,IAAA5b,GAAAib,EAAAnd,GACA+d,IAAA7b,GAAA+a,EAAAjT,GACAgU,IAAA,EAAA9b,EACAslB,GAAArK,EAAAnd,EAAAid,EAAAjT,GAdA,GAAAyc,GAAAC,EAAAvJ,EAAAF,CACAyK,IAAAve,MAAA,SAAAnJ,EAAAgK,GACA0d,GAAAve,MAAA2R,EACA0M,GAAAf,EAAAtJ,EAAAnd,EAAA0mB,EAAAzJ,EAAAjT,IAaA0d,GAAAjN,QAAA,WACAK,EAAA2L,EAAAC,IAGA,QAAAmB,IAAA3gD,GAqBA,QAAAiiC,GAAAnJ,EAAAgK,GACA9iC,EAAA4gD,OAAA9nB,EAAAunB,EAAAvd,GACA9iC,EAAA86C,IAAAhiB,EAAAgK,EAAAud,EAAA,EAAAxF,IAEA,QAAAoF,GAAAnnB,EAAAgK,GACA9iC,EAAA4gD,OAAA9nB,EAAAgK,GACAod,EAAAje,MAAAkW,EAEA,QAAAA,GAAArf,EAAAgK,GACA9iC,EAAA6gD,OAAA/nB,EAAAgK,GAEA,QAAAyQ,KACA2M,EAAAje,QAEA,QAAAke,KACAngD,EAAA8gD,YAnCA,GAAAT,GAAA,IACAH,GACAje,QACAqR,UAAA,WACA4M,EAAAje,MAAAge,GAEA1M,UACAE,aAAA,WACAyM,EAAA3M,QAAA4M,GAEAzM,WAAA,WACAwM,EAAA3M,UACA2M,EAAAje,SAEAoe,YAAA,SAAApgE,GAEA,MADAogE,GAAApgE,EACAigE,GAEA18D,OAAAm3C,EAmBA,OAAAulB,GAEA,QAAAa,IAAAC,GAEA,QAAAC,GAAAf,GACA,OAAAgB,EAAAC,EAAAC,GAAAlB,GAEA,QAAAkB,GAAAlB,GACA,MAAAmB,IAAAnB,EAAA,SAAApnB,EAAAgK,GACAhK,EAAAkoB,EAAAloB,EAAAgK,GACAod,EAAAje,MAAAnJ,EAAA,GAAAA,EAAA,MAGA,QAAAqoB,GAAAjB,GAeA,QAAAje,GAAAnJ,EAAAgK,GACAhK,EAAAkoB,EAAAloB,EAAAgK,GACAod,EAAAje,MAAAnJ,EAAA,GAAAA,EAAA,IAEA,QAAAwa,KACA2C,EAAArd,IACAqoB,EAAAhf,MAAA+b,EACAkC,EAAA5M,YAEA,QAAA0K,GAAAnK,EAAAC,GACA,GAAAl1D,GAAAg2D,IAAAf,EAAAC,IAAAl0D,EAAAohE,EAAAnN,EAAAC,EACAwN,GAAArL,EAAAF,EAAA/B,EAAAuN,EAAAC,EAAApG,EAAAnF,EAAAr2D,EAAA,GAAAm2D,EAAAn2D,EAAA,GAAAo0D,EAAAH,EAAA0N,EAAA3iE,EAAA,GAAA4iE,EAAA5iE,EAAA,GAAAw8D,EAAAx8D,EAAA,GAAAsiE,EAAAhB,GACAA,EAAAje,MAAAgU,EAAAF,GAEA,QAAAxC,KACA0N,EAAAhf,QACAie,EAAA3M,UAEA,QAAAiF,KACAlF,IACA2N,EAAAhf,MAAAwf,EACAR,EAAA1N,QAAAkF,EAEA,QAAAgJ,GAAA5N,EAAAC,GACAkK,EAAAvJ,EAAAZ,EAAAa,EAAAZ,GAAAyL,EAAAtJ,EAAAuJ,EAAAzJ,EAAA2L,EAAAH,EAAAI,EAAAH,EAAAI,EAAAxG,EACA6F,EAAAhf,MAAA+b,EAEA,QAAAvF,KACA6I,EAAArL,EAAAF,EAAA/B,EAAAuN,EAAAC,EAAApG,EAAAmE,EAAAC,EAAA/K,EAAAiN,EAAAC,EAAAC,EAAAV,EAAAhB,GACAe,EAAA1N,UACAA,IA5CA,GAAAkB,GAAAC,EAAA6K,EAAAC,EAAAkC,EAAAC,EAAAC,EAAA5N,EAAAiC,EAAAF,EAAAwL,EAAAC,EAAApG,EACA6F,GACAhf,QACAqR,YACAC,UACAE,aAAA,WACAyM,EAAAzM,eACAwN,EAAA3N,UAAAkF,GAEA9E,WAAA,WACAwM,EAAAxM,aACAuN,EAAA3N,aAmCA,OAAA2N,GAEA,QAAAK,GAAArL,EAAAF,EAAA/B,EAAAuN,EAAAC,EAAApG,EAAA4B,EAAAC,EAAAvD,EAAAqE,EAAA8D,EAAAxF,EAAA3yC,EAAAw2C,GACA,GAAA5C,GAAAN,EAAA/G,EAAAsH,EAAAN,EAAAlH,EAAA+L,EAAAxE,IAAAC,GACA,IAAAuE,EAAA,EAAAC,GAAAr4C,IAAA,CACA,GAAAgvB,GAAA6oB,EAAAxD,EAAAplB,EAAA6oB,EAAAK,EAAAjjE,EAAAw8D,EAAAiB,EAAA19D,EAAAg9B,KAAAwqB,KAAAzN,IAAAC,IAAA/5C,KAAAojE,EAAArmC,KAAAsoB,KAAArlD,GAAAD,GAAAsjE,EAAA/X,MAAAtrD,GAAA,GAAA22D,IAAArL,GAAA8J,EAAA0F,GAAAnE,IAAAvB,EAAA0F,GAAA,EAAA/9B,KAAAsqB,MAAAtN,EAAAD,GAAA94C,EAAAohE,EAAAiB,EAAAD,GAAAE,EAAAtiE,EAAA,GAAAuiE,EAAAviE,EAAA,GAAAwiE,EAAAF,EAAAjM,EAAAoM,EAAAF,EAAApM,EAAAuM,EAAA/E,EAAA6E,EAAA9E,EAAA+E,GACAC,IAAAR,EAAAC,GAAA7X,IAAAoT,EAAA8E,EAAA7E,EAAA8E,GAAAP,EAAA,QAAAP,EAAAxD,EAAAyD,EAAAK,EAAAzG,EAAAiB,EAAAkG,KACAjB,EAAArL,EAAAF,EAAA/B,EAAAuN,EAAAC,EAAApG,EAAA8G,EAAAC,EAAAF,EAAAvpB,GAAA/5C,EAAAg6C,GAAAh6C,EAAAC,EAAA8qB,EAAAw2C,GACAA,EAAAje,MAAAigB,EAAAC,GACAb,EAAAY,EAAAC,EAAAF,EAAAvpB,EAAAC,EAAA/5C,EAAAo+D,EAAAC,EAAAvD,EAAAqE,EAAA8D,EAAAxF,EAAA3yC,EAAAw2C,KAlEA,GAAA6B,GAAA,GAAAQ,EAAA5mC,KAAA8pB,IAAA,GAAAC,IAAAwb,EAAA,EA2EA,OALAD,GAAArlC,UAAA,SAAA37B,GACA,MAAAy3B,WAAAp3B,QACA4gE,GAAAa,EAAA9hE,KAAA,MACAghE,GAFAtlC,KAAAwqB,KAAA4b,IAIAd,EAiDA,QAAAuB,IAAAxB,GACA,GAAAC,GAAAF,GAAA,SAAAjoB,EAAAgK,GACA,MAAAke,IAAAloB,EAAAoN,GAAApD,EAAAoD,MAEA,iBAAAga,GACA,MAAAuC,IAAAxB,EAAAf,KAYA,QAAAwC,IAAAxC,GACA/hE,KAAA+hE,SAsBA,QAAAmB,IAAAnB,EAAAje,GACA,OACAA,QACAkX,OAAA,WACA+G,EAAA/G,UAEA7F,UAAA,WACA4M,EAAA5M,aAEAC,QAAA,WACA2M,EAAA3M,WAEAE,aAAA,WACAyM,EAAAzM,gBAEAC,WAAA,WACAwM,EAAAxM,eAMA,QAAAiP,IAAA3B,GACA,MAAAnC,IAAA,WACA,MAAAmC,OAGA,QAAAnC,IAAAD,GAKA,QAAAgE,GAAA3gB,GAEA,MADAA,GAAA4gB,EAAA5gB,EAAA,GAAAyD,GAAAzD,EAAA,GAAAyD,KACAzD,EAAA,GAAAzI,EAAAspB,EAAAC,EAAA9gB,EAAA,GAAAzI,GAEA,QAAAlF,GAAA2N,GAEA,OADAA,EAAA4gB,EAAAvuB,QAAA2N,EAAA,GAAA6gB,GAAAtpB,GAAAupB,EAAA9gB,EAAA,IAAAzI,MACAyI,EAAA,GAAAiE,GAAAjE,EAAA,GAAAiE,IA4CA,QAAAwU,KACAmI,EAAA9L,GAAAmB,EAAA8K,GAAArG,EAAAsG,EAAAC,GAAAlC,EACA,IAAAmC,GAAAnC,EAAAnN,EAAAC,EAGA,OAFAgP,GAAAhqB,EAAAqqB,EAAA,GAAA3pB,EACAupB,EAAAjgB,EAAAqgB,EAAA,GAAA3pB,EACA4pB,IAEA,QAAAA,KAEA,MADAlD,OAAAmD,OAAA,EAAAnD,EAAA,MACA0C,EA/DA,GAAA5B,GAAA9I,EAAA2K,EAGKC,EAAAC,EAAA7C,EAHLoD,EAAAvC,GAAA,SAAAjoB,EAAAgK,GAEA,MADAhK,GAAAkoB,EAAAloB,EAAAgK,IACAhK,EAAA,GAAAU,EAAAspB,EAAAC,EAAAjqB,EAAA,GAAAU,KACKA,EAAA,IAAAV,EAAA,IAAAgK,EAAA,IAAA+Q,EAAA,EAAAC,EAAA,EAAA6I,EAAA,EAAAsG,EAAA,EAAAC,EAAA,EAAAK,EAAAC,GAAAC,EAAAnpB,EAAAopB,EAAA,KAAAC,EAAA,IA8DL,OArDAf,GAAA1C,OAAA,SAAA0D,GAIA,MAHA1D,OAAAmD,OAAA,GACAnD,EAAAuC,GAAAc,EAAArL,EAAAoL,EAAAG,EAAAG,MACA1D,EAAAmD,OAAA,EACAnD,GAEA0C,EAAAc,UAAA,SAAAzjE,GACA,MAAAy3B,WAAAp3B,QACAijE,EAAA,MAAAtjE,GAAAyjE,EAAAzjE,EAAAujE,IAAAxI,IAAA0I,GAAAzjE,GAAAylD,IACA0d,KAFAM,GAIAd,EAAAe,WAAA,SAAA1jE,GACA,MAAAy3B,WAAAp3B,QACAqjE,EAAA1jE,EACAwjE,EAAAxjE,EAAAu9D,GAAAv9D,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OAAAq6C,EACA8oB,KAHAO,GAKAf,EAAAzY,MAAA,SAAAlqD,GACA,MAAAy3B,WAAAp3B,QACAk5C,GAAAv5C,EACAy6D,KAFAlhB,GAIAopB,EAAAiB,UAAA,SAAA5jE,GACA,MAAAy3B,WAAAp3B,QACAw4C,GAAA74C,EAAA,GACA6iD,GAAA7iD,EAAA,GACAy6D,MAHA5hB,EAAAgK,IAKA8f,EAAAO,OAAA,SAAAljE,GACA,MAAAy3B,WAAAp3B,QACAuzD,EAAA5zD,EAAA,OAAAylD,GACAoO,EAAA7zD,EAAA,OAAAylD,GACAgV,MAHA7G,EAAA3N,GAAA4N,EAAA5N,KAKA0c,EAAA1K,OAAA,SAAAj4D,GACA,MAAAy3B,WAAAp3B,QACAq8D,EAAA18D,EAAA,OAAAylD,GACAud,EAAAhjE,EAAA,OAAAylD,GACAwd,EAAAjjE,EAAAK,OAAA,EAAAL,EAAA,OAAAylD,GAAA,EACAgV,MAJAiC,EAAAzW,GAAA+c,EAAA/c,GAAAgd,EAAAhd,KAMA5K,GAAAuN,OAAA+Z,EAAAU,EAAA,aAYA,WAGA,MAFAtC,GAAApC,EAAAp8D,MAAArE,KAAAu5B,WACAkrC,EAAAtuB,OAAA0sB,EAAA1sB,UACAomB,KAGA,QAAA+H,IAAAvC,GACA,MAAAmB,IAAAnB,EAAA,SAAApnB,EAAAgK,GACAod,EAAAje,MAAAnJ,EAAA4M,GAAA5C,EAAA4C,MAGA,QAAAoe,IAAAjQ,EAAAC,GACA,OAAAD,EAAAC,GAiBA,QAAAiQ,IAAAlQ,EAAAC,GACA,OAAAD,EAAAhQ,GAAAgQ,EAAAgH,GAAAhH,GAAAhQ,GAAAgQ,EAAAgH,GAAAhH,EAAAC,GAGA,QAAAkP,IAAArG,EAAAsG,EAAAC,GACA,MAAAvG,GAAAsG,GAAAC,EAAAnM,GAAAiN,GAAArH,GAAAsH,GAAAhB,EAAAC,IAAAc,GAAArH,GAAAsG,GAAAC,EAAAe,GAAAhB,EAAAC,GAAAa,GAEA,QAAAG,IAAAvH,GACA,gBAAA9I,EAAAC,GACA,MAAAD,IAAA8I,GAAA9I,EAAAhQ,GAAAgQ,EAAAgH,GAAAhH,GAAAhQ,GAAAgQ,EAAAgH,GAAAhH,EAAAC,IAGA,QAAAkQ,IAAArH,GACA,GAAAwH,GAAAD,GAAAvH,EAEA,OADAwH,GAAA7vB,OAAA4vB,IAAAvH,GACAwH,EAEA,QAAAF,IAAAhB,EAAAC,GAEA,QAAAiB,GAAAtQ,EAAAC,GACA,GAAAK,GAAAx4B,KAAA8pB,IAAAqO,GAAAhb,EAAAnd,KAAA8pB,IAAAoO,GAAAM,EAAArR,EAAAnnB,KAAA4oB,IAAAsP,GAAAM,EAAAnZ,EAAArf,KAAA4oB,IAAAuP,GAAAta,EAAAwB,EAAAopB,EAAAtrB,EAAAurB,CACA,QAAA1oC,KAAAsqB,MAAAnD,EAAAwhB,EAAA9qB,EAAA+qB,EAAAzrB,EAAAsrB,EAAAppB,EAAAqpB,GAAAtgB,GAAAvK,EAAA8qB,EAAAxhB,EAAAyhB,IAHA,GAAAH,GAAAzoC,KAAA8pB,IAAAwd,GAAAoB,EAAA1oC,KAAA4oB,IAAA0e,GAAAqB,EAAA3oC,KAAA8pB,IAAAyd,GAAAqB,EAAA5oC,KAAA4oB,IAAA2e,EASA,OAJAiB,GAAA7vB,OAAA,SAAAuf,EAAAC,GACA,GAAAK,GAAAx4B,KAAA8pB,IAAAqO,GAAAhb,EAAAnd,KAAA8pB,IAAAoO,GAAAM,EAAArR,EAAAnnB,KAAA4oB,IAAAsP,GAAAM,EAAAnZ,EAAArf,KAAA4oB,IAAAuP,GAAAta,EAAAwB,EAAAspB,EAAAxhB,EAAAyhB,CACA,QAAA5oC,KAAAsqB,MAAAnD,EAAAwhB,EAAAtpB,EAAAupB,EAAAzrB,EAAAsrB,EAAA5qB,EAAA6qB,GAAAtgB,GAAAvK,EAAA4qB,EAAAtrB,EAAAurB,KAEAF,EAkCA,QAAArH,IAAA7B,EAAAr/B,GACA,GAAAu/B,GAAAx/B,KAAA8pB,IAAAwV,GAAAuJ,EAAA7oC,KAAA4oB,IAAA0W,EACA,iBAAAf,EAAAC,EAAAC,EAAAhf,GACA,GAAAvqB,GAAAupC,EAAAx+B,CACA,OAAAs+B,GACAA,EAAAuK,GAAAtJ,EAAAjB,GACAC,EAAAsK,GAAAtJ,EAAAhB,IACAC,EAAA,EAAAF,EAAAC,EAAAD,EAAAC,KAAAD,GAAAE,EAAAS,MAEAX,EAAAe,EAAAb,EAAAS,GACAV,EAAAc,EAAA,GAAApqC,EAEA,QAAAoxB,GAAAkH,EAAA+Q,EAA+BE,EAAA,EAAAjR,EAAAgR,EAAAhR,EAAAgR,EAAiChR,GAAAt4B,EAChEuqB,EAAA6G,SAAAmT,IAAA+F,GAAAqJ,EAAA7oC,KAAA8pB,IAAA0D,IAAAqb,EAAA7oC,KAAA4oB,IAAA4E,MAAA,GAAAlH,EAAA,KAIA,QAAAwiB,IAAAtJ,EAAAlZ,GACA,GAAAvJ,GAAAkc,GAAA3S,EACAvJ,GAAA,IAAAyiB,EACAhG,GAAAzc,EACA,IAAAgsB,GAAA9gB,IAAAlL,EAAA,GACA,UAAAA,EAAA,MAAAgsB,KAAA,EAAA/oC,KAAAgpC,GAAApP,KAAA,EAAA55B,KAAAgpC,IAgFA,QAAAC,IAAA7O,EAAAkH,EAAAM,GACA,GAAAza,GAAAxH,GAAAzF,MAAAkgB,EAAAkH,EAAA1H,GAAAgI,GAAAp+B,OAAA89B,EACA,iBAAAnkB,GACA,MAAAgK,GAAA3gD,IAAA,SAAA2gD,GACA,OAAAhK,EAAAgK,MAIA,QAAA+hB,IAAA5O,EAAA+G,EAAAM,GACA,GAAAxkB,GAAAwC,GAAAzF,MAAAogB,EAAA+G,EAAAzH,GAAA+H,GAAAn+B,OAAA69B,EACA,iBAAAla,GACA,MAAAhK,GAAA32C,IAAA,SAAA22C,GACA,OAAAA,EAAAgK,MAIA,QAAAgiB,IAAAjmE,GACA,MAAAA,GAAA6O,OAEA,QAAAq3D,IAAAlmE,GACA,MAAAA,GAAAurC,OA+BA,QAAA46B,IAAA/O,EAAAF,EAAAiH,EAAAC,GACA,GAAAgI,GAAAtpC,KAAA8pB,IAAAsQ,GAAAmP,EAAAvpC,KAAA4oB,IAAAwR,GAAAoP,EAAAxpC,KAAA8pB,IAAAwX,GAAAmI,EAAAzpC,KAAA4oB,IAAA0Y,GAAAoI,EAAAJ,EAAAtpC,KAAA8pB,IAAAwQ,GAAAqP,EAAAL,EAAAtpC,KAAA4oB,IAAA0R,GAAAsP,EAAAJ,EAAAxpC,KAAA8pB,IAAAuX,GAAAwI,EAAAL,EAAAxpC,KAAA4oB,IAAAyY,GAAAn+D,EAAA,EAAA88B,KAAAsoB,KAAAtoB,KAAAwqB,KAAA7B,GAAA2Y,EAAAlH,GAAAkP,EAAAE,EAAA7gB,GAAA0Y,EAAA/G,KAAAzc,EAAA,EAAA7d,KAAA4oB,IAAA1lD,GACA6sC,EAAA7sC,EAAA,SAAAsqD,GACA,GAAAiH,GAAAz0B,KAAA4oB,IAAA4E,GAAAtqD,GAAA26C,EAAA0W,EAAAv0B,KAAA4oB,IAAA1lD,EAAAsqD,GAAA3P,EAAAV,EAAAoX,EAAAmV,EAAAjV,EAAAmV,EAAAziB,EAAAoN,EAAAoV,EAAAlV,EAAAoV,EAAAxqB,EAAAkV,EAAAgV,EAAA9U,EAAAgV,CACA,QAAAzpC,KAAAsqB,MAAAnD,EAAAhK,GAAAoN,GAAAvqB,KAAAsqB,MAAAjL,EAAArf,KAAAwqB,KAAArN,IAAAgK,MAAAoD,KACK,WACL,OAAA+P,EAAA/P,GAAA6P,EAAA7P,IAGA,OADAxa,GAAA+5B,SAAA5mE,EACA6sC,EAgBA,QAAAg6B,MASA,QAAA9R,GAAAC,EAAAC,GACA,GAAAM,GAAAz4B,KAAA4oB,IAAAuP,GAAApO,IAAAyO,EAAAx4B,KAAA8pB,IAAAqO,GAAA3K,EAAAe,IAAA2J,GAAAnO,IAAAsO,GAAA2R,EAAAhqC,KAAA8pB,IAAA0D,EACAyc,KAAAjqC,KAAAsqB,MAAAtqB,KAAAwqB,MAAAgD,EAAAgL,EAAAx4B,KAAA4oB,IAAA4E,SAAAoL,EAAAH,EAAAC,EAAAF,EAAAwR,GAAAxc,GAAAkL,EAAAD,EAAAG,EAAAJ,EAAAwR,GACA3R,EAAAH,EAAAQ,EAAAD,EAAAG,EAAAJ,EAXA,GAAAH,GAAAK,EAAAE,CACAsR,IAAA5jB,MAAA,SAAA4R,EAAAC,GACAE,EAAAH,EAAAnO,GAAA2O,EAAA14B,KAAA4oB,IAAAuP,GAAApO,IAAA6O,EAAA54B,KAAA8pB,IAAAqO,GACA+R,GAAA5jB,MAAA2R,GAEAiS,GAAAtS,QAAA,WACAsS,GAAA5jB,MAAA4jB,GAAAtS,QAAA5Y,GAQA,QAAAmrB,IAAA3b,EAAAua,GACA,QAAAqB,GAAAlS,EAAAC,GACA,GAAAkS,GAAArqC,KAAA8pB,IAAAoO,GAAAM,EAAAx4B,KAAA8pB,IAAAqO,GAAAta,EAAA2Q,EAAA6b,EAAA7R,EACA,QAAA3a,EAAA2a,EAAAx4B,KAAA4oB,IAAAsP,GAAAra,EAAA7d,KAAA4oB,IAAAuP,IAMA,MAJAiS,GAAAzxB,OAAA,SAAAwE,EAAAgK,GACA,GAAAmc,GAAAtjC,KAAAwqB,KAAArN,IAAAgK,KAAAlkD,EAAA8lE,EAAAzF,GAAAgH,EAAAtqC,KAAA4oB,IAAA3lD,GAAAsnE,EAAAvqC,KAAA8pB,IAAA7mD,EACA,QAAA+8B,KAAAsqB,MAAAnN,EAAAmtB,EAAAhH,EAAAiH,GAAAvqC,KAAAsoB,KAAAgb,GAAAnc,EAAAmjB,EAAAhH,KAEA8G,EAiBA,QAAAI,IAAA3M,EAAAG,GAKA,QAAAqF,GAAAnL,EAAAC,GACAsS,EAAA,EACAtS,GAAA9P,GAAAuR,KAAAzB,GAAA9P,GAAAuR,IAEAzB,EAAA9P,GAAAuR,KAAAzB,EAAA9P,GAAAuR,GAEA,IAAA0J,GAAAmH,EAAAzqC,KAAA0qB,IAAA8C,EAAA2K,GAAAx0D,EACA,QAAA2/D,EAAAtjC,KAAA4oB,IAAAjlD,EAAAu0D,GAAAuS,EAAAnH,EAAAtjC,KAAA8pB,IAAAnmD,EAAAu0D,IAXA,GAAAU,GAAA54B,KAAA8pB,IAAA+T,GAAArQ,EAAA,SAAA2K,GACA,MAAAn4B,MAAA0qC,IAAAxiB,GAAA,EAAAiQ,EAAA,IACKx0D,EAAAk6D,IAAAG,EAAAh+B,KAAA4oB,IAAAiV,GAAA79B,KAAAouB,IAAAwK,EAAA54B,KAAA8pB,IAAAkU,IAAAh+B,KAAAouB,IAAAZ,EAAAwQ,GAAAxQ,EAAAqQ,IAAA4M,EAAA7R,EAAA54B,KAAA0qB,IAAA8C,EAAAqQ,GAAAl6D,IACL,OAAAA,IAUA0/D,EAAA1qB,OAAA,SAAAwE,EAAAgK,GACA,GAAAsc,GAAAgH,EAAAtjB,EAAAmc,EAAAvb,GAAApkD,GAAAq8B,KAAAwqB,KAAArN,IAAAsmB,IACA,QAAAzjC,KAAAsqB,MAAAnN,EAAAsmB,GAAA9/D,EAAA,EAAAq8B,KAAAq+B,KAAAr+B,KAAA0qB,IAAA+f,EAAAnH,EAAA,EAAA3/D,IAAA0kD,KAEAgb,GAdAsH,GAmBA,QAAAC,IAAA/M,EAAAG,GAGA,QAAAqF,GAAAnL,EAAAC,GACA,GAAAmL,GAAAuH,EAAA1S,CACA,QAAAmL,EAAAtjC,KAAA4oB,IAAAjlD,EAAAu0D,GAAA2S,EAAAvH,EAAAtjC,KAAA8pB,IAAAnmD,EAAAu0D,IAJA,GAAAU,GAAA54B,KAAA8pB,IAAA+T,GAAAl6D,EAAAk6D,IAAAG,EAAAh+B,KAAA4oB,IAAAiV,IAAAjF,EAAA54B,KAAA8pB,IAAAkU,OAAAH,GAAAgN,EAAAjS,EAAAj1D,EAAAk6D,CACA,OAAAtP,IAAA5qD,GAAAi2D,GAAAuO,IAKA9E,EAAA1qB,OAAA,SAAAwE,EAAAgK,GACA,GAAAsc,GAAAoH,EAAA1jB,CACA,QAAAnnB,KAAAsqB,MAAAnN,EAAAsmB,GAAA9/D,EAAAknE,EAAA9iB,GAAApkD,GAAAq8B,KAAAwqB,KAAArN,IAAAsmB,OAEAJ,GAWA,QAAAsH,IAAAzS,EAAAC,GACA,OAAAD,EAAAl4B,KAAAouB,IAAApuB,KAAA0qC,IAAAxiB,GAAA,EAAAiQ,EAAA,KAKA,QAAA2S,IAAAzF,GACA,GAAA0F,GAAA/nE,EAAAgkE,GAAA3B,GAAA7W,EAAAxrD,EAAAwrD,MAAA0Z,EAAAllE,EAAAklE,UAAAF,EAAAhlE,EAAAglE,UAqBA,OApBAhlE,GAAAwrD,MAAA,WACA,GAAA/pD,GAAA+pD,EAAA3nD,MAAA7D,EAAA+4B,UACA,OAAAt3B,KAAAzB,EAAA+nE,EAAA/nE,EAAAglE,WAAA,MAAAhlE,EAAAyB,GAEAzB,EAAAklE,UAAA,WACA,GAAAzjE,GAAAyjE,EAAArhE,MAAA7D,EAAA+4B,UACA,OAAAt3B,KAAAzB,EAAA+nE,EAAA/nE,EAAAglE,WAAA,MAAAhlE,EAAAyB,GAEAzB,EAAAglE,WAAA,SAAA1jE,GACA,GAAAG,GAAAujE,EAAAnhE,MAAA7D,EAAA+4B,UACA,IAAAt3B,IAAAzB,GACA,GAAA+nE,EAAA,MAAAzmE,EAAA,CACA,GAAAu5C,GAAAqK,GAAAsG,IAAAhB,EAAA0a,GACAF,KAAAxa,EAAA,GAAA3P,EAAA2P,EAAA,GAAA3P,IAAA2P,EAAA,GAAA3P,EAAA2P,EAAA,GAAA3P,UAEOktB,KACPtmE,EAAA,KAEA,OAAAA,IAEAzB,EAAAglE,WAAA,MAmBA,QAAAgD,IAAA9S,EAAAC,GACA,OAAAn4B,KAAAouB,IAAApuB,KAAA0qC,IAAAxiB,GAAA,EAAAiQ,EAAA,KAAAD,GAiBA,QAAA+S,IAAA/nE,GACA,MAAAA,GAAA,GAEA,QAAAgoE,IAAAhoE,GACA,MAAAA,GAAA,GA2BA,QAAAioE,IAAAlP,GAEA,OADAt4D,GAAAs4D,EAAAt3D,OAAAymE,GAAA,KAAAC,EAAA,EACAxoE,EAAA,EAAmBA,EAAAc,EAAOd,IAAA,CAC1B,KAAAwoE,EAAA,GAAArjB,GAAAiU,EAAAmP,EAAAC,EAAA,IAAApP,EAAAmP,EAAAC,EAAA,IAAApP,EAAAp5D,KAAA,KAAAwoE,CACAD,GAAAC,KAAAxoE,EAEA,MAAAuoE,GAAAhzC,MAAA,EAAAizC,GAEA,QAAAC,IAAAvuB,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,GAqDA,QAAAuuB,IAAAtnE,EAAA84C,EAAAC,GACA,OAAAA,EAAA,GAAAD,EAAA,KAAA94C,EAAA,GAAA84C,EAAA,KAAAC,EAAA,GAAAD,EAAA,KAAA94C,EAAA,GAAA84C,EAAA,IAEA,QAAAyuB,IAAAvoE,EAAAC,EAAA65C,EAAAC,GACA,GAAAqkB,GAAAp+D,EAAA,GAAAwoE,EAAA1uB,EAAA,GAAA2uB,EAAAxoE,EAAA,GAAAm+D,EAAAsK,EAAA3uB,EAAA,GAAAyuB,EAAAnK,EAAAr+D,EAAA,GAAA2oE,EAAA7uB,EAAA,GAAA8uB,EAAA3oE,EAAA,GAAAo+D,EAAAwK,EAAA9uB,EAAA,GAAA4uB,EAAAG,GAAAJ,GAAArK,EAAAsK,GAAAE,GAAAzK,EAAAoK,KAAAK,EAAAJ,EAAAC,EAAAE,EACA,QAAAxK,EAAA0K,EAAAL,EAAApK,EAAAyK,EAAAF,GAEA,QAAAG,IAAAxU,GACA,GAAAza,GAAAya,EAAA,GAAAxa,EAAAwa,IAAA7yD,OAAA,EACA,SAAAo4C,EAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,IAGA,QAAAivB,MACAC,GAAA1pE,MACAA,KAAA2pE,KAAA3pE,KAAA4pE,KAAA5pE,KAAA6pE,OAAA,KAEA,QAAAC,IAAAF,GACA,GAAAG,GAAAC,GAAA5kD,OAAA,GAAAqkD,GAEA,OADAM,GAAAH,OACAG,EAEA,QAAAE,IAAAF,GACAG,GAAAH,GACAI,GAAA/nC,OAAA2nC,GACAC,GAAAtgE,KAAAqgE,GACAL,GAAAK,GAEA,QAAAK,IAAAL,GACA,GAAAF,GAAAE,EAAAF,OAAAlvB,EAAAkvB,EAAAlvB,EAAAgK,EAAAklB,EAAAtR,GAAA8R,GACA1vB,IACAgK,KACKtyB,EAAA03C,EAAAO,EAAA9gE,EAAAugE,EAAAQ,EAAAC,GAAAT,EACLE,IAAAF,EAEA,KADA,GAAAU,GAAAp4C,EACAo4C,EAAAZ,QAAA9d,GAAApR,EAAA8vB,EAAAZ,OAAAlvB,GAAAyc,IAAArL,GAAApH,EAAA8lB,EAAAZ,OAAAtR,IAAAnB,IACA/kC,EAAAo4C,EAAAH,EACAE,EAAAE,QAAAD,GACAR,GAAAQ,GACAA,EAAAp4C,CAEAm4C,GAAAE,QAAAD,GACAP,GAAAO,EAEA,KADA,GAAAE,GAAAnhE,EACAmhE,EAAAd,QAAA9d,GAAApR,EAAAgwB,EAAAd,OAAAlvB,GAAAyc,IAAArL,GAAApH,EAAAgmB,EAAAd,OAAAtR,IAAAnB,IACA5tD,EAAAmhE,EAAAJ,EACAC,EAAA9gE,KAAAihE,GACAV,GAAAU,GACAA,EAAAnhE,CAEAghE,GAAA9gE,KAAAihE,GACAT,GAAAS,EACA,IAAAC,GAAAC,EAAAL,EAAAroE,MACA,KAAAyoE,EAAA,EAAkBA,EAAAC,IAAcD,EAChCD,EAAAH,EAAAI,GACAH,EAAAD,EAAAI,EAAA,GACAE,GAAAH,EAAAhB,KAAAc,EAAAb,KAAAe,EAAAf,KAAAS,EAEAI,GAAAD,EAAA,GACAG,EAAAH,EAAAK,EAAA,GACAF,EAAAhB,KAAAoB,GAAAN,EAAAb,KAAAe,EAAAf,KAAA,KAAAS,GACAW,GAAAP,GACAO,GAAAL,GAEA,QAAAM,IAAArB,GAEA,IADA,GAAAa,GAAAE,EAAAO,EAAAC,EAAAxwB,EAAAivB,EAAAjvB,EAAAywB,EAAAxB,EAAAjlB,EAAA3K,EAAAmwB,GAAAroE,EACAk4C,GAEA,IADAkxB,EAAAG,GAAArxB,EAAAoxB,GAAAzwB,GACAyc,GAAApd,IAAAiV,MAAiC,CAEjC,MADAkc,EAAAxwB,EAAA2wB,GAAAtxB,EAAAoxB,IACAhU,IAMS,CACT8T,GAAA9T,IACAqT,EAAAzwB,EAAAswB,EACAK,EAAA3wB,GACWmxB,GAAA/T,IACXqT,EAAAzwB,EACA2wB,EAAA3wB,EAAAuwB,GAEAE,EAAAE,EAAA3wB,CAEA,OAfA,IAAAA,EAAAuxB,EAAA,CACAd,EAAAzwB,CACA,OAEAA,IAAAuxB,EAeA,GAAAC,GAAA1B,GAAAF,EAEA,IADAO,GAAAsB,OAAAhB,EAAAe,GACAf,GAAAE,EAAA,CACA,GAAAF,IAAAE,EAOA,MANAT,IAAAO,GACAE,EAAAb,GAAAW,EAAAb,MACAO,GAAAsB,OAAAD,EAAAb,GACAa,EAAA7B,KAAAgB,EAAAhB,KAAAoB,GAAAN,EAAAb,KAAA4B,EAAA5B,MACAoB,GAAAP,OACAO,IAAAL,EAGA,KAAAA,EAEA,YADAa,EAAA7B,KAAAoB,GAAAN,EAAAb,KAAA4B,EAAA5B,MAGAM,IAAAO,GACAP,GAAAS,EACA,IAAAe,GAAAjB,EAAAb,KAAA7K,EAAA2M,EAAA/wB,EAAAqkB,EAAA0M,EAAA/mB,EAAAsa,EAAA2K,EAAAjvB,EAAAokB,EAAAG,EAAA0K,EAAAjlB,EAAAqa,EAAA2M,EAAAhB,EAAAf,KAAAtR,EAAAqT,EAAAhxB,EAAAokB,EAAAxG,EAAAoT,EAAAhnB,EAAAqa,EAAAt+D,EAAA,GAAAu+D,EAAA1G,EAAA2G,EAAA5G,GAAAsT,EAAA3M,IAAAC,IAAA2M,EAAAvT,IAAAC,IAAA8R,GACA1vB,GAAA4d,EAAAqT,EAAA1M,EAAA2M,GAAAnrE,EAAAq+D,EACApa,GAAAsa,EAAA4M,EAAAvT,EAAAsT,GAAAlrE,EAAAs+D,EAEA8L,IAAAH,EAAAhB,KAAA+B,EAAAC,EAAAtB,GACAmB,EAAA7B,KAAAoB,GAAAW,EAAA9B,EAAA,KAAAS,GACAM,EAAAhB,KAAAoB,GAAAnB,EAAA+B,EAAA,KAAAtB,GACAW,GAAAP,GACAO,GAAAL,IAEA,QAAAU,IAAA1O,EAAAyO,GACA,GAAAxB,GAAAjN,EAAAiN,KAAAkC,EAAAlC,EAAAjvB,EAAAoxB,EAAAnC,EAAAjlB,EAAAqnB,EAAAD,EAAAX,CACA,KAAAY,EAAA,MAAAF,EACA,IAAArB,GAAA9N,EAAA2N,CACA,KAAAG,EAAA,OAAAp9C,GACAu8C,GAAAa,EAAAb,IACA,IAAAqC,GAAArC,EAAAjvB,EAAAuxB,EAAAtC,EAAAjlB,EAAAwnB,EAAAD,EAAAd,CACA,KAAAe,EAAA,MAAAF,EACA,IAAAG,GAAAH,EAAAH,EAAAO,EAAA,EAAAL,EAAA,EAAAG,EAAA3xB,EAAA4xB,EAAAD,CACA,OAAAE,KAAA7xB,EAAAhd,KAAAwqB,KAAAxN,IAAA,EAAA6xB,GAAAD,MAAA,EAAAD,GAAAD,EAAAC,EAAA,EAAAJ,EAAAC,EAAA,KAAAK,EAAAP,GACAA,EAAAG,GAAA,EAEA,QAAAX,IAAA3O,EAAAyO,GACA,GAAAT,GAAAhO,EAAA4N,CACA,IAAAI,EAAA,MAAAU,IAAAV,EAAAS,EACA,IAAAxB,GAAAjN,EAAAiN,IACA,OAAAA,GAAAjlB,IAAAymB,EAAAxB,EAAAjvB,EAAAttB,IAEA,QAAAi/C,IAAA1C,GACA5pE,KAAA4pE,OACA5pE,KAAAusE,SAWA,QAAAC,IAAAC,GAEA,IADA,GAAA1I,GAAAC,EAAAiF,EAAAG,EAAAsD,EAAAC,EAAAC,EAAAC,EAAAnpD,EAAAC,EAAAm0C,EAAA2U,EAAA,MAAA5N,EAAA4N,EAAA,MAAA7U,EAAA6U,EAAA,MAAA3N,EAAA2N,EAAA,MAAAK,EAAAC,GAAAC,EAAAF,EAAA3qE,OACA6qE,KAEA,IADAN,EAAAI,EAAAE,KACAN,EAAAO,UAIA,IAHAL,EAAAF,EAAAH,MACAM,EAAAD,EAAAzqE,OACAwqE,EAAA,EACAA,EAAAE,GACAlpD,EAAAipD,EAAAD,GAAAhpD,MAAAslD,EAAAtlD,EAAAg3B,EAAAyuB,EAAAzlD,EAAAghC,EACAjhC,EAAAkpD,IAAAD,EAAAE,GAAAnpD,QAAAqgD,EAAArgD,EAAAi3B,EAAAqpB,EAAAtgD,EAAAihC,GACAoH,GAAAkd,EAAAlF,GAAA3M,IAAArL,GAAAqd,EAAApF,GAAA5M,MACAwV,EAAAvnD,OAAAsnD,EAAA,KAAAO,IAAAC,GAAAT,EAAA9C,KAAAjmD,EAAAooC,GAAAkd,EAAAnR,GAAAV,IAAA0H,EAAAsK,EAAAhS,IACAzc,EAAAmd,EACAnT,EAAAoH,GAAAgY,EAAAjM,GAAAV,GAAA4M,EAAAlF,GACW/S,GAAAqd,EAAAtK,GAAA1H,IAAAyH,EAAAoK,EAAA7R,IACXzc,EAAAoR,GAAAiY,EAAAlF,GAAA1H,GAAA2M,EAAAlF,EACAla,EAAAma,GACW/S,GAAAkd,EAAApK,GAAAzH,IAAAgS,EAAAxR,EAAAR,IACXzc,EAAAkkB,EACAla,EAAAoH,GAAAgY,EAAAlF,GAAAzH,GAAA4M,EAAApM,GACW7L,GAAAqd,EAAAxR,GAAAR,IAAA6R,EAAAnR,EAAAV,IACXzc,EAAAoR,GAAAiY,EAAApM,GAAAR,GAAA2M,EAAAjM,EACAnT,EAAAiT,GACW,MAAA8U,EAAA9C,KAAA,SACXiD,GAKA,QAAAO,IAAA7yB,EAAAC,GACA,MAAAA,GAAA+rB,MAAAhsB,EAAAgsB,MAEA,QAAA8G,MACA3D,GAAA1pE,MACAA,KAAA26C,EAAA36C,KAAA2kD,EAAA3kD,KAAA28D,IAAA38D,KAAA4pE,KAAA5pE,KAAAu4D,GAAA,KAEA,QAAAyS,IAAArO,GACA,GAAA8N,GAAA9N,EAAA2N,EAAAK,EAAAhO,EAAA4N,CACA,IAAAE,GAAAE,EAAA,CACA,GAAAe,GAAAjB,EAAAb,KAAA0D,EAAA3Q,EAAAiN,KAAA+B,EAAAhB,EAAAf,IACA,IAAA8B,IAAAC,EAAA,CACA,GAAA1M,GAAAqO,EAAA3yB,EAAAukB,EAAAoO,EAAA3oB,EAAAoa,EAAA2M,EAAA/wB,EAAAskB,EAAAD,EAAA0M,EAAA/mB,EAAAua,EAAA5G,EAAAqT,EAAAhxB,EAAAskB,EAAA1G,EAAAoT,EAAAhnB,EAAAua,EACAx+D,EAAA,GAAAq+D,EAAAxG,EAAAyG,EAAA1G,EACA,MAAA53D,IAAA6sE,IAAA,CACA,GAAAC,GAAAzO,IAAAC,IAAA6M,EAAAvT,IAAAC,IAAA5d,GAAA4d,EAAAiV,EAAAxO,EAAA6M,GAAAnrE,EAAAikD,GAAAoa,EAAA8M,EAAAvT,EAAAkV,GAAA9sE,EAAA63D,EAAA5T,EAAAua,EACA2K,EAAA4D,GAAAroD,OAAA,GAAAioD,GACAxD,GAAAlN,MACAkN,EAAAD,KAAA0D,EACAzD,EAAAlvB,IAAAskB,EACA4K,EAAAllB,EAAA4T,EAAA/6B,KAAAwqB,KAAArN,IAAAgK,KACAklB,EAAAtR,KACAoE,EAAAkN,QAEA,KADA,GAAApkC,GAAA,KAAAuU,EAAA0zB,GAAA5rE,EACAk4C,GACA,GAAA6vB,EAAAllB,EAAA3K,EAAA2K,GAAAklB,EAAAllB,IAAA3K,EAAA2K,GAAAklB,EAAAlvB,GAAAX,EAAAW,EAAA,CACA,IAAAX,EAAAiV,EAAkC,CAClCxpB,EAAAuU,EAAAswB,CACA,OAFAtwB,IAAAiV,MAIO,CACP,IAAAjV,EAAAuxB,EAAkC,CAClC9lC,EAAAuU,CACA,OAFAA,IAAAuxB,EAMAmC,GAAAjC,OAAAhmC,EAAAokC,GACApkC,IAAAkoC,GAAA9D,MAEA,QAAAK,IAAAvN,GACA,GAAAkN,GAAAlN,EAAAkN,MACAA,KACAA,EAAAS,IAAAqD,GAAA9D,EAAAU,GACAmD,GAAAtrC,OAAAynC,GACA4D,GAAA/jE,KAAAmgE,GACAH,GAAAG,GACAlN,EAAAkN,OAAA,MAGA,QAAA+D,IAAAnB,GAEA,IADA,GAAA7qE,GAAA2qE,EAAAsB,GAAA1U,EAAAyF,GAAA6N,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OAAApsE,EAAAksE,EAAApqE,OACA9B,KACAuB,EAAA2qE,EAAAlsE,KACAytE,GAAAlsE,EAAA6qE,KAAAtT,EAAAv3D,IAAAmqD,GAAAnqD,EAAA24C,EAAAI,EAAA/4C,EAAA44C,EAAAG,GAAAyc,IAAArL,GAAAnqD,EAAA24C,EAAAoK,EAAA/iD,EAAA44C,EAAAmK,GAAAyS,MACAx1D,EAAA24C,EAAA34C,EAAA44C,EAAA,KACA+xB,EAAAlnD,OAAAhlB,EAAA,IAIA,QAAAytE,IAAAnE,EAAA8C,GACA,GAAAsB,GAAApE,EAAAnvB,CACA,IAAAuzB,EAAA,QACA,IAAAC,GAAAC,EAAAC,EAAAvE,EAAApvB,EAAAud,EAAA2U,EAAA,MAAA5N,EAAA4N,EAAA,MAAA7U,EAAA6U,EAAA,MAAA3N,EAAA2N,EAAA,MAAAf,EAAA/B,EAAArpE,EAAAqrE,EAAAhC,EAAAviB,EAAA+mB,EAAAzC,EAAA/wB,EAAAyzB,EAAA1C,EAAA/mB,EAAA0pB,EAAA1C,EAAAhxB,EAAA2zB,EAAA3C,EAAAhnB,EAAA4pB,GAAAJ,EAAAE,GAAA,EAAAG,GAAAJ,EAAAE,GAAA,CACA,IAAAA,IAAAF,EAAA,CACA,GAAAG,EAAAzW,GAAAyW,GAAA1P,EAAA,MACA,IAAAsP,EAAAE,EAAA,CACA,GAAAH,GAGU,GAAAA,EAAAvpB,GAAAma,EAAA,WAHVoP,IACAvzB,EAAA4zB,EACA5pB,EAAAiT,EAEAmW,IACApzB,EAAA4zB,EACA5pB,EAAAma,OAEO,CACP,GAAAoP,GAGU,GAAAA,EAAAvpB,EAAAiT,EAAA,WAHVsW,IACAvzB,EAAA4zB,EACA5pB,EAAAma,EAEAiP,IACApzB,EAAA4zB,EACA5pB,EAAAiT,QAMA,IAFAoW,GAAAG,EAAAE,IAAAC,EAAAF,GACAH,EAAAO,EAAAR,EAAAO,EACAP,GAAA,GAAAA,EAAA,EACA,GAAAG,EAAAE,EAAA,CACA,GAAAH,GAGY,GAAAA,EAAAvpB,GAAAma,EAAA,WAHZoP,IACAvzB,GAAAid,EAAAqW,GAAAD,EACArpB,EAAAiT,EAEAmW,IACApzB,GAAAmkB,EAAAmP,GAAAD,EACArpB,EAAAma,OAES,CACT,GAAAoP,GAGY,GAAAA,EAAAvpB,EAAAiT,EAAA,WAHZsW,IACAvzB,GAAAmkB,EAAAmP,GAAAD,EACArpB,EAAAma,EAEAiP,IACApzB,GAAAid,EAAAqW,GAAAD,EACArpB,EAAAiT,OAIA,IAAAwW,EAAAE,EAAA,CACA,GAAAJ,GAGY,GAAAA,EAAAvzB,GAAAkkB,EAAA,WAHZqP,IACAvzB,EAAAmd,EACAnT,EAAAqpB,EAAAlW,EAAAmW,EAEAF,IACApzB,EAAAkkB,EACAla,EAAAqpB,EAAAnP,EAAAoP,OAES,CACT,GAAAC,GAGY,GAAAA,EAAAvzB,EAAAmd,EAAA,WAHZoW,IACAvzB,EAAAkkB,EACAla,EAAAqpB,EAAAnP,EAAAoP,EAEAF,IACApzB,EAAAmd,EACAnT,EAAAqpB,EAAAlW,EAAAmW,GAOA,MAFAtE,GAAApvB,EAAA2zB,EACAvE,EAAAnvB,EAAAuzB,GACA,EAEA,QAAAU,IAAA/C,EAAAC,GACA3rE,KAAAM,EAAAorE,EACA1rE,KAAAonD,EAAAukB,EACA3rE,KAAAu6C,EAAAv6C,KAAAw6C,EAAA,KAEA,QAAAuwB,IAAAW,EAAAC,EAAAuC,EAAAH,GACA,GAAApE,GAAA,GAAA8E,IAAA/C,EAAAC,EAMA,OALAkC,IAAAnkE,KAAAigE,GACAuE,GAAApD,GAAAnB,EAAA+B,EAAAC,EAAAuC,GACAH,GAAAjD,GAAAnB,EAAAgC,EAAAD,EAAAqC,GACAhB,GAAArB,EAAArrE,GAAAksE,MAAA7iE,KAAA,GAAAwjE,IAAAvD,EAAA+B,EAAAC,IACAoB,GAAApB,EAAAtrE,GAAAksE,MAAA7iE,KAAA,GAAAwjE,IAAAvD,EAAAgC,EAAAD,IACA/B,EAEA,QAAAwD,IAAAzB,EAAAwC,EAAAH,GACA,GAAApE,GAAA,GAAA8E,IAAA/C,EAAA,KAIA,OAHA/B,GAAApvB,EAAA2zB,EACAvE,EAAAnvB,EAAAuzB,EACAF,GAAAnkE,KAAAigE,GACAA,EAEA,QAAAmB,IAAAnB,EAAA+B,EAAAC,EAAAtB,GACAV,EAAApvB,GAAAovB,EAAAnvB,EAIKmvB,EAAArpE,IAAAqrE,EACLhC,EAAAnvB,EAAA6vB,EAEAV,EAAApvB,EAAA8vB,GANAV,EAAApvB,EAAA8vB,EACAV,EAAArpE,EAAAorE,EACA/B,EAAAviB,EAAAukB,GAOA,QAAAuB,IAAAvD,EAAA+B,EAAAC,GACA,GAAAuC,GAAAvE,EAAApvB,EAAAwzB,EAAApE,EAAAnvB,CACAx6C,MAAA2pE,OACA3pE,KAAA4pE,KAAA8B,EACA1rE,KAAAumE,MAAAoF,EAAAnuC,KAAAsqB,MAAA6jB,EAAAhnB,EAAA+mB,EAAA/mB,EAAAgnB,EAAAhxB,EAAA+wB,EAAA/wB,GAAAgvB,EAAArpE,IAAAorE,EAAAluC,KAAAsqB,MAAAimB,EAAApzB,EAAAuzB,EAAAvzB,EAAAuzB,EAAAvpB,EAAAopB,EAAAppB,GAAAnnB,KAAAsqB,MAAAomB,EAAAvzB,EAAAozB,EAAApzB,EAAAozB,EAAAppB,EAAAupB,EAAAvpB,GAUA,QAAA+pB,MACA1uE,KAAA8B,EAAA,KAEA,QAAA4nE,IAAA1vB,GACAA,EAAAwV,EAAAxV,EAAA+mB,EAAA/mB,EAAAiV,EAAAjV,EAAAuxB,EAAAvxB,EAAAswB,EAAAtwB,EAAAuwB,EAAA,KAkKA,QAAAoE,IAAAC,EAAA50B,GACA,GAAAv4C,GAAAu4C,EAAAukB,EAAAvkB,EAAAuxB,EAAA99C,EAAAhsB,EAAA+tD,CACA/hC,GACAA,EAAAwhC,IAAAxtD,EAAAgsB,EAAAwhC,EAAAsP,EAAuC9wC,EAAA89C,EAAAhN,EAEvCqQ,EAAA9sE,EAAAy8D,EAEAA,EAAA/O,EAAA/hC,EACAhsB,EAAA+tD,EAAA+O,EACA98D,EAAA8pE,EAAAhN,EAAAtP,EACAxtD,EAAA8pE,IAAA9pE,EAAA8pE,EAAA/b,EAAA/tD,GACA88D,EAAAtP,EAAAxtD,EAEA,QAAAotE,IAAAD,EAAA50B,GACA,GAAAv4C,GAAAu4C,EAAAukB,EAAAvkB,EAAAiV,EAAAxhC,EAAAhsB,EAAA+tD,CACA/hC,GACAA,EAAAwhC,IAAAxtD,EAAAgsB,EAAAwhC,EAAAsP,EAAuC9wC,EAAA89C,EAAAhN,EAEvCqQ,EAAA9sE,EAAAy8D,EAEAA,EAAA/O,EAAA/hC,EACAhsB,EAAA+tD,EAAA+O,EACA98D,EAAAwtD,EAAAsP,EAAAgN,EACA9pE,EAAAwtD,IAAAxtD,EAAAwtD,EAAAO,EAAA/tD,GACA88D,EAAAgN,EAAA9pE,EAEA,QAAAqtE,IAAA90B,GACA,KAAAA,EAAAiV,GAAAjV,IAAAiV,CACA,OAAAjV,GAEA,QAAA+0B,IAAAC,EAAAC,GACA,GAAAnX,GAAAF,EAAAiS,EAAAD,EAAAoF,EAAApnE,KAAAsnE,IAAA9pD,KAKA,KAJAyoD,MACAd,GAAA,GAAApnE,OAAAqpE,EAAA7sE,QACAgoE,GAAA,GAAAuE,IACAhB,GAAA,GAAAgB,MAGA,GADA7E,EAAA8D,GACA/D,KAAAC,GAAAD,EAAAjlB,EAAAklB,EAAAllB,GAAAilB,EAAAjlB,IAAAklB,EAAAllB,GAAAilB,EAAAjvB,EAAAkvB,EAAAlvB,GACAivB,EAAAjvB,IAAAmd,GAAA8R,EAAAjlB,IAAAiT,IACAmV,GAAAnD,EAAAvpE,GAAA,GAAAisE,IAAA1C,GACAqB,GAAArB,GACA9R,EAAA8R,EAAAjvB,EAAAid,EAAAgS,EAAAjlB,GAEAilB,EAAAoF,EAAA5pD,UACO,KAAAykD,EAGP,KAFAO,IAAAP,EAAAlN,KAKAsS,IAAArB,GAAAqB,GAAAzC,GAAAyC,GACA,IAAAE,IACArC,MAAAC,GACAR,MAAAsB,GAGA,OADA1D,IAAAuD,GAAAG,GAAAd,GAAA,KACAoC,EAEA,QAAAD,IAAA30B,EAAAC,GACA,MAAAA,GAAAmK,EAAApK,EAAAoK,GAAAnK,EAAAG,EAAAJ,EAAAI,EAqEA,QAAAy0B,IAAA70B,EAAAC,EAAA/5C,GACA,OAAA85C,EAAAI,EAAAl6C,EAAAk6C,IAAAH,EAAAmK,EAAApK,EAAAoK,IAAApK,EAAAI,EAAAH,EAAAG,IAAAl6C,EAAAkkD,EAAApK,EAAAoK,GAgHA,QAAA0qB,IAAA3uE,GACA,MAAAA,GAAAi6C,EAEA,QAAA20B,IAAA5uE,GACA,MAAAA,GAAAikD,EAEA,QAAA4qB,MACA,OACAC,MAAA,EACAC,SACA3rB,MAAA,KACAnJ,EAAA,KACAgK,EAAA,MAGA,QAAA+qB,IAAAjrB,EAAAzK,EAAA6kB,EAAAC,EAAAiF,EAAAC,GACA,IAAAvf,EAAAzK,EAAA6kB,EAAAC,EAAAiF,EAAAC,GAAA,CACA,GAAA2L,GAAA,IAAA9Q,EAAAkF,GAAA6L,EAAA,IAAA9Q,EAAAkF,GAAA9hE,EAAA83C,EAAAy1B,KACAvtE,GAAA,IAAAwtE,GAAAjrB,EAAAviD,EAAA,GAAA28D,EAAAC,EAAA6Q,EAAAC,GACA1tE,EAAA,IAAAwtE,GAAAjrB,EAAAviD,EAAA,GAAAytE,EAAA7Q,EAAAiF,EAAA6L,GACA1tE,EAAA,IAAAwtE,GAAAjrB,EAAAviD,EAAA,GAAA28D,EAAA+Q,EAAAD,EAAA3L,GACA9hE,EAAA,IAAAwtE,GAAAjrB,EAAAviD,EAAA,GAAAytE,EAAAC,EAAA7L,EAAAC,IAGA,QAAA6L,IAAApwE,EAAAk7C,EAAAgK,EAAAmT,EAAAF,EAAAqR,EAAAG,GACA,GAAA0G,GAAAC,EAAA1iD,GAiCA,OAhCA,SAAAqnB,GAAAsF,EAAA6kB,EAAAC,EAAAiF,EAAAC,GACA,KAAAnF,EAAAoK,GAAAnK,EAAAsK,GAAArF,EAAAjM,GAAAkM,EAAApM,GAAA,CACA,GAAA9T,EAAA9J,EAAA8J,MAAA,CACA,GAAAA,GAAAqb,EAAAxkB,EAAAX,EAAAW,EAAAykB,EAAAza,EAAA3K,EAAA2K,EAAAqrB,EAAA7Q,IAAAC,GACA,IAAA4Q,EAAAD,EAAA,CACA,GAAAzI,GAAA9pC,KAAAwqB,KAAA+nB,EAAAC,EACAlY,GAAAnd,EAAA2sB,EAAA1P,EAAAjT,EAAA2iB,EACA2B,EAAAtuB,EAAA2sB,EAAA8B,EAAAzkB,EAAA2iB,EACAwI,EAAAhsB,GAIA,OADA5hD,GAAA83C,EAAAy1B,MAAAQ,EAAA,IAAApR,EAAAkF,GAAAmM,EAAA,IAAApR,EAAAkF,GAAA9oB,EAAAP,GAAAs1B,EAAAE,EAAAxrB,GAAAurB,EACA7vE,EAAA8vE,GAAA,EAAAj1B,EAAAyG,EAAAthD,EAAA,EAAiDA,EAAAshD,IAAOthD,EACxD,GAAA25C,EAAA93C,EAAA,EAAA7B,GAAA,SAAAA,GACA,OACAq0C,EAAAsF,EAAA6kB,EAAAC,EAAAmR,EAAAC,EACA,MAEA,QACAx7B,EAAAsF,EAAAi2B,EAAAnR,EAAAiF,EAAAmM,EACA,MAEA,QACAx7B,EAAAsF,EAAA6kB,EAAAqR,EAAAD,EAAAjM,EACA,MAEA,QACAtvB,EAAAsF,EAAAi2B,EAAAC,EAAAnM,EAAAC,MAIKvkE,EAAAq4D,EAAAF,EAAAqR,EAAAG,GACL0G,EAGA,QAAAM,IAAA71B,EAAAC,GACAD,EAAA4C,GAAAgK,IAAA5M,GACAC,EAAA2C,GAAAgK,IAAA3M,EACA,IAAA61B,GAAA91B,EAAA6M,EAAAkpB,EAAA/1B,EAAAv4C,EAAAuuE,EAAAh2B,EAAAC,EAAAg2B,EAAAh2B,EAAA4M,EAAAipB,EAAAI,EAAAj2B,EAAAx4C,EAAAsuE,EAAAI,EAAAl2B,IAAA+1B,CACA,iBAAAvlB,GACA,UAAA3C,GAAA7qB,KAAA4a,MAAAi4B,EAAAG,EAAAxlB,IAAA3C,GAAA7qB,KAAA4a,MAAAk4B,EAAAG,EAAAzlB,IAAA3C,GAAA7qB,KAAA4a,MAAAm4B,EAAAG,EAAA1lB,KAIA,QAAA2lB,IAAAp2B,EAAAC,GACA,GAAsBa,GAAtBh7C,KAAcI,IACd,KAAA46C,IAAAd,GACAc,IAAAb,GACAn6C,EAAAg7C,GAAAu1B,GAAAr2B,EAAAc,GAAAb,EAAAa,IAEA56C,EAAA46C,GAAAd,EAAAc,EAGA,KAAAA,IAAAb,GACAa,IAAAd,KACA95C,EAAA46C,GAAAb,EAAAa,GAGA,iBAAA2P,GACA,IAAA3P,IAAAh7C,GAAAI,EAAA46C,GAAAh7C,EAAAg7C,GAAA2P,EACA,OAAAvqD,IAIA,QAAAowE,IAAAt2B,EAAAC,GAEA,MADAD,MAAAC,KACA,SAAAwQ,GACA,MAAAzQ,IAAA,EAAAyQ,GAAAxQ,EAAAwQ,GAIA,QAAA8lB,IAAAv2B,EAAAC,GACA,GAAAu2B,GAAAC,EAAAC,EAAAC,EAAAC,GAAAvmE,UAAAwmE,GAAAxmE,UAAA,EAAAvK,GAAA,EAAAqB,KAAA68D,IAEA,KADAhkB,GAAA,GAAAC,GAAA,IACAu2B,EAAAI,GAAAx6C,KAAA4jB,MAAAy2B,EAAAI,GAAAz6C,KAAA6jB,MACAy2B,EAAAD,EAAAlsE,OAAAosE,IACAD,EAAAz2B,EAAA5kB,MAAAs7C,EAAAD,GACAvvE,EAAArB,GAAAqB,EAAArB,IAAA4wE,EAA6BvvE,IAAArB,GAAA4wE,IAE7BF,IAAA,OAAAC,IAAA,IACAtvE,EAAArB,GAAAqB,EAAArB,IAAA2wE,EAA6BtvE,IAAArB,GAAA2wE,GAE7BtvE,IAAArB,GAAA,KACAk+D,EAAA70D,MACArJ,IACAs6C,EAAAk2B,GAAAE,EAAAC,MAGAE,EAAAE,GAAAxmE,SAMA,OAJAsmE,GAAA12B,EAAAr4C,SACA8uE,EAAAz2B,EAAA5kB,MAAAs7C,GACAxvE,EAAArB,GAAAqB,EAAArB,IAAA4wE,EAA2BvvE,IAAArB,GAAA4wE,GAE3BvvE,EAAAS,OAAA,EAAAo8D,EAAA,IAAA/jB,EAAA+jB,EAAA,GAAA5jB,EAAA,SAAAqQ,GACA,MAAAxQ,GAAAwQ,GAAA,KACK,WACL,MAAAxQ,KACKA,EAAA+jB,EAAAp8D,OAAA,SAAA6oD,GACL,OAAAnqD,GAAAR,EAAA,EAAwBA,EAAAm6C,IAAOn6C,EAAAqB,GAAAb,EAAA09D,EAAAl+D,OAAAQ,EAAA85C,EAAAqQ,EAC/B,OAAAtpD,GAAAyQ,KAAA,MAKA,QAAAy+D,IAAAr2B,EAAAC,GAEA,IADA,GAAAiK,GAAApkD,EAAA88C,GAAAk0B,cAAAlvE,SACA9B,GAAA,KAAAokD,EAAAtH,GAAAk0B,cAAAhxE,GAAAk6C,EAAAC,MACA,MAAAiK,GAOA,QAAA6sB,IAAA/2B,EAAAC,GACA,GAAAn6C,GAAAs6C,KAAAl6C,KAAA8wE,EAAAh3B,EAAAp4C,OAAAqvE,EAAAh3B,EAAAr4C,OAAAsvE,EAAAj0C,KAAAkT,IAAA6J,EAAAp4C,OAAAq4C,EAAAr4C,OACA,KAAA9B,EAAA,EAAeA,EAAAoxE,IAAQpxE,EAAAs6C,EAAAjxC,KAAAknE,GAAAr2B,EAAAl6C,GAAAm6C,EAAAn6C,IACvB,MAAUA,EAAAkxE,IAAOlxE,EAAAI,EAAAJ,GAAAk6C,EAAAl6C,EACjB,MAAUA,EAAAmxE,IAAOnxE,EAAAI,EAAAJ,GAAAm6C,EAAAn6C,EACjB,iBAAA2qD,GACA,IAAA3qD,EAAA,EAAiBA,EAAAoxE,IAAQpxE,EAAAI,EAAAJ,GAAAs6C,EAAAt6C,GAAA2qD,EACzB,OAAAvqD,IA4CA,QAAAixE,IAAAjtB,GACA,gBAAAuG,GACA,MAAAA,IAAA,IAAAA,GAAA,IAAAvG,EAAAuG,IAGA,QAAA2mB,IAAAltB,GACA,gBAAAuG,GACA,SAAAvG,EAAA,EAAAuG,IAGA,QAAA4mB,IAAAntB,GACA,gBAAAuG,GACA,UAAAA,EAAA,GAAAvG,EAAA,EAAAuG,GAAA,EAAAvG,EAAA,IAAAuG,KAGA,QAAA6mB,IAAA7mB,GACA,MAAAA,KAEA,QAAA8mB,IAAA9mB,GACA,MAAAA,OAEA,QAAA+mB,IAAA/mB,GACA,GAAAA,GAAA,UACA,IAAAA,GAAA,UACA,IAAAsT,GAAAtT,IAAAgnB,EAAA1T,EAAAtT,CACA,WAAAA,EAAA,GAAAgnB,EAAA,GAAAhnB,EAAAsT,GAAA0T,EAAA,KAEA,QAAAC,IAAArwE,GACA,gBAAAopD,GACA,MAAAxtB,MAAA0qB,IAAA8C,EAAAppD,IAGA,QAAAswE,IAAAlnB,GACA,SAAAxtB,KAAA8pB,IAAA0D,EAAAnF,IAEA,QAAAssB,IAAAnnB,GACA,MAAAxtB,MAAA0qB,IAAA,MAAA8C,EAAA,IAEA,QAAAonB,IAAApnB,GACA,SAAAxtB,KAAAwqB,KAAA,EAAAgD,KAEA,QAAAqnB,IAAA93B,EAAA94C,GACA,GAAAC,EAGA,OAFA63B,WAAAp3B,OAAA,IAAAV,EAAA,KACA83B,UAAAp3B,OAAAT,EAAAD,EAAAi7D,GAAAl/B,KAAAsoB,KAAA,EAAAvL,IAAuDA,EAAA,EAAA74C,EAAAD,EAAA,GACvD,SAAAupD,GACA,SAAAzQ,EAAA/c,KAAA0qB,IAAA,MAAA8C,GAAAxtB,KAAA4oB,KAAA4E,EAAAtpD,GAAAg7D,GAAAj7D,IAGA,QAAA6wE,IAAA5wE,GAEA,MADAA,OAAA,SACA,SAAAspD,GACA,MAAAA,OAAAtpD,EAAA,GAAAspD,EAAAtpD,IAGA,QAAA6wE,IAAAvnB,GACA,MAAAA,GAAA,cAAAA,MAAA,eAAAA,GAAA,UAAAA,EAAA,IAAAA,EAAA,iBAAAA,GAAA,WAAAA,EAAA,cAAAA,GAAA,YAAAA,EAAA,QAGA,QAAAwnB,IAAAj4B,EAAAC,GACAD,EAAA4C,GAAAs1B,IAAAl4B,GACAC,EAAA2C,GAAAs1B,IAAAj4B,EACA,IAAAk4B,GAAAn4B,EAAAgM,EAAAosB,EAAAp4B,EAAA95C,EAAAmyE,EAAAr4B,EAAAj6C,EAAAuyE,EAAAr4B,EAAA+L,EAAAmsB,EAAAI,EAAAt4B,EAAA/5C,EAAAkyE,EAAAI,EAAAv4B,EAAAl6C,EAAAsyE,CAGA,OAFA3pC,OAAA6pC,OAAA,EAAAH,EAAA1pC,MAAA0pC,GAAAn4B,EAAA/5C,EAAAkyE,GACA1pC,MAAA4pC,MAAA,EAAAH,EAAAzpC,MAAAypC,GAAAl4B,EAAA+L,EAAAmsB,GAAqDG,EAAA,IAAAA,GAAA,IAA8BA,GAAA,MAAAA,GAAA,KACnF,SAAA7nB,GACA,MAAA3D,IAAAqrB,EAAAG,EAAA7nB,EAAA2nB,EAAAG,EAAA9nB,EAAA4nB,EAAAG,EAAA/nB,GAAA,IAIA,QAAAgoB,IAAAz4B,EAAAC,GACAD,EAAA4C,GAAAoL,IAAAhO,GACAC,EAAA2C,GAAAoL,IAAA/N,EACA,IAAAk4B,GAAAn4B,EAAAgM,EAAA0sB,EAAA14B,EAAA74C,EAAAkxE,EAAAr4B,EAAAj6C,EAAAuyE,EAAAr4B,EAAA+L,EAAAmsB,EAAAzB,EAAAz2B,EAAA94C,EAAAuxE,EAAAF,EAAAv4B,EAAAl6C,EAAAsyE,CAGA,OAFA3pC,OAAAgoC,OAAA,EAAAgC,EAAAhqC,MAAAgqC,GAAAz4B,EAAA94C,EAAAuxE,GACAhqC,MAAA4pC,MAAA,EAAAH,EAAAzpC,MAAAypC,GAAAl4B,EAAA+L,EAAAmsB,GAAqDG,EAAA,IAAAA,GAAA,IAA8BA,GAAA,MAAAA,GAAA,KACnF,SAAA7nB,GACA,MAAAtE,IAAAgsB,EAAAG,EAAA7nB,EAAAioB,EAAAhC,EAAAjmB,EAAA4nB,EAAAG,EAAA/nB,GAAA,IAIA,QAAAkoB,IAAA34B,EAAAC,GACAD,EAAA4C,GAAAg2B,IAAA54B,GACAC,EAAA2C,GAAAg2B,IAAA34B,EACA,IAAAo4B,GAAAr4B,EAAAj6C,EAAA8yE,EAAA74B,IAAAg2B,EAAAh2B,EAAAC,EAAAu4B,EAAAv4B,EAAAl6C,EAAAsyE,EAAAS,EAAA74B,EAAAD,EAAA64B,EAAA1C,EAAAl2B,IAAA+1B,CACA,iBAAAvlB,GACA,MAAAxD,IAAAorB,EAAAG,EAAA/nB,EAAAooB,EAAAC,EAAAroB,EAAAulB,EAAAG,EAAA1lB,GAAA,IAIA,QAAAsoB,IAAA/4B,EAAAC,GAEA,MADAA,IAAAD,EACA,SAAAyQ,GACA,MAAAxtB,MAAA4a,MAAAmC,EAAAC,EAAAwQ,IAaA,QAAAuoB,IAAA/yE,GACA,GAAAgzE,IAAAhzE,EAAA+5C,EAAA/5C,EAAAg6C,GAAAi5B,GAAAjzE,EAAAC,EAAAD,EAAAE,GAAAgzE,EAAAC,GAAAH,GAAAI,EAAAC,GAAAL,EAAAC,GAAAK,EAAAH,GAAAI,GAAAN,EAAAD,GAAAI,KAAA,CACAJ,GAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,KACAA,EAAA,OACAA,EAAA,OACAE,IAAA,EACAE,IAAA,GAEA5zE,KAAA+5D,QAAA2Z,EAAAl2C,KAAAsqB,MAAA0rB,EAAA,GAAAA,EAAA,IAAAh2C,KAAAsqB,OAAA2rB,EAAA,GAAAA,EAAA,KAAA1rB,GACA/nD,KAAA0lE,WAAAllE,EAAAoB,EAAApB,EAAAikD,GACAzkD,KAAAgsD,OAAA0nB,EAAAI,GACA9zE,KAAAg0E,KAAAF,EAAAt2C,KAAAsqB,MAAA8rB,EAAAE,GAAA/rB,GAAA,EAKA,QAAA8rB,IAAAt5B,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAEA,QAAAm5B,IAAAp5B,GACA,GAAAc,GAAA7d,KAAAwqB,KAAA6rB,GAAAt5B,KAKA,OAJAc,KACAd,EAAA,IAAAc,EACAd,EAAA,IAAAc,GAEAA,EAEA,QAAA04B,IAAAx5B,EAAAC,EAAAa,GAGA,MAFAd,GAAA,IAAAc,EAAAb,EAAA,GACAD,EAAA,IAAAc,EAAAb,EAAA,GACAD,EAWA,QAAA05B,IAAAvyE,GACA,MAAAA,GAAAS,OAAAT,EAAA0jB,MAAA,OAEA,QAAA8uD,IAAAC,EAAAC,EAAA1yE,EAAA68D,GACA,GAAA4V,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IACA,GAAA/zE,GAAAqB,EAAAgI,KAAA,+BACA60D,GAAA70D,MACArJ,IAAA,EACAs6C,EAAAk2B,GAAAsD,EAAA,GAAAC,EAAA,MAEA/zE,IAAA,EACAs6C,EAAAk2B,GAAAsD,EAAA,GAAAC,EAAA,WAEKA,EAAA,IAAAA,EAAA,KACL1yE,EAAAgI,KAAA,aAAA0qE,EAAA,KAGA,QAAAC,IAAAC,EAAAC,EAAA7yE,EAAA68D,GACA+V,IAAAC,GACAD,EAAAC,EAAA,IAAAA,GAAA,IAAmCA,EAAAD,EAAA,MAAAA,GAAA,KACnC/V,EAAA70D,MACArJ,EAAAqB,EAAAgI,KAAAuqE,GAAAvyE,GAAA,sBACAi5C,EAAAk2B,GAAAyD,EAAAC,MAEKA,GACL7yE,EAAAgI,KAAAuqE,GAAAvyE,GAAA,UAAA6yE,EAAA,KAGA,QAAAC,IAAAC,EAAAC,EAAAhzE,EAAA68D,GACAkW,IAAAC,EACAnW,EAAA70D,MACArJ,EAAAqB,EAAAgI,KAAAuqE,GAAAvyE,GAAA,qBACAi5C,EAAAk2B,GAAA4D,EAAAC,KAEKA,GACLhzE,EAAAgI,KAAAuqE,GAAAvyE,GAAA,SAAAgzE,EAAA,KAGA,QAAAC,IAAAC,EAAAC,EAAAnzE,EAAA68D,GACA,GAAAqW,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IACA,GAAAx0E,GAAAqB,EAAAgI,KAAAuqE,GAAAvyE,GAAA,2BACA68D,GAAA70D,MACArJ,IAAA,EACAs6C,EAAAk2B,GAAA+D,EAAA,GAAAC,EAAA,MAEAx0E,IAAA,EACAs6C,EAAAk2B,GAAA+D,EAAA,GAAAC,EAAA,UAEK,KAAAA,EAAA,QAAAA,EAAA,IACLnzE,EAAAgI,KAAAuqE,GAAAvyE,GAAA,SAAAmzE,EAAA,KAGA,QAAAC,IAAAv6B,EAAAC,GACA,GAAA94C,MAAA68D,IAOA,OANAhkB,GAAA4C,GAAApzC,UAAAwwC,GAAAC,EAAA2C,GAAApzC,UAAAywC,GACA05B,GAAA35B,EAAAmrB,UAAAlrB,EAAAkrB,UAAAhkE,EAAA68D,GACA8V,GAAA95B,EAAAwf,OAAAvf,EAAAuf,OAAAr4D,EAAA68D,GACAiW,GAAAj6B,EAAAy5B,KAAAx5B,EAAAw5B,KAAAtyE,EAAA68D,GACAoW,GAAAp6B,EAAAyR,MAAAxR,EAAAwR,MAAAtqD,EAAA68D,GACAhkB,EAAAC,EAAA,KACA,SAAAwQ,GAEA,IADA,GAAAnqD,GAAAR,GAAA,EAAAc,EAAAo9D,EAAAp8D,SACA9B,EAAAc,GAAAO,GAAAb,EAAA09D,EAAAl+D,OAAAQ,EAAA85C,EAAAqQ,EACA,OAAAtpD,GAAAyQ,KAAA,KAGA,QAAA4iE,IAAAx6B,EAAAC,GAEA,MADAA,OAAAD,OAAA,EAAAC,EACA,SAAAG,GACA,OAAAA,EAAAJ,GAAAC,GAGA,QAAAw6B,IAAAz6B,EAAAC,GAEA,MADAA,OAAAD,OAAA,EAAAC,EACA,SAAAG,GACA,MAAAnd,MAAA8S,IAAA,EAAA9S,KAAAkT,IAAA,GAAAiK,EAAAJ,GAAAC,KAWA,QAAAy6B,IAAAC,GAEA,IADA,GAAAxxD,GAAAwxD,EAAA3lE,OAAAoU,EAAAuxD,EAAAjpC,OAAAkpC,EAAAC,GAAA1xD,EAAAC,GAAA81C,GAAA/1C,GACAA,IAAAyxD,GACAzxD,IAAA+J,OACAgsC,EAAA/vD,KAAAga,EAGA,KADA,GAAA23B,GAAAoe,EAAAt3D,OACAwhB,IAAAwxD,GACA1b,EAAAp0C,OAAAg2B,EAAA,EAAA13B,GACAA,IAAA8J,MAEA,OAAAgsC,GAEA,QAAA4b,IAAAr7B,GAEA,IADA,GAAAs7B,MAAA7nD,EAAAusB,EAAAvsB,OACA,MAAAA,GACA6nD,EAAA5rE,KAAAswC,GACAA,EAAAvsB,EACAA,UAGA,OADA6nD,GAAA5rE,KAAAswC,GACAs7B,EAEA,QAAAF,IAAA76B,EAAAC,GACA,GAAAD,IAAAC,EAAA,MAAAD,EAEA,KADA,GAAAg7B,GAAAF,GAAA96B,GAAAi7B,EAAAH,GAAA76B,GAAAi7B,EAAAF,EAAAnwD,MAAAswD,EAAAF,EAAApwD,MAAAuwD,EAAA,KACAF,IAAAC,GACAC,EAAAF,EACAA,EAAAF,EAAAnwD,MACAswD,EAAAF,EAAApwD,KAEA,OAAAuwD,GA6UA,QAAAC,IAAAl1E,GACAA,EAAAm1E,OAAA,EAEA,QAAAC,IAAAp1E,GACAA,EAAAm1E,QAAA,EAEA,QAAAE,IAAAr1E,GACAA,EAAAm1E,OAAA,EACAn1E,EAAAs1E,GAAAt1E,EAAAi6C,EAAAj6C,EAAAu1E,GAAAv1E,EAAAikD,EAEA,QAAAuxB,IAAAx1E,GACAA,EAAAm1E,QAAA,EAEA,QAAAM,IAAAC,EAAAC,EAAAC,GACA,GAAAhe,GAAA,EAAAC,EAAA,CAEA,IADA6d,EAAAG,OAAA,GACAH,EAAA5G,KAEA,IADA,GAAA/uE,GAAAgvE,EAAA2G,EAAA3G,MAAAtuE,EAAAsuE,EAAAttE,OAAA9B,GAAA,IACAA,EAAAc,GAEA,OADAV,EAAAgvE,EAAApvE,MAEA81E,GAAA11E,EAAA41E,EAAAC,GACAF,EAAAG,QAAA91E,EAAA81E,OACAje,GAAA73D,EAAA81E,OAAA91E,EAAA63D,GACAC,GAAA93D,EAAA81E,OAAA91E,EAAA83D,GAGA,IAAA6d,EAAAtyB,MAAA,CACAsyB,EAAA5G,OACA4G,EAAAtyB,MAAAnJ,GAAAnd,KAAAkO,SAAA,GACA0qC,EAAAtyB,MAAAa,GAAAnnB,KAAAkO,SAAA,GAEA,IAAA2P,GAAAg7B,EAAAC,EAAAF,EAAAtyB,MAAAh/C,MACAsxE,GAAAG,QAAAH,EAAAI,YAAAn7B,EACAid,GAAAjd,EAAA+6B,EAAAtyB,MAAAnJ,EACA4d,GAAAld,EAAA+6B,EAAAtyB,MAAAa,EAEAyxB,EAAA9d,KAAA8d,EAAAG,OACAH,EAAA7d,KAAA6d,EAAAG,OA6DA,QAAAE,IAAAp1E,EAAAq1E,GAIA,MAHAv5B,IAAAuN,OAAArpD,EAAAq1E,EAAA,2BACAr1E,EAAAouE,MAAApuE,EACAA,EAAAs1E,MAAAC,GACAv1E,EAEA,QAAAw1E,IAAA78B,EAAAlgB,GAEA,IADA,GAAA21C,IAAAz1B,GACA,OAAAA,EAAAy1B,EAAArqD,QAEA,GADA0U,EAAAkgB,IACA93C,EAAA83C,EAAA93C,YAAAf,EAAAe,EAAAC,QAEA,IADA,GAAAhB,GAAAe,IACAf,GAAA,GAAAsuE,EAAA/lE,KAAAxH,EAAAf,IAIA,QAAA21E,IAAA98B,EAAAlgB,GAEA,IADA,GAAA21C,IAAAz1B,GAAA+8B,KACA,OAAA/8B,EAAAy1B,EAAArqD,QAEA,GADA2xD,EAAArtE,KAAAswC,IACA93C,EAAA83C,EAAA93C,YAAAf,EAAAe,EAAAC,QAEA,IADA,GAAAhB,GAAAe,EAAA7B,GAAA,IACAA,EAAAc,GAAAsuE,EAAA/lE,KAAAxH,EAAA7B,GAGA,aAAA25C,EAAA+8B,EAAA3xD,QACA0U,EAAAkgB,GAGA,QAAAg9B,IAAAt2E,GACA,MAAAA,GAAAwB,SAEA,QAAA+0E,IAAAv2E,GACA,MAAAA,GAAAgD,MAEA,QAAAwzE,IAAA38B,EAAAC,GACA,MAAAA,GAAA92C,MAAA62C,EAAA72C,MAEA,QAAAkzE,IAAAnH,GACA,MAAAtyB,IAAA7G,MAAAm5B,EAAAzrE,IAAA,SAAAypB,GACA,OAAAA,EAAAvrB,cAAA8B,IAAA,SAAAmzE,GACA,OACA5nE,OAAAke,EACAwe,OAAAkrC,QAqJA,QAAAC,IAAA12E,GACA,MAAAA,GAAAi6C,EAEA,QAAA08B,IAAA32E,GACA,MAAAA,GAAAikD,EAEA,QAAA2yB,IAAA52E,EAAAk3D,EAAAjT,GACAjkD,EAAAk3D,KACAl3D,EAAAikD,IAiEA,QAAA4yB,IAAAhuE,GACA,MAAA4zC,IAAAzF,MAAAnuC,EAAApH,QAEA,QAAAq1E,IAAAjuE,GAEA,IADA,GAAAo4C,IAAA,EAAAnhD,EAAA+I,EAAA,GAAApH,OAAAy1D,OACAjW,EAAAnhD,GAAAo3D,EAAAjW,GAAA,CACA,OAAAiW,GAEA,QAAA6f,IAAA/yE,GAEA,IADA,GAAA22C,GAAAh7C,EAAA,EAAAshD,EAAA,EAAA1/C,EAAAyC,EAAA,MAAAvD,EAAAuD,EAAAvC,OACU9B,EAAAc,IAAMd,GAChBg7C,EAAA32C,EAAArE,GAAA,IAAA4B,IACA0/C,EAAAthD,EACA4B,EAAAo5C,EAGA,OAAAsG,GAEA,QAAA+1B,IAAAh3E,GACA,MAAAA,GAAAskC,OAAA2yC,GAAA,GAEA,QAAAA,IAAAl2E,EAAAf,GACA,MAAAe,GAAAf,EAAA,GAgDA,QAAAk3E,IAAAlgC,EAAA7xC,GACA,MAAAgyE,IAAAngC,EAAAla,KAAAwU,KAAAxU,KAAAouB,IAAA/lD,EAAA1D,QAAAq7B,KAAAs6C,IAAA,IAEA,QAAAD,IAAAngC,EAAAv2C,GAEA,IADA,GAAAw5C,IAAA,EAAAH,GAAA9C,EAAA,GAAAl3C,GAAAk3C,EAAA,GAAA8C,GAAAr5C,EAAAsjD,OACA9J,GAAAx5C,GAAAsjD,EAAA9J,GAAAn6C,EAAAm6C,EAAAH,CACA,OAAAiK,GAEA,QAAAszB,IAAAlyE,GACA,OAAAs3C,GAAAzM,IAAA7qC,GAAAs3C,GAAA7M,IAAAzqC,IA2CA,QAAAmyE,IAAAz9B,EAAAC,GACA,MAAAD,GAAA72C,MAAA82C,EAAA92C,MAEA,QAAAu0E,IAAA19B,EAAAC,GACA,GAAA/5C,GAAA85C,EAAA29B,UACA39B,GAAA29B,WAAA19B,EACAA,EAAA29B,WAAA59B,EACAC,EAAA09B,WAAAz3E,EACAA,EAAA03E,WAAA39B,EAEA,QAAA49B,IAAA79B,EAAAC,GACAD,EAAA29B,WAAA19B,EACAA,EAAA29B,WAAA59B,EAEA,QAAA89B,IAAA99B,EAAAC,GACA,GAAA2kB,GAAA3kB,EAAAG,EAAAJ,EAAAI,EAAAykB,EAAA5kB,EAAAmK,EAAApK,EAAAoK,EAAA2zB,EAAA/9B,EAAA6M,EAAA5M,EAAA4M,CACA,YAAAkxB,IAAAnZ,IAAAC,IAEA,QAAAmZ,IAAAv+B,GAGA,QAAAw+B,GAAAx+B,GACAy+B,EAAAj7C,KAAAkT,IAAAsJ,EAAAW,EAAAX,EAAAoN,EAAAqxB,GACAC,EAAAl7C,KAAA8S,IAAA0J,EAAAW,EAAAX,EAAAoN,EAAAsxB,GACAC,EAAAn7C,KAAAkT,IAAAsJ,EAAA2K,EAAA3K,EAAAoN,EAAAuxB,GACAC,EAAAp7C,KAAA8S,IAAA0J,EAAA2K,EAAA3K,EAAAoN,EAAAwxB,GANA,IAAAnJ,EAAAz1B,EAAA93C,YAAAf,EAAAsuE,EAAAttE,QAAA,CACA,GAAAstE,GAAAl1B,EAAAC,EAAA/5C,EAAAJ,EAAAshD,EAAAtG,EAAAl6C,EAAAs3E,EAAAprD,IAAAqrD,GAAArrD,IAAAsrD,EAAAtrD,IAAAurD,GAAAvrD,GAYA,IALAoiD,EAAA5lE,QAAAgvE,IACAt+B,EAAAk1B,EAAA,GACAl1B,EAAAI,GAAAJ,EAAA6M,EACA7M,EAAAoK,EAAA,EACA6zB,EAAAj+B,GACAp5C,EAAA,IACAq5C,EAAAi1B,EAAA,GACAj1B,EAAAG,EAAAH,EAAA4M,EACA5M,EAAAmK,EAAA,EACA6zB,EAAAh+B,GACAr5C,EAAA,GAQA,IAPAV,EAAAgvE,EAAA,GACAqJ,GAAAv+B,EAAAC,EAAA/5C,GACA+3E,EAAA/3E,GACAw3E,GAAA19B,EAAA95C,GACA85C,EAAA49B,WAAA13E,EACAw3E,GAAAx3E,EAAA+5C,GACAA,EAAAD,EAAA29B,WACA73E,EAAA,EAAmBA,EAAAc,EAAOd,IAAA,CAC1By4E,GAAAv+B,EAAAC,EAAA/5C,EAAAgvE,EAAApvE,GACA,IAAA04E,GAAA,EAAAC,EAAA,EAAAC,EAAA,CACA,KAAAt3B,EAAAnH,EAAA09B,WAAgCv2B,IAAAnH,EAASmH,IAAAu2B,WAAAc,IACzC,GAAAX,GAAA12B,EAAAlhD,GAAA,CACAs4E,EAAA,CACA,OAGA,MAAAA,EACA,IAAA19B,EAAAd,EAAA49B,WAAkC98B,IAAAsG,EAAAw2B,aAClCE,GAAAh9B,EAAA56C,GADsD46C,IAAA88B,WAAAc,KAMtDF,GACAC,EAAAC,GAAAD,GAAAC,GAAAz+B,EAAA4M,EAAA7M,EAAA6M,EAAAgxB,GAAA79B,EAAAC,EAAAmH,GAAiFy2B,GAAA79B,EAAAc,EAAAb,GACjFn6C,MAEA43E,GAAA19B,EAAA95C,GACA+5C,EAAA/5C,EACA+3E,EAAA/3E,IAKA,GAAA63D,IAAAmgB,EAAAC,GAAA,EAAAngB,GAAAogB,EAAAC,GAAA,EAAA5b,EAAA,CACA,KAAA38D,EAAA,EAAeA,EAAAc,EAAOd,IACtBI,EAAAgvE,EAAApvE,GACAI,EAAAk6C,GAAA2d,EACA73D,EAAAkkD,GAAA4T,EACAyE,EAAAx/B,KAAA8S,IAAA0sB,EAAAv8D,EAAA2mD,EAAA5pB,KAAAwqB,KAAAvnD,EAAAk6C,EAAAl6C,EAAAk6C,EAAAl6C,EAAAkkD,EAAAlkD,EAAAkkD,GAEA3K,GAAAoN,EAAA4V,EACAyS,EAAA5lE,QAAAqvE,KAEA,QAAAL,IAAA7+B,GACAA,EAAAk+B,WAAAl+B,EAAAm+B,WAAAn+B,EAEA,QAAAk/B,IAAAl/B,SACAA,GAAAk+B,iBACAl+B,GAAAm+B,WAEA,QAAAgB,IAAAn/B,EAAAW,EAAAgK,EAAAtJ,GACA,GAAAn5C,GAAA83C,EAAA93C,QAIA,IAHA83C,EAAAW,KAAAU,EAAArB,EAAAW,EACAX,EAAA2K,KAAAtJ,EAAArB,EAAA2K,EACA3K,EAAAoN,GAAA/L,EACAn5C,EAEA,IADA,GAAA7B,IAAA,EAAAc,EAAAe,EAAAC,SACA9B,EAAAc,GAAAg4E,GAAAj3E,EAAA7B,GAAAs6C,EAAAgK,EAAAtJ,GAGA,QAAAy9B,IAAAv+B,EAAAC,EAAA/5C,GACA,GAAA24E,GAAA7+B,EAAA6M,EAAA3mD,EAAA2mD,EAAA+X,EAAA3kB,EAAAG,EAAAJ,EAAAI,EAAAykB,EAAA5kB,EAAAmK,EAAApK,EAAAoK,CACA,IAAAy0B,IAAAja,GAAAC,GAAA,CACA,GAAAia,GAAA7+B,EAAA4M,EAAA3mD,EAAA2mD,EAAAkyB,EAAAna,IAAAC,GACAia,MACAD,IACA,IAAAz+B,GAAA,IAAAy+B,EAAAC,IAAA,EAAAC,GAAA30B,EAAAnnB,KAAAwqB,KAAAxqB,KAAA8S,IAAA,IAAA+oC,GAAAD,EAAAE,IAAAF,GAAAE,GAAAF,EAAAC,OAAA,EAAAC,EACA74E,GAAAk6C,EAAAJ,EAAAI,IAAAwkB,EAAAxa,EAAAya,EACA3+D,EAAAkkD,EAAApK,EAAAoK,EAAAhK,EAAAykB,EAAAza,EAAAwa,MAEA1+D,GAAAk6C,EAAAJ,EAAAI,EAAAy+B,EACA34E,EAAAkkD,EAAApK,EAAAoK,EAuHA,QAAA40B,IAAAh/B,EAAAC,GACA,MAAAD,GAAA9sB,QAAA+sB,EAAA/sB,OAAA,IAEA,QAAA+rD,IAAAv3E,GACA,GAAAC,GAAAD,EAAAC,QACA,OAAAA,GAAAC,OAAAD,EAAA,GAAAD,EAAA+oD,EAEA,QAAAyuB,IAAAx3E,GACA,GAAAd,GAAAe,EAAAD,EAAAC,QACA,QAAAf,EAAAe,EAAAC,QAAAD,EAAAf,EAAA,GAAAc,EAAA+oD,EAEA,QAAA0uB,IAAAC,EAAAC,EAAAjf,GACA,GAAAkf,GAAAlf,GAAAif,EAAAv5E,EAAAs5E,EAAAt5E,EACAu5E,GAAAn5E,GAAAo5E,EACAD,EAAAl4E,GAAAi5D,EACAgf,EAAAl5E,GAAAo5E,EACAD,EAAA/8B,GAAA8d,EACAif,EAAAp5E,GAAAm6D,EAEA,QAAAmf,IAAA73E,GAEA,IADA,GAAAK,GAAAq4D,EAAA,EAAAkf,EAAA,EAAA33E,EAAAD,EAAAC,SAAA7B,EAAA6B,EAAAC,SACA9B,GAAA,GACAiC,EAAAJ,EAAA7B,GACAiC,EAAAu6C,GAAA8d,EACAr4D,EAAA9B,GAAAm6D,EACAA,GAAAr4D,EAAAZ,GAAAm4E,GAAAv3E,EAAA7B,GAGA,QAAAs5E,IAAAC,EAAA/3E,EAAAg4E,GACA,MAAAD,GAAAz/B,EAAA9sB,SAAAxrB,EAAAwrB,OAAAusD,EAAAz/B,EAAA0/B,EA4CA,QAAAC,IAAAh4E,GACA,SAAAi7C,GAAA7M,IAAApuC,EAAA,SAAAi1E,GACA,MAAAA,GAAAxyB,IAGA,QAAAw1B,IAAAj4E,GACA,MAAAA,GAAA8iC,OAAA,SAAA2V,EAAAw8B,GACA,MAAAx8B,GAAAw8B,EAAAx8B,GACK,GAAAz4C,EAAAC,OAEL,QAAAi4E,IAAApgC,GACA,GAAA93C,GAAA83C,EAAA93C,QACA,OAAAA,MAAAC,OAAAi4E,GAAAl4E,EAAA,IAAA83C,EAEA,QAAAqgC,IAAArgC,GACA,GAAA74C,GAAAe,EAAA83C,EAAA93C,QACA,OAAAA,KAAAf,EAAAe,EAAAC,QAAAk4E,GAAAn4E,EAAAf,EAAA,IAAA64C,EAoJA,QAAAsgC,IAAAtgC,GACA,OACAW,EAAAX,EAAAW,EACAgK,EAAA3K,EAAA2K,EACAwa,GAAAnlB,EAAAmlB,GACAC,GAAAplB,EAAAolB,IAGA,QAAAmb,IAAAvgC,EAAAqK,GACA,GAAA1J,GAAAX,EAAAW,EAAA0J,EAAA,GAAAM,EAAA3K,EAAA2K,EAAAN,EAAA,GAAA8a,EAAAnlB,EAAAmlB,GAAA9a,EAAA,GAAAA,EAAA,GAAA+a,EAAAplB,EAAAolB,GAAA/a,EAAA,GAAAA,EAAA,EASA,OARA8a,GAAA,IACAxkB,GAAAwkB,EAAA,EACAA,EAAA,GAEAC,EAAA,IACAza,GAAAya,EAAA,EACAA,EAAA,IAGAzkB,IACAgK,IACAwa,KACAC,MAsCA,QAAAob,IAAAC,GACA,GAAA/2D,GAAA+2D,EAAA,GAAAC,EAAAD,IAAAt4E,OAAA,EACA,OAAAuhB,GAAAg3D,GAAAh3D,EAAAg3D,MAAAh3D,GAEA,QAAAi3D,IAAA3uB,GACA,MAAAA,GAAA4uB,YAAA5uB,EAAA4uB,cAAAJ,GAAAxuB,EAAAtU,SAEA,QAAAmjC,IAAAJ,EAAA/iC,EAAAojC,EAAAvtC,GACA,GAAA4oB,GAAA2kB,EAAAL,EAAA,GAAAA,EAAA,IAAAp6E,EAAAktC,EAAAmK,EAAA,GAAAA,EAAA,GACA,iBAAAiD,GACA,MAAAt6C,GAAA81D,EAAAxb,KAGA,QAAAogC,IAAAN,EAAAO,GACA,GAAA7b,GAAAnd,EAAA,EAAAi5B,EAAAR,EAAAt4E,OAAA,EAAA21D,EAAA2iB,EAAAz4B,GAAA6c,EAAA4b,EAAAQ,EAOA,OANApc,GAAA/G,IACAqH,EAAAnd,IAAAi5B,IAAA9b,EACAA,EAAArH,IAAA+G,IAAAM,GAEAsb,EAAAz4B,GAAAg5B,EAAA/oC,MAAA6lB,GACA2iB,EAAAQ,GAAAD,EAAAhpC,KAAA6sB,GACA4b,EAEA,QAAAS,IAAAxoD,GACA,MAAAA,IACAuf,MAAA,SAAA0I,GACA,MAAAnd,MAAAyU,MAAA0I,EAAAjoB,MAEAsf,KAAA,SAAA2I,GACA,MAAAnd,MAAAwU,KAAA2I,EAAAjoB,OAEKyoD,GAML,QAAAC,IAAAX,EAAA/iC,EAAAojC,EAAAvtC,GACA,GAAA4oB,MAAA91D,KAAAshD,EAAA,EAAAtG,EAAA7d,KAAAkT,IAAA+pC,EAAAt4E,OAAAu1C,EAAAv1C,QAAA,CAKA,KAJAs4E,EAAAp/B,GAAAo/B,EAAA,KACAA,IAAA7kD,QAAAmF,UACA2c,IAAA9hB,QAAAmF,aAEA4mB,GAAAtG,GACA8a,EAAAzsD,KAAAoxE,EAAAL,EAAA94B,EAAA,GAAA84B,EAAA94B,KACAthD,EAAAqJ,KAAA6jC,EAAAmK,EAAAiK,EAAA,GAAAjK,EAAAiK,IAEA,iBAAAhH,GACA,GAAAgH,GAAAxE,GAAAk+B,OAAAZ,EAAA9/B,EAAA,EAAAU,GAAA,CACA,OAAAh7C,GAAAshD,GAAAwU,EAAAxU,GAAAhH,KAMA,QAAA2gC,IAAAb,EAAA/iC,EAAAnK,EAAA/B,GAEA,QAAA+vC,KACA,GAAAC,GAAAh+C,KAAAkT,IAAA+pC,EAAAt4E,OAAAu1C,EAAAv1C,QAAA,EAAAi5E,GAAAP,GAAAC,EAAAtvC,EAAAwpC,GAAAD,EAGA,OAFAtP,GAAA+V,EAAAf,EAAA/iC,EAAAojC,EAAAvtC,GACA9N,EAAA+7C,EAAA9jC,EAAA+iC,EAAAK,EAAAlK,IACA5kB,EAEA,QAAAA,GAAArR,GACA,MAAA8qB,GAAA9qB,GARA,GAAA8qB,GAAAhmC,CAiDA,OAvCAusB,GAAA7V,OAAA,SAAAwO,GACA,MAAAllB,GAAAklB,IAEAqH,EAAAyuB,OAAA,SAAA9/B,GACA,MAAAphB,WAAAp3B,QACAs4E,EAAA9/B,EAAA32C,IAAAy3E,QACAF,KAFAd,GAIAzuB,EAAAtU,MAAA,SAAAiD,GACA,MAAAphB,WAAAp3B,QACAu1C,EAAAiD,EACA4gC,KAFA7jC,GAIAsU,EAAA0vB,WAAA,SAAA/gC,GACA,MAAAqR,GAAAtU,MAAAiD,GAAApN,YAAA+lC,KAEAtnB,EAAAxgB,MAAA,SAAAmP,GACA,MAAAphB,WAAAp3B,QACAqpC,EAAAmP,EACA4gC,KAFA/vC,GAIAwgB,EAAAze,YAAA,SAAAoN,GACA,MAAAphB,WAAAp3B,QACAorC,EAAAoN,EACA4gC,KAFAhuC,GAIAye,EAAA2vB,MAAA,SAAAn7E,GACA,MAAAo7E,IAAAnB,EAAAj6E,IAEAwrD,EAAA6vB,WAAA,SAAAr7E,EAAA8nD,GACA,MAAAwzB,IAAArB,EAAAj6E,EAAA8nD,IAEA0D,EAAAgvB,KAAA,SAAAx6E,GAEA,MADAu7E,IAAAtB,EAAAj6E,GACA+6E,KAEAvvB,EAAAj2B,KAAA,WACA,MAAAulD,IAAAb,EAAA/iC,EAAAnK,EAAA/B,IAEA+vC,IAEA,QAAAS,IAAAhwB,EAAAwvB,GACA,MAAAr+B,IAAAuN,OAAAsB,EAAAwvB,EAAA,4CAEA,QAAAO,IAAAtB,EAAAj6E,GAGA,MAFAu6E,IAAAN,EAAAS,GAAAe,GAAAxB,EAAAj6E,GAAA,KACAu6E,GAAAN,EAAAS,GAAAe,GAAAxB,EAAAj6E,GAAA,KACAi6E,EAEA,QAAAwB,IAAAxB,EAAAj6E,GACA,MAAAA,MAAA,GACA,IAAAisE,GAAA+N,GAAAC,GAAAyB,EAAAzP,EAAA,GAAAA,EAAA,GAAA/5C,EAAA8K,KAAA0qB,IAAA,GAAA1qB,KAAAyU,MAAAzU,KAAAouB,IAAAswB,EAAA17E,GAAAg9B,KAAAquB,OAAAswB,EAAA37E,EAAA07E,EAAAxpD,CAKA,OAJAypD,IAAA,IAAAzpD,GAAA,GAA+BypD,GAAA,IAAAzpD,GAAA,EAAgCypD,GAAA,MAAAzpD,GAAA,GAC/D+5C,EAAA,GAAAjvC,KAAAwU,KAAAy6B,EAAA,GAAA/5C,KACA+5C,EAAA,GAAAjvC,KAAAyU,MAAAw6B,EAAA,GAAA/5C,KAAA,GAAAA,EACA+5C,EAAA,GAAA/5C,EACA+5C,EAEA,QAAAmP,IAAAnB,EAAAj6E,GACA,MAAA28C,IAAAzF,MAAArzC,MAAA84C,GAAA8+B,GAAAxB,EAAAj6E,IAEA,QAAAs7E,IAAArB,EAAAj6E,EAAA8nD,GACA,GAAA5Q,GAAAukC,GAAAxB,EAAAj6E,EACA,IAAA8nD,EAAA,CACA,GAAA/hD,GAAAumD,GAAAn2B,KAAA2xB,EAEA,IADA/hD,EAAAo0D,QACA,MAAAp0D,EAAA,IACA,GAAA4pC,GAAAgN,GAAAyQ,aAAApwB,KAAA8S,IAAAyb,GAAArU,EAAA,IAAAqU,GAAArU,EAAA,KAIA,OAHAnxC,GAAA,KAAAA,EAAA,OAAA61E,GAAAjsC,EAAA6b,MAAAtU,EAAA,MACAnxC,EAAA,OACA+hD,EAAAnL,GAAAmL,OAAA/hD,EAAA4L,KAAA,KACA,SAAAzR,GACA,MAAA4nD,GAAAnY,EAAA6b,MAAAtrD,IAAAyvC,EAAArZ,QAGAvwB,EAAA,KAAAA,EAAA,OAAA81E,GAAA91E,EAAA,GAAAmxC,IACA4Q,EAAA/hD,EAAA4L,KAAA,QAEAm2C,GAAA,KAAA8zB,GAAA1kC,EAAA,OAEA,OAAAyF,IAAAmL,UASA,QAAA8zB,IAAA14E,GACA,OAAA85B,KAAAyU,MAAAzU,KAAAouB,IAAAloD,GAAA85B,KAAAquB,KAAA,KAEA,QAAAwwB,IAAAl4D,EAAAuzB,GACA,GAAAj2C,GAAA26E,GAAA1kC,EAAA,GACA,OAAAvzB,KAAAm4D,IAAA9+C,KAAAuuB,IAAAtqD,EAAA26E,GAAA5+C,KAAA8S,IAAAyb,GAAArU,EAAA,IAAAqU,GAAArU,EAAA,gBAAAvzB,GAAA1iB,EAAA,SAAA0iB,GAKA,QAAAo4D,IAAAf,EAAAgB,EAAAC,EAAAhC,GACA,QAAA7uB,GAAAjR,GACA,OAAA8hC,EAAAj/C,KAAAouB,IAAAjR,EAAA,IAAAA,IAAAnd,KAAAouB,IAAAjR,EAAA,KAAAA,IAAAnd,KAAAouB,IAAA4wB,GAEA,QAAAt0B,GAAAvN,GACA,MAAA8hC,GAAAj/C,KAAA0qB,IAAAs0B,EAAA7hC,IAAAnd,KAAA0qB,IAAAs0B,GAAA7hC,GAEA,QAAAqR,GAAArR,GACA,MAAA6gC,GAAA5vB,EAAAjR,IAoDA,MAlDAqR,GAAA7V,OAAA,SAAAwE,GACA,MAAAuN,GAAAszB,EAAArlC,OAAAwE,KAEAqR,EAAAyuB,OAAA,SAAA9/B,GACA,MAAAphB,WAAAp3B,QACAs6E,EAAA9hC,EAAA,MACA6gC,EAAAf,UAAA9/B,EAAA32C,IAAAy3E,SAAAz3E,IAAA4nD,IACAI,GAHAyuB,GAKAzuB,EAAAwwB,KAAA,SAAA16E,GACA,MAAAy3B,WAAAp3B,QACAq6E,GAAA16E,EACA05E,EAAAf,SAAAz2E,IAAA4nD,IACAI,GAHAwwB,GAKAxwB,EAAAgvB,KAAA,WACA,GAAA0B,GAAA3B,GAAAN,EAAAz2E,IAAA4nD,GAAA6wB,EAAAj/C,KAAAm/C,GAGA,OAFAnB,GAAAf,OAAAiC,GACAjC,EAAAiC,EAAA14E,IAAAkkD,GACA8D,GAEAA,EAAA2vB,MAAA,WACA,GAAAlP,GAAA+N,GAAAC,GAAAkB,KAAAxlB,EAAAsW,EAAA,GAAAxqE,EAAAwqE,EAAA,GAAApsE,EAAAm9B,KAAAyU,MAAA2Z,EAAAuK,IAAAxU,EAAAnkB,KAAAwU,KAAA4Z,EAAA3pD,IAAAd,EAAAq7E,EAAA,IAAAA,CACA,IAAA5zC,SAAA+Y,EAAAthD,GAAA,CACA,GAAAo8E,EAAA,CACA,KAAgBp8E,EAAAshD,EAAMthD,IAAA,OAAAg7C,GAAA,EAAqBA,EAAAl6C,EAAOk6C,IAAAsgC,EAAAjyE,KAAAw+C,EAAA7nD,GAAAg7C,EAClDsgC,GAAAjyE,KAAAw+C,EAAA7nD,QAGA,KADAs7E,EAAAjyE,KAAAw+C,EAAA7nD,IACgBA,IAAAshD,GAAQ,OAAAtG,GAAAl6C,EAAA,EAAsBk6C,EAAA,EAAOA,IAAAsgC,EAAAjyE,KAAAw+C,EAAA7nD,GAAAg7C,EAErD,KAAAh7C,EAAA,EAAmBs7E,EAAAt7E,GAAA81D,EAAc91D,KACjC,IAAAshD,EAAAg6B,EAAAx5E,OAA8Bw5E,EAAAh6B,EAAA,GAAA1/C,EAAkB0/C,KAChDg6B,IAAA/lD,MAAAv1B,EAAAshD,GAEA,MAAAg6B,IAEA3vB,EAAA6vB,WAAA,SAAA16E,EAAAmnD,GACA,IAAA/uB,UAAAp3B,OAAA,MAAAy6E,GACArjD,WAAAp3B,OAAA,EAAAmmD,EAAAs0B,GAA4D,kBAAAt0B,OAAAnL,GAAAmL,UAC5D,IAAAjN,GAAA7d,KAAA8S,IAAA,EAAAksC,EAAAr7E,EAAA6qD,EAAA2vB,QAAAx5E,OACA,iBAAAzB,GACA,GAAAL,GAAAK,EAAAwnD,EAAA1qB,KAAA4a,MAAAwT,EAAAlrD,IAEA,OADAL,GAAAm8E,IAAA,KAAAn8E,GAAAm8E,GACAn8E,GAAAg7C,EAAAiN,EAAA5nD,GAAA,KAGAsrD,EAAAj2B,KAAA,WACA,MAAAwmD,IAAAf,EAAAzlD,OAAAymD,EAAAC,EAAAhC,IAEAuB,GAAAhwB,EAAAwvB,GAaA,QAAAqB,IAAArB,EAAAnuB,EAAAotB,GAEA,QAAAzuB,GAAArR,GACA,MAAA6gC,GAAAsB,EAAAniC,IAFA,GAAAmiC,GAAAC,GAAA1vB,GAAA2vB,EAAAD,GAAA,EAAA1vB,EA+BA,OA3BArB,GAAA7V,OAAA,SAAAwE,GACA,MAAAqiC,GAAAxB,EAAArlC,OAAAwE,KAEAqR,EAAAyuB,OAAA,SAAA9/B,GACA,MAAAphB,WAAAp3B,QACAq5E,EAAAf,UAAA9/B,EAAA32C,IAAAy3E,SAAAz3E,IAAA84E,IACA9wB,GAFAyuB,GAIAzuB,EAAA2vB,MAAA,SAAAn7E,GACA,MAAAo7E,IAAAnB,EAAAj6E,IAEAwrD,EAAA6vB,WAAA,SAAAr7E,EAAA8nD,GACA,MAAAwzB,IAAArB,EAAAj6E,EAAA8nD,IAEA0D,EAAAgvB,KAAA,SAAAx6E,GACA,MAAAwrD,GAAAyuB,OAAAsB,GAAAtB,EAAAj6E,KAEAwrD,EAAAqB,SAAA,SAAA1S,GACA,MAAAphB,WAAAp3B,QACA26E,EAAAC,GAAA1vB,EAAA1S,GACAqiC,EAAAD,GAAA,EAAA1vB,GACAmuB,EAAAf,SAAAz2E,IAAA84E,IACA9wB,GAJAqB,GAMArB,EAAAj2B,KAAA,WACA,MAAA8mD,IAAArB,EAAAzlD,OAAAs3B,EAAAotB,IAEAuB,GAAAhwB,EAAAwvB,GAEA,QAAAuB,IAAAn7E,GACA,gBAAA+4C,GACA,MAAAA,GAAA,GAAAnd,KAAA0qB,KAAAvN,EAAA/4C,GAAA47B,KAAA0qB,IAAAvN,EAAA/4C,IAYA,QAAAq7E,IAAAxC,EAAAyC,GAEA,QAAAlxB,GAAArR,GACA,MAAAjD,KAAA5yC,EAAA5D,IAAAy5C,KAAA,UAAAuiC,EAAAlyB,EAAAlmD,EAAAZ,IAAAy2C,EAAA8/B,EAAA/wE,KAAAixC,IAAAF,MAAA,GAAA/C,EAAAv1C,QAEA,QAAAg7E,GAAAz5D,EAAAgP,GACA,MAAAyqB,IAAAzF,MAAA+iC,EAAAt4E,QAAA6B,IAAA,SAAA3D,GACA,MAAAqjB,GAAAgP,EAAAryB,IANA,GAAAyE,GAAA4yC,EAAA0lC,CAsFA,OA7EApxB,GAAAyuB,OAAA,SAAA9/B,GACA,IAAAphB,UAAAp3B,OAAA,MAAAs4E,EACAA,MACA31E,EAAA,GAAA02C,EAEA,KADA,GAAA6hC,GAAAh9E,GAAA,EAAAc,EAAAw5C,EAAAx4C,SACA9B,EAAAc,GAAA2D,EAAAuD,IAAAg1E,EAAA1iC,EAAAt6C,KAAAyE,EAAAZ,IAAAm5E,EAAA5C,EAAA/wE,KAAA2zE,GACA,OAAArxB,GAAAkxB,EAAAlyB,GAAA3mD,MAAA2nD,EAAAkxB,EAAA3iC,IAEAyR,EAAAtU,MAAA,SAAAiD,GACA,MAAAphB,WAAAp3B,QACAu1C,EAAAiD,EACAyiC,EAAA,EACAF,GACAlyB,EAAA,QACAzQ,EAAAhhB,WAEAyyB,GAPAtU,GASAsU,EAAAsxB,YAAA,SAAA3iC,EAAA0J,GACA9qB,UAAAp3B,OAAA,IAAAkiD,EAAA,EACA,IAAA3gC,GAAAi3B,EAAA,GAAA+/B,EAAA//B,EAAA,GAAAjoB,EAAA+nD,EAAAt4E,OAAA,GAAAuhB,KAAAg3D,GAAA,EACA,IAAAA,EAAAh3D,IAAA+2D,EAAAt4E,OAAA,EAAAkiD,EAOA,OANA3M,GAAAylC,EAAAz5D,EAAAgP,EAAA2xB,EAAA,EAAA3xB,GACA0qD,EAAA,EACAF,GACAlyB,EAAA,cACAzQ,EAAAhhB,WAEAyyB,GAEAA,EAAAuxB,iBAAA,SAAA5iC,EAAA0J,GACA9qB,UAAAp3B,OAAA,IAAAkiD,EAAA,EACA,IAAA3gC,GAAAi3B,EAAA,GAAA+/B,EAAA//B,EAAA,GAAAjoB,EAAA+nD,EAAAt4E,OAAA,GAAAuhB,EAAAg3D,EAAAl9C,KAAA4a,OAAA10B,EAAAg3D,GAAA,GACA,IAAAA,EAAAh3D,IAAA+2D,EAAAt4E,OAAA,EAAAkiD,GAAA,CAOA,OANA3M,GAAAylC,EAAAz5D,EAAA8Z,KAAA4a,MAAA1lB,EAAA2xB,EAAA,GAAAq2B,EAAAh3D,GAAA+2D,EAAAt4E,OAAA,EAAAkiD,GAAA3xB,GAAA,GAAAA,GACA0qD,EAAA,EACAF,GACAlyB,EAAA,mBACAzQ,EAAAhhB,WAEAyyB,GAEAA,EAAAwxB,WAAA,SAAA7iC,EAAA0J,EAAAo5B,GACAlkD,UAAAp3B,OAAA,IAAAkiD,EAAA,GACA9qB,UAAAp3B,OAAA,IAAAs7E,EAAAp5B,EACA,IAAAtpB,GAAA4f,EAAA,GAAAA,EAAA,GAAAj3B,EAAAi3B,EAAA5f,EAAA,GAAA2/C,EAAA//B,EAAA,EAAA5f,GAAArI,GAAAgoD,EAAAh3D,IAAA+2D,EAAAt4E,OAAAkiD,EAAA,EAAAo5B,EAQA,OAPA/lC,GAAAylC,EAAAz5D,EAAAgP,EAAA+qD,EAAA/qD,GACAqI,GAAA2c,EAAA3c,UACAqiD,EAAA1qD,GAAA,EAAA2xB,GACA64B,GACAlyB,EAAA,aACAzQ,EAAAhhB,WAEAyyB,GAEAA,EAAA0xB,gBAAA,SAAA/iC,EAAA0J,EAAAo5B,GACAlkD,UAAAp3B,OAAA,IAAAkiD,EAAA,GACA9qB,UAAAp3B,OAAA,IAAAs7E,EAAAp5B,EACA,IAAAtpB,GAAA4f,EAAA,GAAAA,EAAA,GAAAj3B,EAAAi3B,EAAA5f,EAAA,GAAA2/C,EAAA//B,EAAA,EAAA5f,GAAArI,EAAA8K,KAAAyU,OAAAyoC,EAAAh3D,IAAA+2D,EAAAt4E,OAAAkiD,EAAA,EAAAo5B,GAQA,OAPA/lC,GAAAylC,EAAAz5D,EAAA8Z,KAAA4a,OAAAsiC,EAAAh3D,GAAA+2D,EAAAt4E,OAAAkiD,GAAA3xB,GAAA,GAAAA,GACAqI,GAAA2c,EAAA3c,UACAqiD,EAAA5/C,KAAA4a,MAAA1lB,GAAA,EAAA2xB,IACA64B,GACAlyB,EAAA,kBACAzQ,EAAAhhB,WAEAyyB,GAEAA,EAAAoxB,UAAA,WACA,MAAAA,IAEApxB,EAAA4uB,YAAA,WACA,MAAAJ,IAAA0C,EAAA3iC,EAAA,KAEAyR,EAAAj2B,KAAA,WACA,MAAAknD,IAAAxC,EAAAyC,IAEAlxB,EAAAyuB,UAqBA,QAAAkD,IAAAlD,EAAA/iC,GAEA,QAAA6jC,KACA,GAAAlgC,GAAA,EAAAkjB,EAAA7mB,EAAAv1C,MAEA,KADAy7E,OACAviC,EAAAkjB,GAAAqf,EAAAviC,EAAA,GAAA8B,GAAA0gC,SAAApD,EAAAp/B,EAAAkjB,EACA,OAAAvS,GAEA,QAAAA,GAAArR,GACA,IAAA1R,MAAA0R,MAAA,MAAAjD,GAAAyF,GAAAk+B,OAAAuC,EAAAjjC,IARA,GAAAijC,EA8BA,OApBA5xB,GAAAyuB,OAAA,SAAA9/B,GACA,MAAAphB,WAAAp3B,QACAs4E,EAAA9/B,EAAA32C,IAAA02C,GAAAlW,OAAAoW,GAAAhzC,KAAA0yC,GACAihC,KAFAd,GAIAzuB,EAAAtU,MAAA,SAAAiD,GACA,MAAAphB,WAAAp3B,QACAu1C,EAAAiD,EACA4gC,KAFA7jC,GAIAsU,EAAA8xB,UAAA,WACA,MAAAF,IAEA5xB,EAAA+xB,aAAA,SAAAp5B,GAEA,MADAA,GAAAjN,EAAAxlB,QAAAyyB,GACAA,EAAA,GAAAlK,UAAAkK,EAAA,EAAAi5B,EAAAj5B,EAAA,GAAA81B,EAAA,GAAA91B,EAAAi5B,EAAAz7E,OAAAy7E,EAAAj5B,GAAA81B,IAAAt4E,OAAA,KAEA6pD,EAAAj2B,KAAA,WACA,MAAA4nD,IAAAlD,EAAA/iC,IAEA6jC,IAKA,QAAAyC,IAAAlmB,EAAA+G,EAAAnnB,GAEA,QAAAsU,GAAArR,GACA,MAAAjD,GAAAla,KAAA8S,IAAA,EAAA9S,KAAAkT,IAAArwC,EAAAm9B,KAAAyU,MAAAyhC,GAAA/4B,EAAAmd,OAEA,QAAAyjB,KAGA,MAFA7H,GAAAh8B,EAAAv1C,QAAA08D,EAAA/G,GACAz3D,EAAAq3C,EAAAv1C,OAAA,EACA6pD,EAPA,GAAA0nB,GAAArzE,CA4BA,OAnBA2rD,GAAAyuB,OAAA,SAAA9/B,GACA,MAAAphB,WAAAp3B,QACA21D,GAAAnd,EAAA,GACAkkB,GAAAlkB,IAAAx4C,OAAA,GACAo5E,MAHAzjB,EAAA+G,IAKA7S,EAAAtU,MAAA,SAAAiD,GACA,MAAAphB,WAAAp3B,QACAu1C,EAAAiD,EACA4gC,KAFA7jC,GAIAsU,EAAA+xB,aAAA,SAAAp5B,GAGA,MAFAA,GAAAjN,EAAAxlB,QAAAyyB,GACAA,IAAA,EAAAlK,IAAAkK,EAAA+uB,EAAA5b,GACAnT,IAAA,EAAA+uB,IAEA1nB,EAAAj2B,KAAA,WACA,MAAAioD,IAAAlmB,EAAA+G,EAAAnnB,IAEA6jC,IAKA,QAAA0C,IAAAxD,EAAA/iC,GACA,QAAAsU,GAAArR,GACA,GAAAA,KAAA,MAAAjD,GAAAyF,GAAAk+B,OAAAZ,EAAA9/B,IAmBA,MAjBAqR,GAAAyuB,OAAA,SAAA34E,GACA,MAAAy3B,WAAAp3B,QACAs4E,EAAA34E,EACAkqD,GAFAyuB,GAIAzuB,EAAAtU,MAAA,SAAA51C,GACA,MAAAy3B,WAAAp3B,QACAu1C,EAAA51C,EACAkqD,GAFAtU,GAIAsU,EAAA+xB,aAAA,SAAAp5B,GAEA,MADAA,GAAAjN,EAAAxlB,QAAAyyB,IACA81B,EAAA91B,EAAA,GAAA81B,EAAA91B,KAEAqH,EAAAj2B,KAAA,WACA,MAAAkoD,IAAAxD,EAAA/iC,IAEAsU,EAKA,QAAAkyB,IAAAzD,GACA,QAAA5qD,GAAA8qB,GACA,OAAAA,EAiBA,MAfA9qB,GAAAsmB,OAAAtmB,EACAA,EAAA4qD,OAAA5qD,EAAA6nB,MAAA,SAAAiD,GACA,MAAAphB,WAAAp3B,QACAs4E,EAAA9/B,EAAA32C,IAAA6rB,GACAA,GAFA4qD,GAIA5qD,EAAA8rD,MAAA,SAAAn7E,GACA,MAAAo7E,IAAAnB,EAAAj6E,IAEAqvB,EAAAgsD,WAAA,SAAAr7E,EAAA8nD,GACA,MAAAwzB,IAAArB,EAAAj6E,EAAA8nD,IAEAz4B,EAAAkG,KAAA,WACA,MAAAmoD,IAAAzD,IAEA5qD,EAGA,QAAAsuD,MACA,SA+HA,QAAAC,IAAA19E,GACA,MAAAA,GAAA29E,YAEA,QAAAC,IAAA59E,GACA,MAAAA,GAAA69E,YAEA,QAAAC,IAAA99E,GACA,MAAAA,GAAA+9E,WAEA,QAAAC,IAAAh+E,GACA,MAAAA,GAAAi+E,SAEA,QAAAC,IAAAl+E,GACA,MAAAA,MAAAm+E,SAEA,QAAAC,IAAAhnB,EAAAF,EAAAiH,EAAAC,GACA,OAAAhH,EAAA+G,GAAAjH,KAAAkH,GAAAhH,EAAA,MAEA,QAAAinB,IAAA1lB,EAAAC,EAAAma,EAAAuL,EAAAC,GACA,GAAAC,GAAA7lB,EAAA,GAAAC,EAAA,GAAA6lB,EAAA9lB,EAAA,GAAAC,EAAA,GAAAte,GAAAikC,EAAAD,MAAAxhD,KAAAwqB,KAAAk3B,IAAAC,KAAAC,EAAApkC,EAAAmkC,EAAAE,GAAArkC,EAAAkkC,EAAArgB,EAAAxF,EAAA,GAAA+lB,EAAAtgB,EAAAzF,EAAA,GAAAgmB,EAAAtb,EAAAzK,EAAA,GAAA8lB,EAAApb,EAAA1K,EAAA,GAAA+lB,EAAApW,GAAApK,EAAAkF,GAAA,EAAAqF,GAAAtK,EAAAkF,GAAA,EAAA7E,EAAA4E,EAAAlF,EAAAO,EAAA4E,EAAAlF,EAAA6E,EAAAxE,IAAAC,IAAAhY,EAAAqsB,EAAAuL,EAAAM,EAAAzgB,EAAAmF,EAAAD,EAAAjF,EAAAp+D,GAAA0+D,EAAA,QAAA5hC,KAAAwqB,KAAAxqB,KAAA8S,IAAA,EAAA8W,IAAAuc,EAAA2b,MAAAC,GAAAD,EAAAlgB,EAAAD,EAAAz+D,GAAAijE,EAAAmD,IAAAwY,EAAAngB,EAAAC,EAAA1+D,GAAAijE,EAAA6b,GAAAF,EAAAlgB,EAAAD,EAAAz+D,GAAAijE,EAAAqD,IAAAsY,EAAAngB,EAAAC,EAAA1+D,GAAAijE,EAAA8b,EAAAF,EAAAtW,EAAAyW,EAAA5Y,EAAAsC,EAAAuW,EAAAH,EAAAvW,EAAA2W,EAAA5Y,EAAAoC,CAEA,OADAqW,KAAAC,IAAAC,IAAAC,MAAAL,EAAAC,EAAA1Y,EAAAE,KACAuY,EAAAH,EAAAtY,EAAAuY,IAAAE,EAAA9L,EAAArsB,EAAA0f,EAAA2M,EAAArsB,IAEA,QAAAy4B,IAAApb,GAEA,QAAAxK,GAAA1wD,GAEA,QAAA6vD,KACAJ,EAAAtvD,KAAA,IAAA6jC,EAAAk3B,EAAAhL,GAAAqmB,IAEA,IAJA,GAAAp/E,GAAAs4D,KAAAS,KAAAp5D,GAAA,EAAAc,EAAAoI,EAAApH,OAAAosE,EAAA3lB,GAAAjO,GAAA6zB,EAAA5lB,GAAAjE,KAIAtkD,EAAAc,GACA4+E,EAAAx/E,KAAAP,KAAAU,EAAA6I,EAAAlJ,MACAo5D,EAAA/vD,OAAA6kE,EAAAhuE,KAAAP,KAAAU,EAAAL,IAAAmuE,EAAAjuE,KAAAP,KAAAU,EAAAL,KACSo5D,EAAAt3D,SACTi3D,IACAK,KAIA,OADAA,GAAAt3D,QAAAi3D,IACAJ,EAAA72D,OAAA62D,EAAA7mD,KAAA,SAfA,GAAAwoC,GAAA8tB,GAAA9jB,EAAA+jB,GAAAqX,EAAAjnB,GAAAvrB,EAAAyyC,GAAAC,EAAA1yC,EAAA3mC,IAAAk5E,EAAA,EA0CA,OAzBA7lB,GAAAtf,EAAA,SAAA74C,GACA,MAAAy3B,WAAAp3B,QACAw4C,EAAA74C,EACAm4D,GAFAtf,GAIAsf,EAAAtV,EAAA,SAAA7iD,GACA,MAAAy3B,WAAAp3B,QACAwiD,EAAA7iD,EACAm4D,GAFAtV,GAIAsV,EAAA8lB,QAAA,SAAAj+E,GACA,MAAAy3B,WAAAp3B,QACA49E,EAAAj+E,EACAm4D,GAFA8lB,GAIA9lB,EAAA1sB,YAAA,SAAAzrC,GACA,MAAAy3B,WAAAp3B,QACA89E,EAAA,kBAAAn+E,GAAAyrC,EAAAzrC,GAAoEyrC,EAAA2yC,GAAAh/E,IAAAY,IAAAk+E,IAAAp5E,IACpEqzD,GAFAgmB,GAIAhmB,EAAA6lB,QAAA,SAAAh+E,GACA,MAAAy3B,WAAAp3B,QACA29E,EAAAh+E,EACAm4D,GAFA6lB,GAIA7lB,EAwBA,QAAA+lB,IAAAvmB,GACA,MAAAA,GAAAt3D,OAAA,EAAAs3D,EAAAtnD,KAAA,KAAAsnD,EAAA,IAEA,QAAA0mB,IAAA1mB,GACA,MAAAA,GAAAtnD,KAAA,SAEA,QAAAiuE,IAAA3mB,GAEA,IADA,GAAAp5D,GAAA,EAAAc,EAAAs4D,EAAAt3D,OAAAV,EAAAg4D,EAAA,GAAAztC,GAAAvqB,EAAA,OAAAA,EAAA,MACApB,EAAAc,GAAA6qB,EAAAtiB,KAAA,KAAAjI,EAAA,IAAAA,EAAAg4D,EAAAp5D,IAAA,UAAAoB,EAAA,GAEA,OADAN,GAAA,GAAA6qB,EAAAtiB,KAAA,IAAAjI,EAAA,IACAuqB,EAAA7Z,KAAA,IAEA,QAAAkuE,IAAA5mB,GAEA,IADA,GAAAp5D,GAAA,EAAAc,EAAAs4D,EAAAt3D,OAAAV,EAAAg4D,EAAA,GAAAztC,GAAAvqB,EAAA,OAAAA,EAAA,MACApB,EAAAc,GAAA6qB,EAAAtiB,KAAA,KAAAjI,EAAAg4D,EAAAp5D,IAAA,OAAAoB,EAAA,GACA,OAAAuqB,GAAA7Z,KAAA,IAEA,QAAAmuE,IAAA7mB,GAEA,IADA,GAAAp5D,GAAA,EAAAc,EAAAs4D,EAAAt3D,OAAAV,EAAAg4D,EAAA,GAAAztC,GAAAvqB,EAAA,OAAAA,EAAA,MACApB,EAAAc,GAAA6qB,EAAAtiB,KAAA,KAAAjI,EAAAg4D,EAAAp5D,IAAA,OAAAoB,EAAA,GACA,OAAAuqB,GAAA7Z,KAAA,IAEA,QAAAouE,IAAA9mB,EAAAqmB,GACA,MAAArmB,GAAAt3D,OAAA,EAAA69E,GAAAvmB,KAAA,GAAA+mB,GAAA/mB,EAAA7jC,MAAA,MAAA6qD,GAAAhnB,EAAAqmB,IAEA,QAAAY,IAAAjnB,EAAAqmB,GACA,MAAArmB,GAAAt3D,OAAA,EAAAg+E,GAAA1mB,KAAA,GAAA+mB,IAAA/mB,EAAA/vD,KAAA+vD,EAAA,IACAA,GAAAgnB,IAAAhnB,IAAAt3D,OAAA,IAAA6+B,OAAAy4B,KAAA,KAAAqmB,IAEA,QAAAa,IAAAlnB,EAAAqmB,GACA,MAAArmB,GAAAt3D,OAAA,EAAA69E,GAAAvmB,KAAA,GAAA+mB,GAAA/mB,EAAAgnB,GAAAhnB,EAAAqmB,IAEA,QAAAU,IAAA/mB,EAAAmnB,GACA,GAAAA,EAAAz+E,OAAA,GAAAs3D,EAAAt3D,QAAAy+E,EAAAz+E,QAAAs3D,EAAAt3D,QAAAy+E,EAAAz+E,OAAA,EACA,MAAA69E,IAAAvmB,EAEA,IAAA2c,GAAA3c,EAAAt3D,QAAAy+E,EAAAz+E,OAAA6pB,EAAA,GAAAqtC,EAAAI,EAAA,GAAAh4D,EAAAg4D,EAAA,GAAAhO,EAAAm1B,EAAA,GAAA51B,EAAAS,EAAAo1B,EAAA,CAMA,IALAzK,IACApqD,GAAA,KAAAvqB,EAAA,KAAAgqD,EAAA,WAAAhqD,EAAA,KAAAgqD,EAAA,UAAAhqD,EAAA,OAAAA,EAAA,GACA43D,EAAAI,EAAA,GACAonB,EAAA,GAEAD,EAAAz+E,OAAA,GACA6oD,EAAA41B,EAAA,GACAn/E,EAAAg4D,EAAAonB,GACAA,IACA70D,GAAA,KAAAqtC,EAAA,GAAA5N,EAAA,SAAA4N,EAAA,GAAA5N,EAAA,SAAAhqD,EAAA,GAAAupD,EAAA,SAAAvpD,EAAA,GAAAupD,EAAA,QAAAvpD,EAAA,OAAAA,EAAA,EACA,QAAApB,GAAA,EAAqBA,EAAAugF,EAAAz+E,OAAqB9B,IAAAwgF,IAC1Cp/E,EAAAg4D,EAAAonB,GACA71B,EAAA41B,EAAAvgF,GACA2rB,GAAA,KAAAvqB,EAAA,GAAAupD,EAAA,SAAAvpD,EAAA,GAAAupD,EAAA,QAAAvpD,EAAA,OAAAA,EAAA,GAGA,GAAA20E,EAAA,CACA,GAAA0K,GAAArnB,EAAAonB,EACA70D,IAAA,KAAAvqB,EAAA,KAAAupD,EAAA,WAAAvpD,EAAA,KAAAupD,EAAA,UAAA81B,EAAA,OAAAA,EAAA,GAEA,MAAA90D,GAEA,QAAAy0D,IAAAhnB,EAAAqmB,GAEA,IADA,GAAAzmB,GAAAunB,KAAArmC,GAAA,EAAAulC,GAAA,EAAAxmB,EAAAG,EAAA,GAAAsnB,EAAAtnB,EAAA,GAAAp5D,EAAA,EAAAc,EAAAs4D,EAAAt3D,SACA9B,EAAAc,GACAk4D,EAAAC,EACAA,EAAAynB,EACAA,EAAAtnB,EAAAp5D,GACAugF,EAAAl3E,MAAA6wC,GAAAwmC,EAAA,GAAA1nB,EAAA,IAAA9e,GAAAwmC,EAAA,GAAA1nB,EAAA,KAEA,OAAAunB,GAEA,QAAAI,IAAAvnB,GACA,GAAAA,EAAAt3D,OAAA,QAAA69E,IAAAvmB,EACA,IAAAp5D,GAAA,EAAAc,EAAAs4D,EAAAt3D,OAAA0+E,EAAApnB,EAAA,GAAA3B,EAAA+oB,EAAA,GAAAjpB,EAAAipB,EAAA,GAAA7K,GAAAle,OAAA+oB,EAAApnB,EAAA,QAAAwc,GAAAre,MAAAipB,EAAA,IAAA70D,GAAA8rC,EAAA,IAAAF,EAAA,IAAAqpB,GAAAC,GAAAlL,GAAA,IAAAiL,GAAAC,GAAAjL,GAEA,KADAxc,EAAA/vD,KAAA+vD,EAAAt4D,EAAA,MACAd,GAAAc,GACA0/E,EAAApnB,EAAAp5D,GACA21E,EAAArb,QACAqb,EAAAtsE,KAAAm3E,EAAA,IACA5K,EAAAtb,QACAsb,EAAAvsE,KAAAm3E,EAAA,IACAM,GAAAn1D,EAAAgqD,EAAAC,EAIA,OAFAxc,GAAAr0C,MACA4G,EAAAtiB,KAAA,IAAAm3E,GACA70D,EAAA7Z,KAAA,IAEA,QAAAivE,IAAA3nB,GACA,GAAAA,EAAAt3D,OAAA,QAAA69E,IAAAvmB,EAEA,KADA,GAAAonB,GAAA70D,KAAA3rB,GAAA,EAAAc,EAAAs4D,EAAAt3D,OAAA6zE,GAAA,GAAAC,GAAA,KACA51E,EAAA,GACAwgF,EAAApnB,EAAAp5D,GACA21E,EAAAtsE,KAAAm3E,EAAA,IACA5K,EAAAvsE,KAAAm3E,EAAA,GAIA,KAFA70D,EAAAtiB,KAAAu3E,GAAAC,GAAAlL,GAAA,IAAAiL,GAAAC,GAAAjL,MACA51E,IACAA,EAAAc,GACA0/E,EAAApnB,EAAAp5D,GACA21E,EAAArb,QACAqb,EAAAtsE,KAAAm3E,EAAA,IACA5K,EAAAtb,QACAsb,EAAAvsE,KAAAm3E,EAAA,IACAM,GAAAn1D,EAAAgqD,EAAAC,EAEA,OAAAjqD,GAAA7Z,KAAA,IAEA,QAAAkvE,IAAA5nB,GAEA,IADA,GAAAztC,GAAA60D,EAAAxgF,GAAA,EAAAc,EAAAs4D,EAAAt3D,OAAA3B,EAAAW,EAAA,EAAA60E,KAAAC,OACA51E,EAAA,GACAwgF,EAAApnB,EAAAp5D,EAAAc,GACA60E,EAAAtsE,KAAAm3E,EAAA,IACA5K,EAAAvsE,KAAAm3E,EAAA,GAIA,KAFA70D,GAAAi1D,GAAAC,GAAAlL,GAAA,IAAAiL,GAAAC,GAAAjL,MACA51E,IACAA,EAAAG,GACAqgF,EAAApnB,EAAAp5D,EAAAc,GACA60E,EAAArb,QACAqb,EAAAtsE,KAAAm3E,EAAA,IACA5K,EAAAtb,QACAsb,EAAAvsE,KAAAm3E,EAAA,IACAM,GAAAn1D,EAAAgqD,EAAAC,EAEA,OAAAjqD,GAAA7Z,KAAA,IAEA,QAAAmvE,IAAA7nB,EAAAqmB,GACA,GAAA3+E,GAAAs4D,EAAAt3D,OAAA,CACA,IAAAhB,EAEA,IADA,GAAAM,GAAAupD,EAAA8M,EAAA2B,EAAA,MAAA7B,EAAA6B,EAAA,MAAA0F,EAAA1F,EAAAt4D,GAAA,GAAA22D,EAAAsH,EAAA3F,EAAAt4D,GAAA,GAAAy2D,EAAAv3D,GAAA,IACAA,GAAAc,GACAM,EAAAg4D,EAAAp5D,GACA2qD,EAAA3qD,EAAAc,EACAM,EAAA,GAAAq+E,EAAAr+E,EAAA,MAAAq+E,IAAAhoB,EAAA9M,EAAAmU,GACA19D,EAAA,GAAAq+E,EAAAr+E,EAAA,MAAAq+E,IAAAloB,EAAA5M,EAAAoU,EAGA,OAAA4hB,IAAAvnB,GAEA,QAAAwnB,IAAA1mC,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAGA,QAAA2mC,IAAAn1D,EAAA2uB,EAAAgK,GACA34B,EAAAtiB,KAAA,IAAAu3E,GAAAM,GAAA5mC,GAAA,IAAAsmC,GAAAM,GAAA58B,GAAA,IAAAs8B,GAAAO,GAAA7mC,GAAA,IAAAsmC,GAAAO,GAAA78B,GAAA,IAAAs8B,GAAAC,GAAAvmC,GAAA,IAAAsmC,GAAAC,GAAAv8B,IAEA,QAAA88B,IAAApoB,EAAAC,GACA,OAAAA,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,IAEA,QAAAqoB,IAAAjoB,GAEA,IADA,GAAAp5D,GAAA,EAAAshD,EAAA8X,EAAAt3D,OAAA,EAAA3B,KAAA64D,EAAAI,EAAA,GAAAH,EAAAG,EAAA,GAAA/4D,EAAAF,EAAA,GAAAihF,GAAApoB,EAAAC,KACAj5D,EAAAshD,GACAnhD,EAAAH,IAAAK,KAAA+gF,GAAApoB,EAAAC,IAAAG,EAAAp5D,EAAA,OAGA,OADAG,GAAAH,GAAAK,EACAF,EAEA,QAAAmhF,IAAAloB,GAEA,IADA,GAAA/4D,GAAA65C,EAAAC,EAAA94C,EAAAk/E,KAAApgF,EAAAkhF,GAAAjoB,GAAAp5D,GAAA,EAAAshD,EAAA8X,EAAAt3D,OAAA,IACA9B,EAAAshD,GACAjhD,EAAA+gF,GAAAhoB,EAAAp5D,GAAAo5D,EAAAp5D,EAAA,IACA0rD,GAAArrD,GAAA02D,GACA52D,EAAAH,GAAAG,EAAAH,EAAA,MAEAk6C,EAAA/5C,EAAAH,GAAAK,EACA85C,EAAAh6C,EAAAH,EAAA,GAAAK,GACAgB,EAAA64C,IAAAC,KACA,IACA94C,EAAA,EAAAhB,EAAA88B,KAAAwqB,KAAAtmD,GACAlB,EAAAH,GAAAqB,EAAA64C,EACA/5C,EAAAH,EAAA,GAAAqB,EAAA84C,GAKA,KADAn6C,GAAA,IACAA,GAAAshD,GACAjgD,GAAA+3D,EAAAj8B,KAAAkT,IAAAiR,EAAAthD,EAAA,OAAAo5D,EAAAj8B,KAAA8S,IAAA,EAAAjwC,EAAA,cAAAG,EAAAH,GAAAG,EAAAH,KACAugF,EAAAl3E,MAAAhI,GAAA,EAAAlB,EAAAH,GAAAqB,GAAA,GAEA,OAAAk/E,GAEA,QAAAgB,IAAAnoB,GACA,MAAAA,GAAAt3D,OAAA,EAAA69E,GAAAvmB,KAAA,GAAA+mB,GAAA/mB,EAAAkoB,GAAAloB,IAQA,QAAAooB,IAAApoB,GAEA,IADA,GAAA3V,GAAAsD,EAAA7M,EAAAl6C,GAAA,EAAAc,EAAAs4D,EAAAt3D,SACA9B,EAAAc,GACA2iD,EAAA2V,EAAAp5D,GACA+mD,EAAAtD,EAAA,GACAvJ,EAAAuJ,EAAA,GAAA+B,GACA/B,EAAA,GAAAsD,EAAA5pB,KAAA8pB,IAAA/M,GACAuJ,EAAA,GAAAsD,EAAA5pB,KAAA4oB,IAAA7L,EAEA,OAAAkf,GAEA,QAAAqoB,IAAArd,GAEA,QAAAsd,GAAAx4E,GAMA,QAAA6vD,KACAJ,EAAAtvD,KAAA,IAAA6jC,EAAAk3B,EAAAud,GAAAlC,GAAA7wB,EAAAgzB,EAAAxd,EAAAyd,EAAAnnD,WAAA+kD,GAAA,KAEA,IARA,GAAAp/E,GAIOi6C,EAAAgK,EAJPqU,KAAAkpB,KAAAF,KAAA3hF,GAAA,EAAAc,EAAAoI,EAAApH,OAAAggF,EAAAv5B,GAAAkP,GAAAsqB,EAAAx5B,GAAAgP,GAAAyqB,EAAAvqB,IAAA+G,EAAA,WACA,MAAAlkB,IACOiO,GAAAiW,GAAAyjB,EAAA1qB,IAAAkH,EAAA,WACP,MAAAna,IACOiE,GAAAkW,KAIPz+D,EAAAc,GACA4+E,EAAAx/E,KAAAP,KAAAU,EAAA6I,EAAAlJ,OACA6hF,EAAAx4E,MAAAixC,GAAAwnC,EAAA5hF,KAAAP,KAAAU,EAAAL,GAAAskD,GAAAy9B,EAAA7hF,KAAAP,KAAAU,EAAAL,KACA2hF,EAAAt4E,OAAA24E,EAAA9hF,KAAAP,KAAAU,EAAAL,IAAAiiF,EAAA/hF,KAAAP,KAAAU,EAAAL,MACS6hF,EAAA//E,SACTi3D,IACA8oB,KACAF,KAIA,OADAE,GAAA//E,QAAAi3D,IACAJ,EAAA72D,OAAA62D,EAAA7mD,KAAA,SArBA,GAAA2lD,GAAA2Q,GAAA5J,EAAA4J,GAAA7Q,EAAA,EAAAkH,EAAA4J,GAAAqX,EAAAjnB,GAAAvrB,EAAAyyC,GAAAC,EAAA1yC,EAAA3mC,IAAAq7E,EAAA10C,EAAA0hB,EAAA,IAAA6wB,EAAA,EAsEA,OA/CAiC,GAAApnC,EAAA,SAAA74C,GACA,MAAAy3B,WAAAp3B,QACA21D,EAAA+G,EAAA/8D,EACAigF,GAFAljB,GAIAkjB,EAAAjqB,GAAA,SAAAh2D,GACA,MAAAy3B,WAAAp3B,QACA21D,EAAAh2D,EACAigF,GAFAjqB,GAIAiqB,EAAAljB,GAAA,SAAA/8D,GACA,MAAAy3B,WAAAp3B,QACA08D,EAAA/8D,EACAigF,GAFAljB,GAIAkjB,EAAAp9B,EAAA,SAAA7iD,GACA,MAAAy3B,WAAAp3B,QACAy1D,EAAAkH,EAAAh9D,EACAigF,GAFAjjB,GAIAijB,EAAAnqB,GAAA,SAAA91D,GACA,MAAAy3B,WAAAp3B,QACAy1D,EAAA91D,EACAigF,GAFAnqB,GAIAmqB,EAAAjjB,GAAA,SAAAh9D,GACA,MAAAy3B,WAAAp3B,QACA28D,EAAAh9D,EACAigF,GAFAjjB,GAIAijB,EAAAhC,QAAA,SAAAj+E,GACA,MAAAy3B,WAAAp3B,QACA49E,EAAAj+E,EACAigF,GAFAhC,GAIAgC,EAAAx0C,YAAA,SAAAzrC,GACA,MAAAy3B,WAAAp3B,QACA89E,EAAA,kBAAAn+E,GAAAyrC,EAAAzrC,GAAoEyrC,EAAA2yC,GAAAh/E,IAAAY,IAAAk+E,IAAAp5E,IACpEq7E,EAAA10C,EAAAxS,SAAAwS,EACA0hB,EAAA1hB,EAAA0nB,OAAA,QACA8sB,GAJA9B,GAMA8B,EAAAjC,QAAA,SAAAh+E,GACA,MAAAy3B,WAAAp3B,QACA29E,EAAAh+E,EACAigF,GAFAjC,GAIAiC,EAqEA,QAAAQ,IAAA7hF,GACA,MAAAA,GAAAo8D,OAgCA,QAAA0lB,IAAA9hF,GACA,OAAAA,EAAAi6C,EAAAj6C,EAAAikD,GASA,QAAA89B,IAAAhe,GACA,kBACA,GAAA/jE,GAAA+jE,EAAApgE,MAAArE,KAAAu5B,WAAA6tB,EAAA1mD,EAAA,GAAA65C,EAAA75C,EAAA,GAAAmlD,EACA,QAAAuB,EAAA5pB,KAAA8pB,IAAA/M,GAAA6M,EAAA5pB,KAAA4oB,IAAA7L,KAoBA,QAAAmoC,MACA,UAEA,QAAAC,MACA,eAEA,QAAAC,IAAAh5E,GACA,GAAAw9C,GAAA5pB,KAAAwqB,KAAAp+C,EAAA87C,GACA,aAAA0B,EAAA,IAAAA,EAAA,IAAAA,EAAA,aAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,YAAAA,EAAA,IA+CA,QAAAy7B,IAAA1jC,GACA,kBACA,GAAA2jC,GAAAC,EAAAC,GACAF,EAAA9iF,KAAAm/C,MAAA6jC,EAAAF,EAAAC,EAAAD,EAAAE,WACAA,EAAAj4B,MAAAtqD,EAAA,KACAuiF,EAAAj4B,MAAAC,EAAAvQ,MACAqoC,EAAAviD,YAAAuiD,GAAAC,SAAgD/iF,MAAAm/C,GAChD2jC,EAAAE,QAAA,GACAA,EAAApmC,OAAAomC,EAAApmC,MAAAqmC,UAAA1iF,KAAAP,UAAA0kB,SAAAs+D,EAAAl+E,SAIA,QAAAo+E,IAAAplC,EAAAqB,EAAA/O,GAIA,MAHA2N,IAAAD,EAAAqlC,IACArlC,EAAA+C,UAAA1B,EACArB,EAAA1N,KACA0N,EAoEA,QAAAslC,IAAAtlC,EAAAn9C,EAAA+C,EAAA2/E,GACA,GAAAjzC,GAAA0N,EAAA1N,GAAA+O,EAAArB,EAAA+C,SACA,OAAAa,GAAA5D,EAAA,kBAAAp6C,GAAA,SAAAs2C,EAAA35C,EAAAshD,GACA3H,EAAAmF,GAAA/O,GAAAizC,MAAAn/E,IAAAvD,EAAA0iF,EAAA3/E,EAAAnD,KAAAy5C,IAAAt1B,SAAArkB,EAAAshD,OACKj+C,EAAA2/E,EAAA3/E,GAAA,SAAAs2C,GACLA,EAAAmF,GAAA/O,GAAAizC,MAAAn/E,IAAAvD,EAAA+C,MAqFA,QAAA4/E,IAAA9oC,GAEA,MADA,OAAAA,MAAA,IACA,WACAx6C,KAAAujF,YAAA/oC,GA6EA,QAAAgpC,IAAA7iF,GACA,aAAAA,EAAA,iCAAAA,EAAA,KAEA,QAAA8iF,IAAAzpC,EAAA35C,EAAA8+C,EAAA/O,EAAAszC,GAKA,QAAAC,GAAAC,GACA,GAAAxuC,GAAA5xC,EAAA4xC,KAEA,IADA2V,EAAAC,EAAA5V,EAAArP,EACAqP,GAAAwuC,EAAA,MAAAlgE,GAAAkgE,EAAAxuC,EACA2V,GAAAtqD,EAAAijB,EAEA,QAAAA,GAAAkgE,GACA,GAAAb,GAAAD,EAAAE,SAAAF,EAAAC,EACAC,KACAA,EAAAj4B,MAAAtqD,EAAA,KACAuiF,EAAAj4B,MAAAC,EAAAvQ,MACAqoC,EAAAviD,YACAuiD,GAAAC,GACAC,EAAApmC,OAAAomC,EAAApmC,MAAAqmC,UAAA1iF,KAAAy5C,IAAAt1B,SAAAs+D,EAAAl+E,OAEA,QAAA++E,KAAAf,GACA,IAAAe,EAAAzzC,EAAA,CACA,GAAApJ,GAAA87C,EAAAe,EACA78C,GAAA+jB,MAAAtqD,EAAA,KACAumC,EAAA+jB,MAAAC,EAAAvQ,MACAqoC,EAAAviD,YACAuiD,GAAAe,GAGA94B,EAAAtqD,EAAAqjF,EACAj5B,GAAA,WAKA,MAJAE,GAAAtqD,GAAAqjF,EAAAF,GAAA,KACA74B,EAAAtqD,EAAA,KACAsqD,EAAAC,EAAAvQ,KAEA,GACO,EAAA1U,GACP+8C,EAAAE,OAAA5yC,EACA5sC,EAAAo5C,OAAAp5C,EAAAo5C,MAAAl5B,MAAAnjB,KAAAy5C,IAAAt1B,SAAArkB,GACA0jF,KACAvgF,EAAA6/E,MAAAx5E,QAAA,SAAAjD,EAAAlD,IACAA,IAAAnD,KAAAy5C,IAAAt1B,SAAArkB,KACA0jF,EAAAr6E,KAAAhG,KAGAsgF,EAAAxgF,EAAAwgF,KACAC,EAAAzgF,EAAAygF,SAEA,QAAAH,GAAAF,GAEA,IADA,GAAA54B,GAAA44B,EAAAK,EAAAriF,EAAAoiF,EAAAh5B,GAAA7pD,EAAA4iF,EAAA5hF,OACAhB,EAAA,GACA4iF,IAAA5iF,GAAAZ,KAAAy5C,EAAAp4C,EAEA,IAAAopD,GAAA,EAGA,MAFAxnD,GAAAo5C,OAAAp5C,EAAAo5C,MAAAj5B,IAAApjB,KAAAy5C,IAAAt1B,SAAArkB,KACAyiF,EAAAviD,YAAAuiD,GAAA1yC,SAA0C4J,GAAAmF,GAC1C,EAvDA,GAGKpZ,GAAAglB,EAAAk5B,EAAAD,EAAAD,EAHLjB,EAAA9oC,EAAAmF,KAAAnF,EAAAmF,IACA6jC,OAAA,EACAziD,MAAA,IACK/8B,EAAAs/E,EAAA1yC,EAuDL5sC,KACAuiC,EAAA29C,EAAA39C,KACAglB,EAAAF,GAAA84B,EAAA,EAAA59C,GACAviC,EAAAs/E,EAAA1yC,IACAizC,MAAA,GAAA7nC,GACAzV,OACAglB,QACA3V,MAAAsuC,EAAAtuC,MACA6uC,SAAAP,EAAAO,SACAD,KAAAN,EAAAM,KACAl/E,MAAAzE,GAEAqjF,EAAA,OACAZ,EAAAviD,OAoGA,QAAA2jD,IAAA/gF,EAAA20D,EAAA+G,GACA17D,EAAAL,KAAA,qBAAApC,GACA,GAAAw8D,GAAApF,EAAAp3D,EACA,qBAAAkoC,SAAAs0B,KAAA2B,EAAAn+D,IAAA,QAGA,QAAAyjF,IAAAhhF,EAAAy0D,EAAAkH,GACA37D,EAAAL,KAAA,qBAAApC,GACA,GAAAw8D,GAAAtF,EAAAl3D,EACA,uBAAAkoC,SAAAs0B,KAAA4B,EAAAp+D,IAAA,MAySA,QAAA0jF,IAAAp2B,GACA,MAAAA,GAAAq2B,cA8CA,QAAAC,IAAA9I,EAAA+I,EAAAj8B,GACA,QAAA0D,GAAArR,GACA,MAAA6gC,GAAA7gC,GAUA,QAAA6pC,GAAA/X,EAAAlsC,GACA,GAAA27C,GAAAzP,EAAA,GAAAA,EAAA,GAAAxgC,EAAAiwC,EAAA37C,EAAAlgC,EAAA88C,GAAAk+B,OAAAoJ,GAAAx4C,EACA,OAAA5rC,IAAAokF,GAAAtiF,QAAAoiF,EAAAG,KAAAzI,GAAAxP,EAAAzoE,IAAA,SAAAtD,GACA,MAAAA,GAAA,UACO6/B,GAAA,IAAAlgC,EAAAkkF,EAAAt4C,EAAAw4C,GAAApkF,EAAA,GAAAokF,GAAApkF,GAAA4rC,EAAA5rC,EAAA,EAAAA,IAAAskF,GAAA1I,GAAAxP,EAAAlsC,GAAA,IAgCP,MA5CAyrB,GAAA7V,OAAA,SAAAwE,GACA,MAAAiqC,IAAApJ,EAAArlC,OAAAwE,KAEAqR,EAAAyuB,OAAA,SAAA9/B,GACA,MAAAphB,WAAAp3B,QACAq5E,EAAAf,OAAA9/B,GACAqR,GAFAwvB,EAAAf,SAAAz2E,IAAA4gF,KAUA54B,EAAAgvB,KAAA,SAAA6J,EAAAn8D,GAGA,QAAAo8D,GAAA92B,GACA,OAAA/kB,MAAA+kB,KAAA62B,EAAAntC,MAAAsW,EAAA42B,IAAA52B,EAAA,GAAAtlC,GAAAvmB,OAHA,GAAAs4E,GAAAzuB,EAAAyuB,SAAAhO,EAAA+N,GAAAC,GAAApjC,EAAA,MAAAwtC,EAAAL,EAAA/X,EAAA,oBAAAoY,IAAAL,EAAA/X,EAAAoY,EAKA,OAJAxtC,KAAAwtC,EAAAxtC,EAAA,GAAA3uB,EAAA2uB,EAAA,IAIA2U,EAAAyuB,OAAAM,GAAAN,EAAA/xD,EAAA,GACAupB,MAAA,SAAA+b,GACA,KAAA82B,EAAA92B,EAAA62B,EAAA5yC,MAAA+b,OAAA42B,GAAA52B,EAAA,EACA,OAAAA,IAEAhc,KAAA,SAAAgc,GACA,KAAA82B,EAAA92B,EAAA62B,EAAA7yC,KAAAgc,OAAA42B,IAAA52B,EAAA,EACA,OAAAA,KAEO62B,KAEP74B,EAAA2vB,MAAA,SAAAkJ,EAAAn8D,GACA,GAAA+jD,GAAA+N,GAAAxuB,EAAAyuB,UAAApjC,EAAA,MAAAwtC,EAAAL,EAAA/X,EAAA,oBAAAoY,GAAAL,EAAA/X,EAAAoY,MAAAntC,SACAA,MAAAmtC,GACOn8D,EAEP,OADA2uB,KAAAwtC,EAAAxtC,EAAA,GAAA3uB,EAAA2uB,EAAA,IACAwtC,EAAAntC,MAAA+0B,EAAA,GAAAmY,IAAAnY,EAAA,MAAA/jD,EAAA,IAAAA,IAEAsjC,EAAA6vB,WAAA,WACA,MAAAvzB,IAEA0D,EAAAj2B,KAAA,WACA,MAAAuuD,IAAA9I,EAAAzlD,OAAAwuD,EAAAj8B,IAEA0zB,GAAAhwB,EAAAwvB,GAEA,QAAAoJ,IAAA55B,GACA,UAAAha,MAAAga,GA0DA,QAAA+5B,IAAA37B,GACA,MAAA47B,MAAAn2B,MAAAzF,EAAAwB,cAKA,QAAAq6B,IAAA77B,GACA,GAAA1R,GAAAwtC,GAAAvoD,aAEA,OADA+a,GAAAytC,WAAAD,GAAAE,MACA1tC,EAAA2tC,yBAAAj8B,EAAAwB,cA10SA,GAAAzN,KACAmoC,QAAA,UAEAC,MAAA3vD,MAAA4sB,GAAA,SAAAgjC,GACA,MAAAD,IAAAhlF,KAAAilF,IAEAN,GAAAllF,KAAAk6C,QAOA,IAAAgrC,GACA,IACA1iC,GAAA0iC,GAAA/qC,gBAAAsrC,YAAA,GAAAnlE,SACK,MAAA1e,GACL4gD,GAAA,SAAAgjC,GAEA,IADA,GAAAnlF,GAAAmlF,EAAArjF,OAAAuC,EAAA,GAAAiB,OAAAtF,GACAA,KAAAqE,EAAArE,GAAAmlF,EAAAnlF,EACA,OAAAqE,IAOA,GAHAssC,KAAAlK,MAAAkK,KAAAlK,IAAA,WACA,UAAAkK,QAEAk0C,GACA,IACAA,GAAAlkC,cAAA,OAAAb,MAAAG,YAAA,gBACK,MAAAiJ,GACL,GAAAm8B,IAAA1lF,KAAA2lF,QAAApkF,UAAAqkF,GAAAF,GAAA5mC,aAAA+mC,GAAAH,GAAA1mC,eAAA8mC,GAAA9lF,KAAA+lF,oBAAAxkF,UAAAykF,GAAAF,GAAAxlC,WACAolC,IAAA5mC,aAAA,SAAAn+C,EAAA+C,GACAkiF,GAAArlF,KAAAP,KAAAW,EAAA+C,EAAA,KAEAgiF,GAAA1mC,eAAA,SAAAL,EAAAC,EAAAl7C,GACAmiF,GAAAtlF,KAAAP,KAAA2+C,EAAAC,EAAAl7C,EAAA,KAEAoiF,GAAAxlC,YAAA,SAAA3/C,EAAA+C,EAAAu8C,GACA+lC,GAAAzlF,KAAAP,KAAAW,EAAA+C,EAAA,GAAAu8C,IAIA9C,GAAA8oC,UAAA3rC,EAIA6C,GAAA+oC,WAAA,SAAA3rC,EAAAC,GACA,MAAAA,GAAAD,GAAA,EAAAC,EAAAD,EAAA,EAAAC,GAAAD,EAAA,EAAAE,KAEA0C,GAAAzM,IAAA,SAAAhsC,EAAA+/C,GACA,GAAAlK,GAAAC,EAAAn6C,GAAA,EAAAc,EAAAuD,EAAAvC,MACA,QAAAo3B,UAAAp3B,OAAA,CACA,OAAA9B,EAAAc,GAAA,UAAAq5C,EAAA91C,EAAArE,KAAAm6C,KAAA,CACAD,EAAAC,CACA,OAEA,OAAAn6C,EAAAc,GAAA,OAAAq5C,EAAA91C,EAAArE,KAAAk6C,EAAAC,IAAAD,EAAAC,OACK,CACL,OAAAn6C,EAAAc,GAAA,UAAAq5C,EAAAiK,EAAAlkD,KAAAmE,IAAArE,QAAAm6C,KAAA,CACAD,EAAAC,CACA,OAEA,OAAAn6C,EAAAc,GAAA,OAAAq5C,EAAAiK,EAAAlkD,KAAAmE,IAAArE,QAAAk6C,EAAAC,IAAAD,EAAAC,GAEA,MAAAD,IAEA4C,GAAA7M,IAAA,SAAA5rC,EAAA+/C,GACA,GAAAlK,GAAAC,EAAAn6C,GAAA,EAAAc,EAAAuD,EAAAvC,MACA,QAAAo3B,UAAAp3B,OAAA,CACA,OAAA9B,EAAAc,GAAA,UAAAq5C,EAAA91C,EAAArE,KAAAm6C,KAAA,CACAD,EAAAC,CACA,OAEA,OAAAn6C,EAAAc,GAAA,OAAAq5C,EAAA91C,EAAArE,KAAAm6C,EAAAD,MAAAC,OACK,CACL,OAAAn6C,EAAAc,GAAA,UAAAq5C,EAAAiK,EAAAlkD,KAAAmE,IAAArE,QAAAm6C,KAAA,CACAD,EAAAC,CACA,OAEA,OAAAn6C,EAAAc,GAAA,OAAAq5C,EAAAiK,EAAAlkD,KAAAmE,IAAArE,QAAAm6C,EAAAD,MAAAC,GAEA,MAAAD,IAEA4C,GAAAsvB,OAAA,SAAA/nE,EAAA+/C,GACA,GAAAlK,GAAAC,EAAA/5C,EAAAJ,GAAA,EAAAc,EAAAuD,EAAAvC,MACA,QAAAo3B,UAAAp3B,OAAA,CACA,OAAA9B,EAAAc,GAAA,UAAAq5C,EAAA91C,EAAArE,KAAAm6C,KAAA,CACAD,EAAA95C,EAAA+5C,CACA,OAEA,OAAAn6C,EAAAc,GAAA,OAAAq5C,EAAA91C,EAAArE,MACAk6C,EAAAC,IAAAD,EAAAC,GACA/5C,EAAA+5C,IAAA/5C,EAAA+5C,QAEK,CACL,OAAAn6C,EAAAc,GAAA,UAAAq5C,EAAAiK,EAAAlkD,KAAAmE,IAAArE,QAAAm6C,KAAA,CACAD,EAAA95C,EAAA+5C,CACA,OAEA,OAAAn6C,EAAAc,GAAA,OAAAq5C,EAAAiK,EAAAlkD,KAAAmE,IAAArE,SACAk6C,EAAAC,IAAAD,EAAAC,GACA/5C,EAAA+5C,IAAA/5C,EAAA+5C,IAGA,OAAAD,EAAA95C,IAQA08C,GAAAvM,IAAA,SAAAlsC,EAAA+/C,GACA,GAAAlK,GAAA74C,EAAA,EAAAP,EAAAuD,EAAAvC,OAAA9B,GAAA,CACA,QAAAk5B,UAAAp3B,OACA,OAAA9B,EAAAc,GAAAy5C,EAAAL,GAAA71C,EAAArE,MAAAqB,GAAA64C,OAEA,QAAAl6C,EAAAc,GAAAy5C,EAAAL,GAAAkK,EAAAlkD,KAAAmE,IAAArE,SAAAqB,GAAA64C,EAEA,OAAA74C,IAEAy7C,GAAA3M,KAAA,SAAA9rC,EAAA+/C,GACA,GAAAlK,GAAA74C,EAAA,EAAAP,EAAAuD,EAAAvC,OAAA9B,GAAA,EAAAshD,EAAAxgD,CACA,QAAAo4B,UAAAp3B,OACA,OAAA9B,EAAAc,GAAAy5C,EAAAL,EAAAG,EAAAh2C,EAAArE,KAAAqB,GAAA64C,IAAsEoH,MAEtE,QAAAthD,EAAAc,GAAAy5C,EAAAL,EAAAG,EAAA+J,EAAAlkD,KAAAmE,IAAArE,QAAAqB,GAAA64C,IAAwFoH,CAExF,IAAAA,EAAA,MAAAjgD,GAAAigD,GAEAxE,GAAA0gC,SAAA,SAAAh4E,EAAApE,GACA,GAAAqtD,IAAAjpD,EAAA1D,OAAA,GAAAV,EAAA,EAAA8kD,EAAA/oB,KAAAyU,MAAA6c,GAAA7sD,GAAA4D,EAAA0gD,EAAA,GAAA3kD,EAAAktD,EAAAvI,CACA,OAAA3kD,GAAAK,EAAAL,GAAAiE,EAAA0gD,GAAAtkD,MAEAk7C,GAAAgpC,OAAA,SAAAzhF,EAAA+/C,GACA,GAAAlK,GAAA6rC,KAAAjlF,EAAAuD,EAAAvC,OAAA9B,GAAA,CACA,QAAAk5B,UAAAp3B,OACA,OAAA9B,EAAAc,GAAAy5C,EAAAL,EAAAG,EAAAh2C,EAAArE,MAAA+lF,EAAA18E,KAAA6wC,OAEA,QAAAl6C,EAAAc,GAAAy5C,EAAAL,EAAAG,EAAA+J,EAAAlkD,KAAAmE,IAAArE,SAAA+lF,EAAA18E,KAAA6wC,EAEA,IAAA6rC,EAAAjkF,OAAA,MAAAg7C,IAAA0gC,SAAAuI,EAAAx+E,KAAA0yC,GAAA,KAEA6C,GAAAkpC,SAAA,SAAA3hF,EAAA+/C,GACA,GAAAlK,GAAA75C,EAAAS,EAAAuD,EAAAvC,OAAA3B,EAAA,EAAAkB,EAAA,EAAArB,GAAA,EAAAshD,EAAA,CACA,QAAApoB,UAAAp3B,OACA,OAAA9B,EAAAc,GACAy5C,EAAAL,EAAAG,EAAAh2C,EAAArE,OACAK,EAAA65C,EAAA/5C,EACAA,GAAAE,IAAAihD,EACAjgD,GAAAhB,GAAA65C,EAAA/5C,QAIA,QAAAH,EAAAc,GACAy5C,EAAAL,EAAAG,EAAA+J,EAAAlkD,KAAAmE,IAAArE,UACAK,EAAA65C,EAAA/5C,EACAA,GAAAE,IAAAihD,EACAjgD,GAAAhB,GAAA65C,EAAA/5C,GAIA,IAAAmhD,EAAA,QAAAjgD,IAAAigD,EAAA,IAEAxE,GAAAmpC,UAAA,WACA,GAAArkF,GAAAk7C,GAAAkpC,SAAAhiF,MAAArE,KAAAu5B,UACA,OAAAt3B,GAAAu7B,KAAAwqB,KAAA/lD,KAwBA,IAAAskF,IAAA1rC,EAAAP,EACA6C,IAAAqpC,WAAAD,GAAAxrC,KACAoC,GAAAk+B,OAAAl+B,GAAAspC,YAAAF,GAAArrC,MACAiC,GAAAupC,SAAA,SAAAjiC,GACA,MAAA5J,GAAA,IAAA4J,EAAAtiD,OAAA,SAAAzB,EAAAi6C,GACA,MAAAL,GAAAmK,EAAA/jD,GAAAi6C,IACK8J,IAELtH,GAAA7X,QAAA,SAAA5gC,EAAAs9C,EAAAi5B,IACAz6E,EAAA+4B,UAAAp3B,QAAA,IACA84E,EAAAv2E,EAAAvC,OACA3B,EAAA,IAAAwhD,EAAA,GAGA,KADA,GAAAgJ,GAAA3qD,EAAAG,EAAAy6E,EAAAj5B,EACAxhD,GACAH,EAAAm9B,KAAAkO,SAAAlrC,IAAA,EACAwqD,EAAAtmD,EAAAlE,EAAAwhD,GAAAt9C,EAAAlE,EAAAwhD,GAAAt9C,EAAArE,EAAA2hD,GAAAt9C,EAAArE,EAAA2hD,GAAAgJ,CAEA,OAAAtmD,IAEAy4C,GAAAwpC,QAAA,SAAAjiF,EAAA0tB,GAEA,IADA,GAAA/xB,GAAA+xB,EAAAjwB,OAAAykF,EAAA,GAAAjhF,OAAAtF,GACAA,KAAAumF,EAAAvmF,GAAAqE,EAAA0tB,EAAA/xB,GACA,OAAAumF,IAEAzpC,GAAAx2B,MAAA,SAAAjiB,GAEA,IADA,GAAArE,GAAA,EAAAc,EAAAuD,EAAAvC,OAAA,EAAAm3D,EAAA50D,EAAA,GAAAiiB,EAAA,GAAAhhB,OAAAxE,EAAA,IAAAA,GACAd,EAAAc,GAAAwlB,EAAAtmB,IAAAi5D,IAAA50D,IAAArE,GACA,OAAAsmB,IAEAw2B,GAAA0pC,UAAA,SAAAC,GACA,KAAA3lF,EAAA2lF,EAAA3kF,QAAA,QACA,QAAA9B,IAAA,EAAAG,EAAA28C,GAAAzM,IAAAo2C,EAAA3rC,GAAA0rC,EAAA,GAAAlhF,OAAAnF,KAAsFH,EAAAG,GACtF,OAAAW,GAAAwgD,GAAA,EAAAolC,EAAAF,EAAAxmF,GAAA,GAAAsF,OAAAxE,KAA4DwgD,EAAAxgD,GAC5D4lF,EAAAplC,GAAAmlC,EAAAnlC,GAAAthD,EAGA,OAAAwmF,IAKA1pC,GAAA7I,IAAA,WACA,MAAA6I,IAAA0pC,UAAAttD,YAEA4jB,GAAA/0B,KAAA,SAAApkB,GACA,GAAAokB,KACA,QAAAxhB,KAAA5C,GAAAokB,EAAA1e,KAAA9C,EACA,OAAAwhB,IAEA+0B,GAAAt3C,OAAA,SAAA7B,GACA,GAAA6B,KACA,QAAAe,KAAA5C,GAAA6B,EAAA6D,KAAA1F,EAAA4C,GACA,OAAAf,IAEAs3C,GAAA74B,QAAA,SAAAtgB,GACA,GAAAsgB,KACA,QAAA1d,KAAA5C,GAAAsgB,EAAA5a,MACA9C,MACAlD,MAAAM,EAAA4C,IAEA,OAAA0d,IAEA64B,GAAA7G,MAAA,SAAAtpB,GAEA,IADA,GAAAxsB,GAAAwmF,EAAAtiF,EAAAvD,EAAA6rB,EAAA7qB,OAAA9B,GAAA,EAAAshD,EAAA,IACAthD,EAAAc,GAAAwgD,GAAA30B,EAAA3sB,GAAA8B,MAEA,KADA6kF,EAAA,GAAArhF,OAAAg8C,KACAxgD,GAAA,GAGA,IAFAuD,EAAAsoB,EAAA7rB,GACAX,EAAAkE,EAAAvC,SACA3B,GAAA,GACAwmF,IAAArlC,GAAAj9C,EAAAlE,EAGA,OAAAwmF,GAEA,IAAAj7B,IAAAvuB,KAAAuuB,GACA5O,IAAAzF,MAAA,SAAAh0B,EAAAg3D,EAAAhoD,GAQA,GAPA6G,UAAAp3B,OAAA,IACAuwB,EAAA,EACA6G,UAAAp3B,OAAA,IACAu4E,EAAAh3D,EACAA,EAAA,KAGAg3D,EAAAh3D,GAAAgP,GAAArF,IAAA,SAAAgc,OAAA,iBACA,IAAAsY,GAAAjK,KAAA2D,EAAAD,EAAA2Q,GAAAr5B,IAAAryB,GAAA,CAEA,IADAqjB,GAAA23B,EAAAq/B,GAAAr/B,EAAA3oB,GAAA2oB,EACA3oB,EAAA,QAAAivB,EAAAj+B,EAAAgP,IAAAryB,GAAAq6E,GAAAhjC,EAAAhuC,KAAAi4C,EAAAtG,OAA4E,OAAAsG,EAAAj+B,EAAAgP,IAAAryB,GAAAq6E,GAAAhjC,EAAAhuC,KAAAi4C,EAAAtG,EAC5E,OAAA3D,IAeAyF,GAAAn5C,IAAA,SAAA3C,EAAAojD,GACA,GAAAzgD,GAAA,GAAAw3C,EACA,IAAAn6C,YAAAm6C,GACAn6C,EAAAwI,QAAA,SAAAjD,EAAAlD,GACAM,EAAAE,IAAA0C,EAAAlD,SAEK,IAAAiC,MAAAoc,QAAA1gB,GAAA,CACL,GAAAR,GAAAR,GAAA,EAAAc,EAAAE,EAAAc,MACA,QAAAo3B,UAAAp3B,OAAA,OAAA9B,EAAAc,GAAA6C,EAAAE,IAAA7D,EAAAgB,EAAAhB,QAAwE,QAAAA,EAAAc,GAAA6C,EAAAE,IAAAugD,EAAAlkD,KAAAc,EAAAR,EAAAQ,EAAAhB,MAAAQ,OAExE,QAAA+F,KAAAvF,GAAA2C,EAAAE,IAAA0C,EAAAvF,EAAAuF,GAEA,OAAA5C,GAKA,IAAA03C,IAAA,YAAAC,GAAA,IACAL,GAAAE,GACAnzC,IAAAwzC,EACA36C,IAAA,SAAA0F,GACA,MAAA5G,MAAA8B,EAAA25C,EAAA70C,KAEA1C,IAAA,SAAA0C,EAAAlD,GACA,MAAA1D,MAAA8B,EAAA25C,EAAA70C,IAAAlD,GAEA0+B,OAAA0Z,EACA1zB,KAAA2zB,EACAl2C,OAAA,WACA,GAAAA,KACA,QAAAe,KAAA5G,MAAA8B,EAAA+D,EAAA6D,KAAA1J,KAAA8B,EAAA8E,GACA,OAAAf,IAEAye,QAAA,WACA,GAAAA,KACA,QAAA1d,KAAA5G,MAAA8B,EAAAwiB,EAAA5a,MACA9C,IAAAg1C,EAAAh1C,GACAlD,MAAA1D,KAAA8B,EAAA8E,IAEA,OAAA0d,IAEA1a,KAAAoyC,EACAirC,MAAAhrC,EACApyC,QAAA,SAAA46C,GACA,OAAA79C,KAAA5G,MAAA8B,EAAA2iD,EAAAlkD,KAAAP,KAAA47C,EAAAh1C,GAAA5G,KAAA8B,EAAA8E,OA6BAu2C,GAAA+pC,KAAA,WAEA,QAAAljF,GAAAmjF,EAAAziF,EAAA6mB,GACA,GAAAA,GAAAnD,EAAAjmB,OAAA,MAAAilF,KAAA7mF,KAAA2mF,EAAAxiF,GAAA2iF,EAAA3iF,EAAAkD,KAAAy/E,GAAA3iF,CAEA,KADA,GAAA4iF,GAAAjmF,EAAAsD,EAAAkB,EAAAxF,GAAA,EAAAc,EAAAuD,EAAAvC,OAAAyE,EAAAwhB,EAAAmD,KAAAg8D,EAAA,GAAA/rC,KACAn7C,EAAAc,IACA0E,EAAA0hF,EAAArmF,IAAAomF,EAAA1gF,EAAAvF,EAAAqD,EAAArE,MACAwF,EAAA6D,KAAArI,GAEAkmF,EAAArjF,IAAAojF,GAAAjmF,GAeA,OAZA8lF,IACA9lF,EAAA8lF,IACAxiF,EAAA,SAAA2iF,EAAAzhF,GACAxE,EAAA6C,IAAAojF,EAAAtjF,EAAAmjF,EAAAthF,EAAA0lB,OAGAlqB,KACAsD,EAAA,SAAA2iF,EAAAzhF,GACAxE,EAAAimF,GAAAtjF,EAAAmjF,EAAAthF,EAAA0lB,KAGAg8D,EAAA19E,QAAAlF,GACAtD,EAEA,QAAAijB,GAAAtgB,EAAAunB,GACA,GAAAA,GAAAnD,EAAAjmB,OAAA,MAAA6B,EACA,IAAAU,MAAA8iF,EAAAC,EAAAl8D,IAOA,OANAvnB,GAAA6F,QAAA,SAAAjD,EAAA8gF,GACAhjF,EAAAgF,MACA9C,MACAf,OAAAye,EAAAojE,EAAAn8D,OAGAi8D,EAAA9iF,EAAAkD,KAAA,SAAA2yC,EAAAC,GACA,MAAAgtC,GAAAjtC,EAAA3zC,IAAA4zC,EAAA5zC,OACOlC,EApCP,GAAiB2iF,GAAAD,EAAjBF,KAAiB9+D,KAAAq/D,IA4DjB,OAtBAP,GAAAljF,IAAA,SAAAU,EAAAyiF,GACA,MAAAnjF,GAAAmjF,EAAAziF,EAAA,IAEAwiF,EAAA5iE,QAAA,SAAA5f,GACA,MAAA4f,GAAAtgB,EAAAm5C,GAAAn5C,IAAAU,EAAA,OAEAwiF,EAAAtgF,IAAA,SAAAlG,GAEA,MADA0nB,GAAA1e,KAAAhJ,GACAwmF,GAEAA,EAAAO,SAAA,SAAAE,GAEA,MADAF,GAAAr/D,EAAAjmB,OAAA,GAAAwlF,EACAT,GAEAA,EAAAG,WAAA,SAAAM,GAEA,MADAN,GAAAM,EACAT,GAEAA,EAAAE,OAAA,SAAA3iC,GAEA,MADA2iC,GAAA3iC,EACAyiC,GAEAA,GAEA/pC,GAAAj5C,IAAA,SAAAQ,GACA,GAAAR,GAAA,GAAAg4C,EACA,IAAAx3C,EAAA,OAAArE,GAAA,EAAAc,EAAAuD,EAAAvC,OAAgD9B,EAAAc,IAAOd,EAAA6D,EAAAE,IAAAM,EAAArE,GACvD,OAAA6D,IAKAo3C,EAAAY,GACA7zC,IAAAwzC,EACAz3C,IAAA,SAAAwC,GAEA,MADA5G,MAAA8B,EAAA25C,EAAA70C,GAAA,QACAA,GAEAw7B,OAAA0Z,EACAj2C,OAAAk2C,EACAnyC,KAAAoyC,EACAirC,MAAAhrC,EACApyC,QAAA,SAAA46C,GACA,OAAA79C,KAAA5G,MAAA8B,EAAA2iD,EAAAlkD,KAAAP,KAAA47C,EAAAh1C,OAGAu2C,GAAAyqC,YAIAzqC,GAAAuN,OAAA,SAAAze,EAAA18B,GAEA,IADA,GAAA8nC,GAAAh3C,EAAA,EAAAc,EAAAo4B,UAAAp3B,SACA9B,EAAAc,GAAA8qC,EAAAoL,EAAA9d,UAAAl5B,IAAA+7C,EAAAnQ,EAAA18B,IAAA8nC,GACA,OAAApL,GAgBA,IAAAqQ,KAAA,kCAEAa,IAAAR,SAAA,WAEA,IADA,GAAAA,GAAA,GAAAF,GAAAp8C,GAAA,EAAAc,EAAAo4B,UAAAp3B,SACA9B,EAAAc,GAAAw7C,EAAApjB,UAAAl5B,IAAAq8C,EAAAC,EACA,OAAAA,IAGAF,EAAAl7C,UAAAw7C,GAAA,SAAA54B,EAAA84B,GACA,GAAA58C,GAAA8jB,EAAA+N,QAAA,KAAAvxB,EAAA,EAKA,IAJAN,GAAA,IACAM,EAAAwjB,EAAAyR,MAAAv1B,EAAA,GACA8jB,IAAAyR,MAAA,EAAAv1B,IAEA8jB,EAAA,MAAAoV,WAAAp3B,OAAA,EAAAnC,KAAAmkB,GAAA44B,GAAAp8C,GAAAX,KAAAmkB,GAAA44B,GAAAp8C,EAAAs8C,EACA,QAAA1jB,UAAAp3B,OAAA,CACA,SAAA86C,EAAA,IAAA94B,IAAAnkB,MACAA,KAAAwB,eAAA2iB,IAAAnkB,KAAAmkB,GAAA44B,GAAAp8C,EAAA,KAEA,OAAAX,QAyBAm9C,GAAAP,MAAA,KA0BAO,GAAAoC,QAAA,SAAA79C,GACA,MAAAA,GAAAe,QAAAolF,GAAA,QAEA,IAAAA,IAAA,kCACA9pC,MAAsB+pC,UAAA,SAAAzmF,EAAAE,GACtBF,EAAAymF,UAAAvmF,GACG,SAAAF,EAAAE,GACH,OAAAD,KAAAC,GAAAF,EAAAC,GAAAC,EAAAD,IAMA68C,GAAA,SAAAz8C,EAAAP,GACA,MAAAA,GAAA4mF,cAAArmF,IACG28C,GAAA,SAAA38C,EAAAP,GACH,MAAAA,GAAA6mF,iBAAAtmF,IACG8/C,GAAA,SAAArgD,EAAAO,GACH,GAAAumF,GAAA9mF,EAAA+tC,SAAA/tC,EAAAk7C,EAAAl7C,EAAA,mBAIA,QAHAqgD,GAAA,SAAArgD,EAAAO,GACA,MAAAumF,GAAA1nF,KAAAY,EAAAO,KAEAP,EAAAO,GAEA,mBAAAwmF,UACA/pC,GAAA,SAAAz8C,EAAAP,GACA,MAAA+mF,QAAAxmF,EAAAP,GAAA,UAEAk9C,GAAA6pC,OACA1mC,GAAA0mC,OAAAC,iBAEAhrC,GAAAh6C,UAAA,WACA,MAAAg6C,IAAAiG,OAAA8hC,GAAA/qC,iBAEA,IAAA6D,IAAAb,GAAAh6C,UAAA5B,YACAy8C,IAAAoF,OAAA,SAAAlF,GACA,GAAAkqC,GAAAC,EAAA9kD,EAAAyW,EAAAsuC,IACApqC,GAAAD,EAAAC,EACA,QAAAyD,IAAA,EAAAnhD,EAAAR,KAAAmC,SAAqCw/C,EAAAnhD,GAAS,CAC9C8nF,EAAA5+E,KAAA0+E,MACAA,EAAAhnC,YAAA7d,EAAAvjC,KAAA2hD,IAAAP,UACA,QAAA/gD,IAAA,EAAAc,EAAAoiC,EAAAphC,SAAwC9B,EAAAc,IACxC64C,EAAAzW,EAAAljC,KACA+nF,EAAA1+E,KAAA2+E,EAAAnqC,EAAA39C,KAAAy5C,IAAAt1B,SAAArkB,EAAAshD,IACA0mC,GAAA,YAAAruC,KAAAquC,EAAA3jE,SAAAs1B,EAAAt1B,WAEA0jE,EAAA1+E,KAAA,MAIA,MAAAm0C,GAAAyqC,IAOAtqC,GAAAuqC,UAAA,SAAArqC,GACA,GAAAkqC,GAAApuC,EAAAsuC,IACApqC,GAAAE,EAAAF,EACA,QAAAyD,IAAA,EAAAnhD,EAAAR,KAAAmC,SAAqCw/C,EAAAnhD,GACrC,OAAA+iC,GAAAvjC,KAAA2hD,GAAAthD,GAAA,EAAAc,EAAAoiC,EAAAphC,SAAyD9B,EAAAc,IACzD64C,EAAAzW,EAAAljC,MACAioF,EAAA5+E,KAAA0+E,EAAA5lC,GAAAtE,EAAA39C,KAAAy5C,IAAAt1B,SAAArkB,EAAAshD,KACAymC,EAAAhnC,WAAApH,EAIA,OAAA6D,GAAAyqC,GAOA,IAAAvnC,IAAA,+BACAynC,IACA7kC,IAAA,6BACA8kC,MAAA1nC,GACA2nC,MAAA,+BACAC,IAAA,uCACAC,MAAA,gCAEAzrC,IAAAgC,IACAhP,OAAAq4C,GACAppC,QAAA,SAAAz+C,GACA,GAAAN,GAAAM,EAAAuxB,QAAA,KAAAie,EAAAxvC,CAEA,OADAN,IAAA,cAAA8vC,EAAAxvC,EAAAi1B,MAAA,EAAAv1B,MAAAM,IAAAi1B,MAAAv1B,EAAA,IACAmoF,GAAAhnF,eAAA2uC,IACAwO,MAAA6pC,GAAAr4C,GACAyO,MAAAj+C,GACOA,IAGPq9C,GAAAl7C,KAAA,SAAAnC,EAAA+C,GACA,GAAA61B,UAAAp3B,OAAA,GACA,mBAAAxB,GAAA,CACA,GAAAq5C,GAAAh6C,KAAAg6C,MAEA,OADAr5C,GAAAw8C,GAAAgC,GAAAC,QAAAz+C,GACAA,EAAAi+C,MAAA5E,EAAA6uC,eAAAloF,EAAAg+C,MAAAh+C,EAAAi+C,OAAA5E,EAAA+F,aAAAp/C,GAEA,IAAA+C,IAAA/C,GAAAX,KAAA24C,KAAA2F,EAAA56C,EAAA/C,EAAA+C,IACA,OAAA1D,MAEA,MAAAA,MAAA24C,KAAA2F,EAAA39C,EAAA+C,KA6BAs6C,GAAA8qC,QAAA,SAAAnoF,EAAA+C,GACA,GAAA61B,UAAAp3B,OAAA,GACA,mBAAAxB,GAAA,CACA,GAAAq5C,GAAAh6C,KAAAg6C,OAAA74C,GAAAR,EAAA6+C,EAAA7+C,IAAAwB,OAAA9B,GAAA,CACA,IAAAqD,EAAAs2C,EAAA8F,WACA,OAAAz/C,EAAAc,GAAA,IAAAuC,EAAAqlF,SAAApoF,EAAAN,IAAA,aAGA,KADAqD,EAAAs2C,EAAA+F,aAAA,WACA1/C,EAAAc,GAAA,IAAAm+C,EAAA3+C,EAAAN,IAAA6I,KAAAxF,GAAA,QAEA,UAEA,IAAAA,IAAA/C,GAAAX,KAAA24C,KAAA8G,EAAA/7C,EAAA/C,EAAA+C,IACA,OAAA1D,MAEA,MAAAA,MAAA24C,KAAA8G,EAAA9+C,EAAA+C,KAkCAs6C,GAAAmC,MAAA,SAAAx/C,EAAA+C,EAAAu8C,GACA,GAAA9+C,GAAAo4B,UAAAp3B,MACA,IAAAhB,EAAA,GACA,mBAAAR,GAAA,CACAQ,EAAA,IAAAuC,EAAA,GACA,KAAAu8C,IAAAt/C,GAAAX,KAAA24C,KAAAqH,EAAAC,EAAAt/C,EAAAs/C,GAAAv8C,GACA,OAAA1D,MAEA,GAAAmB,EAAA,GACA,GAAA64C,GAAAh6C,KAAAg6C,MACA,OAAAI,GAAAJ,GAAAgvC,iBAAAhvC,EAAA,MAAAivC,iBAAAtoF,GAEAs/C,EAAA,GAEA,MAAAjgD,MAAA24C,KAAAqH,EAAAr/C,EAAA+C,EAAAu8C,KAeAjC,GAAA18C,SAAA,SAAAX,EAAA+C,GACA,GAAA61B,UAAAp3B,OAAA,GACA,mBAAAxB,GAAA,MAAAX,MAAAg6C,OAAAr5C,EACA,KAAA+C,IAAA/C,GAAAX,KAAA24C,KAAA6H,EAAA98C,EAAA/C,EAAA+C,IACA,OAAA1D,MAEA,MAAAA,MAAA24C,KAAA6H,EAAA7/C,EAAA+C,KAeAs6C,GAAAkrC,KAAA,SAAAxlF,GACA,MAAA61B,WAAAp3B,OAAAnC,KAAA24C,KAAA,kBAAAj1C,GAAA,WACA,GAAAzB,GAAAyB,EAAAW,MAAArE,KAAAu5B,UACAv5B,MAAAujF,YAAA,MAAAthF,EAAA,GAAAA,GACK,MAAAyB,EAAA,WACL1D,KAAAujF,YAAA,IACK,WACLvjF,KAAAujF,YAAA7/E,IACK1D,KAAAg6C,OAAAupC,aAELvlC,GAAAmrC,KAAA,SAAAzlF,GACA,MAAA61B,WAAAp3B,OAAAnC,KAAA24C,KAAA,kBAAAj1C,GAAA,WACA,GAAAzB,GAAAyB,EAAAW,MAAArE,KAAAu5B,UACAv5B,MAAAopF,UAAA,MAAAnnF,EAAA,GAAAA,GACK,MAAAyB,EAAA,WACL1D,KAAAopF,UAAA,IACK,WACLppF,KAAAopF,UAAA1lF,IACK1D,KAAAg6C,OAAAovC,WAELprC,GAAAkG,OAAA,SAAAvjD,GAEA,MADAA,GAAAigD,EAAAjgD,GACAX,KAAAojD,OAAA,WACA,MAAApjD,MAAAqpF,YAAA1oF,EAAA0D,MAAArE,KAAAu5B,eAaAykB,GAAAytB,OAAA,SAAA9qE,EAAA8kC,GAGA,MAFA9kC,GAAAigD,EAAAjgD,GACA8kC,EAAAwY,EAAAxY,GACAzlC,KAAAojD,OAAA,WACA,MAAApjD,MAAAspF,aAAA3oF,EAAA0D,MAAArE,KAAAu5B,WAAAkM,EAAAphC,MAAArE,KAAAu5B,YAAA,SAGAykB,GAAA5b,OAAA,WACA,MAAApiC,MAAA24C,KAAAwI,IAMAnD,GAAAz0C,KAAA,SAAA7F,EAAAkD,GAWA,QAAAquC,GAAA1R,EAAAgmD,GACA,GAAAlpF,GAAA25C,EAAAwvC,EAAAroF,EAAAoiC,EAAAphC,OAAA3B,EAAA+oF,EAAApnF,OAAAsvE,EAAAj0C,KAAAkT,IAAAvvC,EAAAX,GAAAipF,EAAA,GAAA9jF,OAAAnF,GAAAkpF,EAAA,GAAA/jF,OAAAnF,GAAAmpF,EAAA,GAAAhkF,OAAAxE,EACA,IAAAyF,EAAA,CACA,GAAA0gF,GAAAsC,EAAA,GAAApuC,GAAAquC,EAAA,GAAAlkF,OAAAxE,EACA,KAAAd,GAAA,IAAoBA,EAAAc,IACpB64C,EAAAzW,EAAAljC,MACAupF,EAAAvhF,IAAAi/E,EAAA1gF,EAAArG,KAAAy5C,IAAAt1B,SAAArkB,IACAspF,EAAAtpF,GAAA25C,EAEA4vC,EAAA1lF,IAAAojF,EAAAttC,GAEA6vC,EAAAxpF,GAAAinF,EAGA,KAAAjnF,GAAA,IAAoBA,EAAAG,IACpBw5C,EAAA4vC,EAAA1oF,IAAAomF,EAAA1gF,EAAArG,KAAAgpF,EAAAC,EAAAD,EAAAlpF,SAEW,IAAA25C,IACXyvC,EAAAppF,GAAA25C,EACAA,EAAAt1B,SAAA8kE,GAHAE,EAAArpF,GAAAihD,EAAAkoC,GAKAI,EAAA1lF,IAAAojF,GAAA,EAEA,KAAAjnF,GAAA,IAAoBA,EAAAc,GACpBd,IAAAwpF,KAAA,IAAAD,EAAA1oF,IAAA2oF,EAAAxpF,MACAspF,EAAAtpF,GAAAkjC,EAAAljC,QAGO,CACP,IAAAA,GAAA,IAAoBA,EAAAoxE,GACpBz3B,EAAAzW,EAAAljC,GACAmpF,EAAAD,EAAAlpF,GACA25C,GACAA,EAAAt1B,SAAA8kE,EACAC,EAAAppF,GAAA25C,GAEA0vC,EAAArpF,GAAAihD,EAAAkoC,EAGA,MAAcnpF,EAAAG,IAAMH,EACpBqpF,EAAArpF,GAAAihD,EAAAioC,EAAAlpF,GAEA,MAAcA,EAAAc,IAAMd,EACpBspF,EAAAtpF,GAAAkjC,EAAAljC,GAGAqpF,EAAAr+C,OAAAo+C,EACAC,EAAAtoC,WAAAqoC,EAAAroC,WAAAuoC,EAAAvoC,WAAA7d,EAAA6d,WACAW,EAAAr4C,KAAAggF,GACAr+C,EAAA3hC,KAAA+/E,GACAK,EAAApgF,KAAAigF,GA5DA,GAAApmD,GAAAyW,EAAA35C,GAAA,EAAAc,EAAAnB,KAAAmC,MACA,KAAAo3B,UAAAp3B,OAAA,CAEA,IADAuB,EAAA,GAAAiC,OAAAxE,GAAAoiC,EAAAvjC,KAAA,IAAAmC,UACA9B,EAAAc,IACA64C,EAAAzW,EAAAljC,MACAqD,EAAArD,GAAA25C,EAAAt1B,SAGA,OAAAhhB,GAsDA,GAAAq+C,GAAAH,MAAAvW,EAAAwS,MAAAisC,EAAAjsC,KACA,sBAAAn6C,GACA,OAAArD,EAAAc,GACA8zC,EAAA1R,EAAAvjC,KAAAK,GAAAqD,EAAAnD,KAAAgjC,IAAA6d,WAAA18B,SAAArkB,QAGA,QAAAA,EAAAc,GACA8zC,EAAA1R,EAAAvjC,KAAAK,GAAAqD,EASA,OANA2nC,GAAA0W,MAAA,WACA,MAAAA,IAEA1W,EAAAy+C,KAAA,WACA,MAAAA,IAEAz+C,GAOA2S,GAAA+rC,MAAA,SAAArmF,GACA,MAAA61B,WAAAp3B,OAAAnC,KAAAsB,SAAA,WAAAoC,GAAA1D,KAAAsB,SAAA,aAEA08C,GAAAxZ,OAAA,SAAAA,GACA,GAAA4jD,GAAA7kD,EAAAyW,EAAAsuC,IACA,mBAAA9jD,OAAA+c,EAAA/c,GACA,QAAAmd,GAAA,EAAAnhD,EAAAR,KAAAmC,OAAoCw/C,EAAAnhD,EAAOmhD,IAAA,CAC3C2mC,EAAA5+E,KAAA0+E,MACAA,EAAAhnC,YAAA7d,EAAAvjC,KAAA2hD,IAAAP,UACA,QAAA/gD,GAAA,EAAAc,EAAAoiC,EAAAphC,OAAuC9B,EAAAc,EAAOd,KAC9C25C,EAAAzW,EAAAljC,KAAAmkC,EAAAjkC,KAAAy5C,IAAAt1B,SAAArkB,EAAAshD,IACAymC,EAAA1+E,KAAAswC,GAIA,MAAA6D,GAAAyqC,IAOAtqC,GAAA2pC,MAAA,WACA,OAAAhmC,IAAA,EAAAnhD,EAAAR,KAAAmC,SAAqCw/C,EAAAnhD,GACrC,OAAAw5C,GAAAzW,EAAAvjC,KAAA2hD,GAAAthD,EAAAkjC,EAAAphC,OAAA,EAAAqH,EAAA+5B,EAAAljC,KAA4EA,GAAA,IAC5E25C,EAAAzW,EAAAljC,MACAmJ,OAAAwwC,EAAAgwC,aAAAxgF,EAAA43C,WAAAkoC,aAAAtvC,EAAAxwC,GACAA,EAAAwwC,EAIA,OAAAh6C,OAEAg+C,GAAAp2C,KAAA,SAAAnC,GACAA,EAAAg8C,EAAAp9C,MAAArE,KAAAu5B,UACA,QAAAooB,IAAA,EAAAnhD,EAAAR,KAAAmC,SAAqCw/C,EAAAnhD,GAASR,KAAA2hD,GAAA/5C,KAAAnC,EAC9C,OAAAzF,MAAA2nF,SAQA3pC,GAAArF,KAAA,SAAA7e,GACA,MAAA4nB,GAAA1hD,KAAA,SAAAg6C,EAAA35C,EAAAshD,GACA7nB,EAAAv5B,KAAAy5C,IAAAt1B,SAAArkB,EAAAshD,MAWA3D,GAAAz9C,KAAA,SAAAu5B,GACA,GAAAt1B,GAAAg+C,GAAAjpB,UAEA,OADAO,GAAAz1B,MAAAG,EAAA,GAAAxE,KAAAwE,GACAxE,MAEAg+C,GAAAipC,MAAA,WACA,OAAAjnF,KAAAg6C,QAEAgE,GAAAhE,KAAA,WACA,OAAA2H,GAAA,EAAAnhD,EAAAR,KAAAmC,OAAoCw/C,EAAAnhD,EAAOmhD,IAC3C,OAAApe,GAAAvjC,KAAA2hD,GAAAthD,EAAA,EAAAc,EAAAoiC,EAAAphC,OAAwD9B,EAAAc,EAAOd,IAAA,CAC/D,GAAA25C,GAAAzW,EAAAljC,EACA,IAAA25C,EAAA,MAAAA,GAGA,aAEAgE,GAAAp0C,KAAA,WACA,GAAAzI,GAAA,CAIA,OAHAugD,GAAA1hD,KAAA,aACAmB,IAEAA,EAMA,IAAA0gD,MACA1E,IAAAh6C,UAAA4+C,MAAAH,EACAzE,GAAAh6C,UAAA4+C,MAAAxgD,UAAAsgD,GACAA,GAAAqC,OAAAlG,GAAAkG,OACArC,GAAAolC,MAAAjpC,GAAAipC,MACAplC,GAAA7H,KAAAgE,GAAAhE,KACA6H,GAAAthD,KAAAy9C,GAAAz9C,KACAshD,GAAAj4C,KAAAo0C,GAAAp0C,KACAi4C,GAAAuB,OAAA,SAAAlF,GAEA,OADAkqC,GAAAC,EAAA4B,EAAA1mD,EAAAyW,EAAAsuC,KACA3mC,GAAA,EAAAnhD,EAAAR,KAAAmC,SAAqCw/C,EAAAnhD,GAAS,CAC9CypF,GAAA1mD,EAAAvjC,KAAA2hD,IAAAtW,OACAi9C,EAAA5+E,KAAA0+E,MACAA,EAAAhnC,WAAA7d,EAAA6d,UACA,QAAA/gD,IAAA,EAAAc,EAAAoiC,EAAAphC,SAAwC9B,EAAAc,IACxC64C,EAAAzW,EAAAljC,KACA+nF,EAAA1+E,KAAAugF,EAAA5pF,GAAAgoF,EAAAnqC,EAAA39C,KAAAgjC,EAAA6d,WAAApH,EAAAt1B,SAAArkB,EAAAshD,IACA0mC,EAAA3jE,SAAAs1B,EAAAt1B,UAEA0jE,EAAA1+E,KAAA,MAIA,MAAAm0C,GAAAyqC,IAEAzmC,GAAA4pB,OAAA,SAAA9qE,EAAA8kC,GAEA,MADAlM,WAAAp3B,OAAA,IAAAsjC,EAAAqc,EAAA9hD,OACAg+C,GAAAytB,OAAAlrE,KAAAP,KAAAW,EAAA8kC,IAYA0X,GAAAiG,OAAA,SAAApJ,GACA,GAAAzW,EAQA,OAPA,gBAAAyW,IACAzW,GAAA4a,GAAAnE,EAAAkrC,KACA3hD,EAAA6d,WAAA8jC,GAAA/qC,kBAEA5W,GAAAyW,GACAzW,EAAA6d,WAAArH,EAAAC,IAEA6D,GAAAta,KAEA4Z,GAAAorC,UAAA,SAAA9Y,GACA,GAAAlsC,EAQA,OAPA,gBAAAksC,IACAlsC,EAAAif,GAAAnE,GAAAoxB,EAAAyV,KACA3hD,EAAA6d,WAAA8jC,GAAA/qC,kBAEA5W,EAAAif,GAAAitB,GACAlsC,EAAA6d,WAAA,MAEAvD,GAAAta,KAEAya,GAAAjB,GAAA,SAAA54B,EAAA84B,EAAAkF,GACA,GAAAhhD,GAAAo4B,UAAAp3B,MACA,IAAAhB,EAAA,GACA,mBAAAgjB,GAAA,CACAhjB,EAAA,IAAA87C,GAAA,EACA,KAAAkF,IAAAh+B,GAAAnkB,KAAA24C,KAAAuJ,EAAAC,EAAAh+B,EAAAg+B,GAAAlF,GACA,OAAAj9C,MAEA,GAAAmB,EAAA,SAAAA,EAAAnB,KAAAg6C,OAAA,OAAA71B,KAAAhjB,EAAAW,CACAqgD,IAAA,EAEA,MAAAniD,MAAA24C,KAAAuJ,EAAA/9B,EAAA84B,EAAAkF,IAgCA,IAAAS,IAAAzF,GAAAn5C,KACAkmF,WAAA,YACAC,WAAA,YAEAjF,KACAtiC,GAAA/4C,QAAA,SAAAwxC,GACA,KAAAA,IAAA6pC,KAAAtiC,GAAAxgB,OAAAiZ,IAwBA,IAAAgI,IAAAH,GAAA,CAyBA/F,IAAAitC,MAAA,SAAA3mC,GACA,MAAAD,IAAAC,EAAApG,KAEA,IAAA0G,IAAA/jD,KAAAqqF,WAAA,SAAAnhF,KAAAlJ,KAAAqqF,UAAAC,YAAA,GA8BAntC,IAAAotC,MAAA,SAAA9mC,EAAA+mC,EAAAllC,GAEA,GADA/rB,UAAAp3B,OAAA,IAAAmjD,EAAAklC,IAAAntC,IAAAqG,gBACA8mC,EAAA,OAAAD,GAAAlqF,EAAA,EAAAc,EAAAqpF,EAAAroF,OAA2D9B,EAAAc,IAAOd,EAClE,IAAAkqF,EAAAC,EAAAnqF,IAAAilD,eACA,MAAA9B,IAAAC,EAAA8mC,IAIAptC,GAAAyqC,SAAA6C,KAAA,WAEA,QAAAA,KACAzqF,KAAA+8C,GAAA,iBAAA2tC,GAAA3tC,GAAA,kBAAA4tC,GAEA,QAAAC,GAAAx6C,EAAAlE,EAAAgtB,EAAA2xB,EAAAlnE,GACA,kBAWA,QAAAmnE,KACA,GAAA3rB,GAAAC,EAAA2rB,EAAA7+C,EAAAze,EAAAu9D,EACAD,KACA5rB,EAAA4rB,EAAA,GAAAE,EAAA,GACA7rB,EAAA2rB,EAAA,GAAAE,EAAA,GACAC,GAAA/rB,EAAAC,EACA6rB,EAAAF,EACApuC,GACAx4B,KAAA,OACAw2B,EAAAowC,EAAA,GAAAI,EAAA,GACAxmC,EAAAomC,EAAA,GAAAI,EAAA,GACAhsB,KACAC,QAGA,QAAAgsB,KACAl/C,EAAAze,EAAAu9D,KACAK,EAAAtuC,GAAA8tC,EAAAS,EAAA,MAAAvuC,GAAAp5B,EAAA2nE,EAAA,MACAC,EAAAL,GACAvuC,GACAx4B,KAAA,aA9BA,GAAAgnE,GAAAK,EAAAxrF,KAAAisC,EAAAkR,GAAAP,MAAA3Q,OAAAw/C,sBAAAtuC,GAAAP,MAAA3Q,OAAAxe,EAAA+9D,EAAApqC,WAAAzE,EAAAC,EAAAY,GAAAguC,EAAAjyD,WAAA2xD,EAAA,EAAAF,EAAA56C,IAAAk7C,EAAA,eAAAN,EAAA,OAAAA,GAAAK,EAAAluC,GAAAiG,OAAA8V,EAAAjtB,IAAA8Q,GAAA8tC,EAAAS,EAAAR,GAAA/tC,GAAAp5B,EAAA2nE,EAAAF,GAAAG,EAAAtoC,GAAAhX,GAAAg/C,EAAA/+C,EAAAze,EAAAu9D,EACAU,IACAP,EAAAO,EAAArnF,MAAAmnF,EAAAjyD,WACA4xD,KAAAxwC,EAAAswC,EAAA,GAAAE,EAAAxmC,EAAAsmC,EAAA,KAEAE,GAAA,KAEAxuC,GACAx4B,KAAA,eAdA,GAAAy4B,GAAAW,EAAAktC,EAAA,8BAAAiB,EAAA,KAAAhB,EAAAE,EAAApuC,EAAAW,GAAAitC,MAAAhwC,EAAA,uBAAAuwC,EAAAC,EAAAvlC,GAAAlI,GAAAotC,MAAApuC,EAAA,uBA8CA,OALAsuC,GAAAiB,OAAA,SAAA/wC,GACA,MAAAphB,WAAAp3B,QACAupF,EAAA/wC,EACA8vC,GAFAiB,GAIAvuC,GAAAuN,OAAA+/B,EAAA7tC,EAAA,OAKAO,GAAAqtC,QAAA,SAAA/mC,EAAA+mC,GAEA,MADAjxD,WAAAp3B,OAAA,IAAAqoF,EAAAntC,IAAAmtC,SACAA,EAAAhoC,GAAAgoC,GAAAxmF,IAAA,SAAAumF,GACA,GAAAzmC,GAAAN,GAAAC,EAAA8mC,EAEA,OADAzmC,GAAAwB,WAAAilC,EAAAjlC,WACAxB,OAGA,IAAAsT,IAAA,KAAAmW,GAAAnW,MAAA1R,GAAAloB,KAAAgpC,GAAA9J,GAAA,EAAAhX,GAAAimC,GAAAjvB,GAAAtF,GAAAvR,GAAAH,GAAA,EAAA6B,GAAA7B,GAAA,IAAAqC,GAAA,IAAArC,GAyBAob,GAAAtjC,KAAAouD,KACAzuC,IAAA0uC,gBAAA,SAAAxyB,EAAAC,GACA,GAAAj5D,GAAA2uD,EAAA88B,EAAAzyB,EAAA,GAAA0yB,EAAA1yB,EAAA,GAAA2yB,EAAA3yB,EAAA,GAAA4yB,EAAA3yB,EAAA,GAAA4yB,EAAA5yB,EAAA,GAAA6yB,EAAA7yB,EAAA,GAAA6F,EAAA8sB,EAAAH,EAAA1sB,EAAA8sB,EAAAH,EAAApoB,EAAAxE,IAAAC,GACA,IAAAuE,EAAA4J,GACAve,EAAAxxB,KAAAouB,IAAAugC,EAAAH,GAAAlrB,GACAzgE,EAAA,SAAA2qD,GACA,OAAA8gC,EAAA9gC,EAAAmU,EAAA4sB,EAAA/gC,EAAAoU,EAAA4sB,EAAAxuD,KAAAwoB,IAAA8a,GAAA9V,EAAAgE,SAEK,CACL,GAAAd,GAAA1wB,KAAAwqB,KAAA2b,GAAAN,GAAA8oB,IAAAH,IATA,EASAroB,IAAA,EAAAqoB,EATA,EASA99B,GAAAwV,GAAAyoB,IAAAH,IATA,EASAroB,IAAA,EAAAwoB,EATA,EASAj+B,GAAAslB,EAAAh2C,KAAAouB,IAAApuB,KAAAwqB,KAAAqb,IAAA,GAAAA,GAAAoQ,EAAAj2C,KAAAouB,IAAApuB,KAAAwqB,KAAA0b,IAAA,GAAAA,EACA1U,IAAAykB,EAAAD,GAAA1S,GACAzgE,EAAA,SAAA2qD,GACA,GAAAtpD,GAAAspD,EAAAgE,EAAAo9B,EAAAnmC,GAAAutB,GAAArd,EAAA61B,GAZA,EAYA99B,IAAAk+B,EAAAlmC,GAAA4a,GAAAp/D,EAAA8xE,GAAAztB,GAAAytB,GACA,QAAAsY,EAAA31B,EAAAgJ,EAAA4sB,EAAA51B,EAAAiJ,EAAA4sB,EAAAI,EAAAnmC,GAAA6a,GAAAp/D,EAAA8xE,KAIA,MADAnzE,GAAA4jF,SAAA,IAAAj1B,EACA3uD,GAEA88C,GAAAyqC,SAAAyE,KAAA,WAeA,QAAAA,GAAArqF,GACAA,EAAA+6C,GAAA2tC,EAAA4B,GAAAvvC,GAAAwvC,GAAA,QAAAC,GAAAzvC,GAAA,gBAAA0vC,GAAA1vC,GAAA4tC,EAAA+B,GAoGA,QAAAC,GAAAlrF,GACA,QAAAA,EAAA,GAAA+hB,EAAAm3B,GAAAn3B,EAAA63B,GAAA55C,EAAA,GAAA+hB,EAAAmhC,GAAAnhC,EAAA63B,GAEA,QAAAyI,GAAAxjD,GACA,OAAAA,EAAA,GAAAkjB,EAAA63B,EAAA73B,EAAAm3B,EAAAr6C,EAAA,GAAAkjB,EAAA63B,EAAA73B,EAAAmhC,GAEA,QAAAioC,GAAAlrF,GACA8hB,EAAA63B,EAAA7d,KAAA8S,IAAAu8C,EAAA,GAAArvD,KAAAkT,IAAAm8C,EAAA,GAAAnrF,IAEA,QAAAorF,GAAArrF,EAAAnB,GACAA,EAAAwjD,EAAAxjD,GACAkjB,EAAAm3B,GAAAl5C,EAAA,GAAAnB,EAAA,GACAkjB,EAAAmhC,GAAAljD,EAAA,GAAAnB,EAAA,GAEA,QAAAysF,GAAAvB,EAAA/pF,EAAAnB,EAAA+6C,GACAmwC,EAAAwB,WACAryC,EAAAn3B,EAAAm3B,EACAgK,EAAAnhC,EAAAmhC,EACAtJ,EAAA73B,EAAA63B,GAEAuxC,EAAApvD,KAAA0qB,IAAA,EAAA7M,IACAyxC,EAAAG,EAAAxrF,EAAAnB,GACAkrF,EAAAruC,GAAAiG,OAAAooC,GACAvH,EAAA,IAAAuH,IAAAhoF,aAAAygF,aACAuH,EAAAjrF,KAAA8rF,EAAAzvC,OAEA,QAAA2+B,KACA1c,KAAA4b,OAAA3iB,EAAApgB,QAAA1zC,IAAA,SAAA22C,GACA,OAAAA,EAAAn3B,EAAAm3B,GAAAn3B,EAAA63B,IACOr3C,IAAA8zD,EAAA3hB,SACP2oB,KAAA2b,OAAA7iB,EAAAlgB,QAAA1zC,IAAA,SAAA2gD,GACA,OAAAA,EAAAnhC,EAAAmhC,GAAAnhC,EAAA63B,IACOr3C,IAAA4zD,EAAAzhB,SAEP,QAAA+2C,GAAAvwC,GACAwwC,KAAAxwC,GACAx4B,KAAA,cAGA,QAAAipE,GAAAzwC,GACA4+B,IACA5+B,GACAx4B,KAAA,OACA6nC,MAAAxoC,EAAA63B,EACAqqB,WAAAliD,EAAAm3B,EAAAn3B,EAAAmhC,KAGA,QAAA0oC,GAAA1wC,KACAwwC,IAAAxwC,GACAx4B,KAAA,YACO8oE,EAAA,MAEP,QAAAX,KAIA,QAAAxB,KACAI,EAAA,EACA4B,EAAA3vC,GAAAitC,MAAAoB,GAAA8B,GACAF,EAAAzwC,GAEA,QAAAyuC,KACAlyB,EAAAnc,GAAAwwC,EAAA,MAAAxwC,GAAAywC,EAAA,MACAjC,EAAAL,GACAmC,EAAA1wC,GAXA,GAAA6uC,GAAAxrF,KAAA28C,EAAAC,EAAAY,GAAAguC,EAAAjyD,WAAA2xD,EAAA,EAAAhyB,EAAA/b,GAAAiG,OAAAhJ,EAAAoxC,IAAAzuC,GAAAwwC,EAAAzC,GAAA/tC,GAAAywC,EAAApC,GAAAkC,EAAAX,EAAAxvC,GAAAitC,MAAAoB,IAAAD,EAAAtoC,GAAAuoC,EACAiC,IAAAltF,KAAAirF,GACA0B,EAAAvwC,GAYA,QAAA+vC,KAKA,QAAAgB,KACA,GAAAlD,GAAArtC,GAAAqtC,QAAAgB,EAKA,OAJAmC,GAAAnqE,EAAA63B,EACAmvC,EAAA3gF,QAAA,SAAAmhD,GACAA,EAAA1F,aAAAsoC,OAAA5iC,EAAA1F,YAAAqnC,EAAA3hC,MAEAw/B,EAEA,QAAAqD,KACA,GAAA5hD,GAAAkR,GAAAP,MAAA3Q,MACAkR,IAAAiG,OAAAnX,GAAA8Q,GAAA+wC,EAAAhD,GAAA/tC,GAAAgxC,EAAA3C,GACA4C,EAAAtkF,KAAAuiC,EAEA,QADAgiD,GAAA9wC,GAAAP,MAAA8G,eACArjD,EAAA,EAAAc,EAAA8sF,EAAA9rF,OAA2C9B,EAAAc,IAAOd,EAClDutF,EAAAK,EAAA5tF,GAAAilD,YAAA,IAEA,IAAAklC,GAAAkD,IAAA5mD,EAAAkK,KAAAlK,KACA,QAAA0jD,EAAAroF,OAAA,CACA,GAAA2kC,EAAAonD,EAAA,KACA,GAAAzsF,GAAA+oF,EAAA,EACAuC,GAAAvB,EAAA/pF,EAAAmsF,EAAAnsF,EAAA6jD,YAAA9nB,KAAAyU,MAAAzU,KAAAouB,IAAApoC,EAAA63B,GAAA7d,KAAAs6C,KAAA,GACA56B,IAEAgxC,EAAApnD,MACS,IAAA0jD,EAAAroF,OAAA,GACT,GAAAV,GAAA+oF,EAAA,GAAAjsB,EAAAisB,EAAA,GAAArrB,EAAA19D,EAAA,GAAA88D,EAAA,GAAAa,EAAA39D,EAAA,GAAA88D,EAAA,EACA4vB,GAAAhvB,IAAAC,KAGA,QAAA0rB,KACA,GAAAzxB,GAAA+0B,EAAA90B,EAAA+0B,EAAA7D,EAAArtC,GAAAqtC,QAAAgB,EACAiC,IAAAltF,KAAAirF,EACA,QAAAnrF,GAAA,EAAAc,EAAAqpF,EAAAroF,OAA2C9B,EAAAc,IAAOd,EAAAguF,EAAA,KAElD,GADA/0B,EAAAkxB,EAAAnqF,GACAguF,EAAAT,EAAAt0B,EAAAhU,YAAA,CACA,GAAA8oC,EAAA,KACA/0B,GAAAC,EAAA80B,EAAAC,EAGA,GAAAA,EAAA,CACA,GAAAC,MAAAh1B,EAAA,GAAAD,EAAA,IAAAi1B,KAAAh1B,EAAA,GAAAD,EAAA,IAAAi1B,EAAAC,EAAAJ,GAAA3wD,KAAAwqB,KAAAsmC,EAAAH,EACA90B,OAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACA80B,MAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACAzB,EAAA2B,EAAAZ,GAEAO,EAAA,KACApB,EAAAzzB,EAAA+0B,GACAhB,EAAAzwC,GAEA,QAAAyuC,KACA,GAAAjuC,GAAAP,MAAA4tC,QAAAroF,OAAA,CAEA,OADA8rF,GAAA9wC,GAAAP,MAAA8G,eACArjD,EAAA,EAAAc,EAAA8sF,EAAA9rF,OAA6C9B,EAAAc,IAAOd,QACpDutF,GAAAK,EAAA5tF,GAAAilD,WAEA,QAAAA,KAAAsoC,GACA,WAAAF,KAGAvwC,GAAAorC,UAAAyF,GAAAjxC,GAAAyxC,EAAA,MACAt1B,EAAAnc,GAAA2tC,EAAA4B,GAAAvvC,GAAA4tC,EAAA+B,GACAnB,IACA8B,EAAA1wC,GAlEA,GAA4EgxC,GAA5EnC,EAAAxrF,KAAA28C,EAAAC,EAAAY,GAAAguC,EAAAjyD,WAAAq0D,KAA4EO,EAAA,EAAAK,EAAA,SAAArxC,GAAAP,MAAA8G,eAAA,GAAA4B,WAAAwoC,EAAA,YAAAU,EAAAT,EAAA,WAAAS,EAAAR,KAAA90B,EAAA/b,GAAAiG,OAAAooC,GAAAD,EAAAtoC,GAAAuoC,EAC5EqC,KACAX,EAAAvwC,GACAuc,EAAAnc,GAAA2tC,EAAA,MAAA3tC,GAAA4tC,EAAAkD,GAkEA,QAAArB,KACA,GAAA7vC,GAAAC,EAAAY,GAAAx9C,KAAAu5B,UACAk1D,GAAAxnD,aAAAwnD,IAAyDhB,GAAAltF,KAAAP,MACzD0uF,EAAA/B,EAAAM,EAAAjoB,GAAA7nB,GAAAitC,MAAApqF,OAAAktF,EAAAvwC,IACA8xC,EAAAhkE,WAAA,WACAgkE,EAAA,KACApB,EAAA1wC,IACO,IACPO,IACA0vC,EAAApvD,KAAA0qB,IAAA,OAAAymC,MAAAnrE,EAAA63B,GACAyxC,EAAAG,EAAAyB,GACAtB,EAAAzwC,GAEA,QAAA8vC,KACA,GAAAhrF,GAAA07C,GAAAitC,MAAApqF,MAAAq7C,EAAA7d,KAAAouB,IAAApoC,EAAA63B,GAAA7d,KAAAs6C,GACAiV,GAAA/sF,KAAAyB,EAAAkrF,EAAAlrF,GAAA07C,GAAAP,MAAAgyC,SAAApxD,KAAAwU,KAAAqJ,GAAA,EAAA7d,KAAAyU,MAAAoJ,GAAA,GA3QA,GAIKqzC,GAAAzB,EAAAjoB,EAAAypB,EAAAP,EAAAp2B,EAAA+G,EAAAjH,EAAAkH,EAJLt7C,GACAm3B,EAAA,EACAgK,EAAA,EACAtJ,EAAA,GACKzxC,GAAA,SAAAijF,EAAAgC,GAAA5K,EAAA,IAAAkJ,EAAA,EAAAzC,EAAA,iBAAA6C,EAAA,iBAAAC,EAAA,eAAA7C,EAAA,kBAAA/tC,EAAAW,EAAA8uC,EAAA,6BAyQL,OAxQAE,MACAA,GAAA,WAAArH,KAAAyJ,GAAA,WACA,OAAAxxC,GAAAP,MAAAkyC,QAAA3xC,GAAAP,MAAAmyC,UAAA,QACO,yBAAA7J,KAAAyJ,GAAA,WACP,MAAAxxC,IAAAP,MAAAoyC,YACO,eAAAL,GAAA,WACP,OAAAxxC,GAAAP,MAAAqyC,QACO,wBAKP5C,EAAAzvC,MAAA,SAAA56C,GACAA,EAAA22C,KAAA,WACA,GAAAgE,GAAAC,EAAAY,GAAAx9C,KAAAu5B,WAAA21D,EAAA1rE,CACA2rE,IACAhyC,GAAAiG,OAAApjD,MAAAwD,aAAAm1C,KAAA,wBACAn1B,EAAAxjB,KAAAgtF,YACAryC,EAAA,EACAgK,EAAA,EACAtJ,EAAA,GAEA6xC,EAAAvwC,KACW0mC,MAAA,uBACX,GAAAlkB,GAAAv1D,EAAA,GAAAw1D,EAAAx1D,EAAA,GAAA0uD,EAAA20B,IAAA,GAAA9tB,EAAA,EAAA5G,EAAA00B,IAAA,GAAA7tB,EAAA,EAAA/+D,EAAA88C,GAAA0uC,kBAAAvzB,EAAA90C,EAAAm3B,GAAAn3B,EAAA63B,GAAAkd,EAAA/0C,EAAAmhC,GAAAnhC,EAAA63B,EAAA8jB,EAAA37C,EAAA63B,KAAAid,EAAA42B,EAAAv0C,GAAAu0C,EAAA7zC,GAAAkd,EAAA22B,EAAAvqC,GAAAuqC,EAAA7zC,EAAA8jB,EAAA+vB,EAAA7zC,GACA,iBAAA2P,GACA,GAAA1qD,GAAAD,EAAA2qD,GAAA3P,EAAA8jB,EAAA7+D,EAAA,EACAN,MAAAgtF,UAAAxpE,GACAm3B,EAAA2d,EAAAh4D,EAAA,GAAA+6C,EACAsJ,EAAA4T,EAAAj4D,EAAA,GAAA+6C,EACAA,KAEA+xC,EAAAzwC,MAEWhE,KAAA,4BACX00C,EAAA1wC,KACWhE,KAAA,sBACX00C,EAAA1wC,MAGA38C,KAAAgtF,UAAAxpE,EACA0pE,EAAAvwC,GACAywC,EAAAzwC,GACA0wC,EAAA1wC,OAIA0vC,EAAA3mB,UAAA,SAAA5jE,GACA,MAAAy3B,WAAAp3B,QACAqhB,GACAm3B,GAAA74C,EAAA,GACA6iD,GAAA7iD,EAAA,GACAu5C,EAAA73B,EAAA63B,GAEAkgC,IACA8Q,IAPA7oE,EAAAm3B,EAAAn3B,EAAAmhC,IASA0nC,EAAArgC,MAAA,SAAAlqD,GACA,MAAAy3B,WAAAp3B,QACAqhB,GACAm3B,EAAAn3B,EAAAm3B,EACAgK,EAAAnhC,EAAAmhC,EACAtJ,EAAA,MAEAuxC,GAAA9qF,GACAy5E,IACA8Q,GARA7oE,EAAA63B,GAUAgxC,EAAAQ,YAAA,SAAA/qF,GACA,MAAAy3B,WAAAp3B,QACA0qF,EAAA,MAAA/qF,EAAA+sF,KAAA/sF,EAAA,IAAAA,EAAA,IACAuqF,GAFAQ,GAIAR,EAAArnB,OAAA,SAAAljE,GACA,MAAAy3B,WAAAp3B,QACA6iE,EAAAljE,OAAA,IAAAA,EAAA,IACAuqF,GAFArnB,GAIAqnB,EAAAziF,KAAA,SAAA9H,GACA,MAAAy3B,WAAAp3B,QACAyH,EAAA9H,OAAA,IAAAA,EAAA,IACAuqF,GAFAziF,GAIAyiF,EAAApI,SAAA,SAAAniF,GACA,MAAAy3B,WAAAp3B,QACA8hF,GAAAniF,EACAuqF,GAFApI,GAIAoI,EAAA1xC,EAAA,SAAAkC,GACA,MAAAtjB,WAAAp3B,QACA08D,EAAAhiB,EACAib,EAAAjb,EAAA9mB,OACAvS,GACAm3B,EAAA,EACAgK,EAAA,EACAtJ,EAAA,GAEAgxC,GARAxtB,GAUAwtB,EAAA1nC,EAAA,SAAA9H,GACA,MAAAtjB,WAAAp3B,QACA28D,EAAAjiB,EACA+a,EAAA/a,EAAA9mB,OACAvS,GACAm3B,EAAA,EACAgK,EAAA,EACAtJ,EAAA,GAEAgxC,GARAvtB,GAoKA3hB,GAAAuN,OAAA2hC,EAAAzvC,EAAA,MAEA,IAAA+xC,IAAApC,GAAAsC,IAAA,EAAAxhE,IACA8vB,IAAAqL,MAAAnC,GAEAA,GAAA9kD,UAAAk0B,SAAA,WACA,MAAAz1B,MAAAmnD,MAAA,IAEAhK,GAAAoL,IAAAjC,EAIA,IAAA8oC,IAAA9oC,GAAA/kD,UAAA,GAAA8kD,GACA+oC,IAAAC,SAAA,SAAAh0C,GAEA,MADAA,GAAA7d,KAAA0qB,IAAA,GAAA3uB,UAAAp3B,OAAAk5C,EAAA,GACA,GAAAiL,IAAAtmD,KAAAumD,EAAAvmD,KAAA0B,EAAA1B,KAAAM,EAAA+6C,IAEA+zC,GAAAE,OAAA,SAAAj0C,GAEA,MADAA,GAAA7d,KAAA0qB,IAAA,GAAA3uB,UAAAp3B,OAAAk5C,EAAA,GACA,GAAAiL,IAAAtmD,KAAAumD,EAAAvmD,KAAA0B,EAAA25C,EAAAr7C,KAAAM,IAEA8uF,GAAAjoC,IAAA,WACA,MAAAT,IAAA1mD,KAAAumD,EAAAvmD,KAAA0B,EAAA1B,KAAAM,IAqBA68C,GAAAs1B,IAAA1rB,EAIA,IAAAwoC,IAAAxoC,GAAAxlD,UAAA,GAAA8kD,GACAkpC,IAAAF,SAAA,SAAAh0C,GACA,UAAA0L,IAAA/mD,KAAAumD,EAAAvmD,KAAAS,EAAA+8B,KAAAkT,IAAA,IAAA1wC,KAAAM,EAAAkvF,IAAAj2D,UAAAp3B,OAAAk5C,EAAA,MAEAk0C,GAAAD,OAAA,SAAAj0C,GACA,UAAA0L,IAAA/mD,KAAAumD,EAAAvmD,KAAAS,EAAA+8B,KAAA8S,IAAA,EAAAtwC,KAAAM,EAAAkvF,IAAAj2D,UAAAp3B,OAAAk5C,EAAA,MAEAk0C,GAAApoC,IAAA,WACA,MAAAE,IAAArnD,KAAAumD,EAAAvmD,KAAAS,EAAAT,KAAAM,GAAA6mD,OAOAhK,GAAAg2B,IAAAnsB,EAIA,IAAAwoC,IAAA,GACA9nC,GAAA,OAAAC,GAAA,EAAAC,GAAA,QACA6nC,GAAAzoC,GAAAzlD,UAAA,GAAA8kD,GACAopC,IAAAJ,SAAA,SAAAh0C,GACA,UAAA2L,IAAAxpB,KAAAkT,IAAA,IAAA1wC,KAAAM,EAAAkvF,IAAAj2D,UAAAp3B,OAAAk5C,EAAA,IAAAr7C,KAAAu6C,EAAAv6C,KAAAw6C,IAEAi1C,GAAAH,OAAA,SAAAj0C,GACA,UAAA2L,IAAAxpB,KAAA8S,IAAA,EAAAtwC,KAAAM,EAAAkvF,IAAAj2D,UAAAp3B,OAAAk5C,EAAA,IAAAr7C,KAAAu6C,EAAAv6C,KAAAw6C,IAEAi1C,GAAAtoC,IAAA,WACA,MAAAK,IAAAxnD,KAAAM,EAAAN,KAAAu6C,EAAAv6C,KAAAw6C,IAqBA2C,GAAAgK,IAAAL,EAUA,IAAA4oC,IAAA5oC,GAAAvlD,UAAA,GAAA8kD,GACAqpC,IAAAL,SAAA,SAAAh0C,GACAA,EAAA7d,KAAA0qB,IAAA,GAAA3uB,UAAAp3B,OAAAk5C,EAAA,EACA,IAAA+L,GAAApnD,KAAAonD,EAAAplD,EAAAhC,KAAAgC,EAAAw4C,EAAAx6C,KAAAw6C,EAAAn6C,EAAA,EACA,OAAA+mD,IAAAplD,GAAAw4C,GACA4M,KAAA/mD,IAAA+mD,EAAA/mD,GACA2B,KAAA3B,IAAA2B,EAAA3B,GACAm6C,KAAAn6C,IAAAm6C,EAAAn6C,GACA,GAAAymD,IAAAtpB,KAAAkT,IAAA,IAAA0W,EAAA/L,GAAA7d,KAAAkT,IAAA,IAAA1uC,EAAAq5C,GAAA7d,KAAAkT,IAAA,IAAA8J,EAAAa,KAJA,GAAAyL,IAAAzmD,QAMAqvF,GAAAJ,OAAA,SAAAj0C,GAEA,MADAA,GAAA7d,KAAA0qB,IAAA,GAAA3uB,UAAAp3B,OAAAk5C,EAAA,GACA,GAAAyL,IAAAzL,EAAAr7C,KAAAonD,EAAA/L,EAAAr7C,KAAAgC,EAAAq5C,EAAAr7C,KAAAw6C,IAEAk1C,GAAAnnC,IAAA,WACA,MAAA9B,IAAAzmD,KAAAonD,EAAApnD,KAAAgC,EAAAhC,KAAAw6C,IAEAk1C,GAAAj6D,SAAA,WACA,UAAA4yB,GAAAroD,KAAAonD,GAAAiB,GAAAroD,KAAAgC,GAAAqmD,GAAAroD,KAAAw6C,GAmEA,IAAAkO,IAAAvL,GAAAn5C,KACA2rF,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAC,KAAA,IACAC,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAC,MAAA,MACAC,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,QACAC,cAAA,QACAC,IAAA,SACAC,UAAA,SACAC,UAAA,QACAC,YAAA,QACAC,OAAA,SACAC,WAAA,SACAC,SAAA,QACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,KAAA,SACAC,YAAA,MACAC,UAAA,QACAjwB,IAAA,SACAkwB,KAAA,MACAC,QAAA,SACAC,OAAA,SACAC,UAAA,QACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,UAEAnwC,IAAA7+C,QAAA,SAAAjD,EAAAlD,GACAglD,GAAAxkD,IAAA0C,EAAAuhD,GAAAzkD,MAOAy5C,GAAA27C,QAAAlwC,GACAzL,GAAAmM,IAAAT,GAAA1M,GA4FAgB,GAAA47C,IAAA,SAAAC,EAAAhwC,GAEA,QAAA+vC,GAAAhwC,EAAAg+B,EAAAjtD,GACAP,UAAAp3B,OAAA,IAAA23B,EAAAitD,IAAA,KACA,IAAAz9B,GAAAL,GAAAF,EAAAC,EAAA,MAAA+9B,EAAAj+B,EAAAmwC,EAAAlS,GAAAjtD,EAIA,OAHAwvB,GAAAy9B,IAAA,SAAAjlF,GACA,MAAAy3B,WAAAp3B,OAAAmnD,EAAAR,SAAA,OAAAi+B,EAAAjlF,GAAAgnD,EAAAmwC,EAAAn3F,IAAAilF,GAEAz9B,EAEA,QAAAR,GAAAM,GACA,MAAA2vC,GAAAlqC,MAAAzF,EAAAwB,cAEA,QAAAquC,GAAAx0C,GACA,gBAAA2E,GACA,MAAA2vC,GAAAlqC,MAAAzF,EAAAwB,aAAAnG,IA+EA,QAAAy0C,GAAAnS,GACA,MAAAA,GAAA/iF,IAAAm1F,GAAAhnF,KAAA6mF,GAEA,QAAAG,GAAAjQ,GACA,MAAAkQ,GAAAlwF,KAAAggF,GAAA,IAAAA,EAAAzmF,QAAA,gBAAAymF,EAjGA,GAAAkQ,GAAA,GAAA9pF,QAAA,KAAA0pF,EAAA,OAAAK,EAAAL,EAAAtqC,WAAA,EAmGA,OAlFAqqC,GAAAlqC,MAAA,SAAAq6B,EAAAzkC,GACA,GAAA5jD,EACA,OAAAk4F,GAAAO,UAAApQ,EAAA,SAAAnC,EAAA1mF,GACA,GAAAQ,EAAA,MAAAA,GAAAkmF,EAAA1mF,EAAA,EACA,IAAAk6C,GAAA,GAAAn6B,UAAA,eAA2C2mE,EAAA/iF,IAAA,SAAArD,EAAAN,GAC3C,MAAA2kF,MAAAuU,UAAA54F,GAAA,OAAAN,EAAA,MACS8R,KAAA,SACTtR,GAAA4jD,EAAA,SAAAsiC,EAAA1mF,GACA,MAAAokD,GAAAlK,EAAAwsC,GAAA1mF,IACSk6C,KAGTw+C,EAAAO,UAAA,SAAApQ,EAAAzkC,GAEA,QAAA+0C,KACA,GAAAnnC,GAAAkY,EAAA,MAAAkvB,EACA,IAAAC,EAAA,MAAAA,IAAA,EAAAC,CACA,IAAAh4C,GAAA0Q,CACA,SAAA62B,EAAAx6B,WAAA/M,GAAA,CAEA,IADA,GAAAthD,GAAAshD,EACAthD,IAAAkqE,GACA,QAAA2e,EAAAx6B,WAAAruD,GAAA,CACA,QAAA6oF,EAAAx6B,WAAAruD,EAAA,WACAA,EAGAgyD,EAAAhyD,EAAA,CACA,IAAAI,GAAAyoF,EAAAx6B,WAAAruD,EAAA,EAOA,OANA,MAAAI,GACAi5F,GAAA,EACA,KAAAxQ,EAAAx6B,WAAAruD,EAAA,MAAAgyD,GACW,KAAA5xD,IACXi5F,GAAA,GAEAxQ,EAAAtzD,MAAA+rB,EAAA,EAAAthD,GAAAoC,QAAA,WAEA,KAAA4vD,EAAAkY,GAAA,CACA,GAAA9pE,GAAAyoF,EAAAx6B,WAAA2D,KAAAhX,EAAA,CACA,SAAA56C,EAAAi5F,GAAA,MAAmC,SAAAj5F,EACnCi5F,GAAA,EACA,KAAAxQ,EAAAx6B,WAAA2D,WAAAhX,OACW,IAAA56C,IAAA44F,EAAA,QACX,OAAAnQ,GAAAtzD,MAAA+rB,EAAA0Q,EAAAhX,GAEA,MAAA6tC,GAAAtzD,MAAA+rB,GAEA,IAjCA,GAA4BqJ,GAAA0uC,EAA5BC,KAAkBF,KAAUG,KAAArvB,EAAA2e,EAAA/mF,OAAAkwD,EAAA,EAAAlxD,EAAA,GAiC5B6pD,EAAAwuC,OAAAC,GAAA,CAEA,IADA,GAAAl/C,MACAyQ,IAAA2uC,GAAA3uC,IAAAyuC,GACAl/C,EAAA7wC,KAAAshD,GACAA,EAAAwuC,GAEA/0C,IAAA,OAAAlK,EAAAkK,EAAAlK,EAAAp5C,OACAy4F,EAAAlwF,KAAA6wC,GAEA,MAAAq/C,IAEAb,EAAAzwC,OAAA,SAAAsxC,GACA,GAAAj0F,MAAAoc,QAAA63E,EAAA,UAAAb,GAAAc,WAAAD,EACA,IAAAE,GAAA,GAAA59C,GAAA69C,IAQA,OAPAH,GAAA/vF,QAAA,SAAAk9E,GACA,OAAAiT,KAAAjT,GACA+S,EAAAzxF,IAAA2xF,IACAD,EAAArwF,KAAAowF,EAAA11F,IAAA41F,OAIAD,EAAA/1F,IAAAm1F,GAAAhnF,KAAA6mF,IAAAh4D,OAAA44D,EAAA51F,IAAA,SAAA+iF,GACA,MAAAgT,GAAA/1F,IAAA,SAAAg2F,GACA,MAAAb,GAAApS,EAAAiT,MACS7nF,KAAA6mF,MACF7mF,KAAA,OAEP4mF,EAAAc,WAAA,SAAAD,GACA,MAAAA,GAAA51F,IAAAk1F,GAAA/mF,KAAA,OAQA4mF,GAEA57C,GAAA88C,IAAA98C,GAAA47C,IAAA,gBACA57C,GAAA+8C,IAAA/8C,GAAA47C,IAAA,iCACA,IAAA7tC,IAAAD,GAAAE,GAAAC,GAAAC,GAAArrD,KAAAq8C,EAAAr8C,KAAA,oCAAA85B,GACArP,WAAAqP,EAAA,IAEAqjB,IAAA4N,MAAA,WACAF,GAAAxmD,MAAArE,KAAAu5B,YAiCA4jB,GAAA4N,MAAA7jB,MAAA,WACAqkB,KACAC,MA0BArO,GAAA/E,MAAA,SAAAuC,EAAAx5C,GACA,MAAAA,GAAAq8B,KAAA4a,MAAAuC,GAAAx5C,EAAAq8B,KAAA0qB,IAAA,GAAA/mD,OAAAq8B,KAAA4a,MAAAuC,GAEA,IAAAw/C,KAAA,oEAAAn2F,IAAA8nD,GACA3O,IAAAyQ,aAAA,SAAAlqD,EAAA+5B,GACA,GAAAp9B,GAAA,CAOA,QANAqD,QACAA,EAAA,IAAAA,IAAA,GACA+5B,IAAA/5B,EAAAy5C,GAAA/E,MAAA10C,EAAAioD,GAAAjoD,EAAA+5B,KACAp9B,EAAA,EAAAm9B,KAAAyU,MAAA,MAAAzU,KAAAouB,IAAAloD,GAAA85B,KAAAquB,MACAxrD,EAAAm9B,KAAA8S,KAAA,GAAA9S,KAAAkT,IAAA,KAAAlT,KAAAyU,OAAA5xC,EAAA,SAEA85F,GAAA,EAAA95F,EAAA,GAwGA,IAAAysD,IAAA,yEACAQ,GAAAnQ,GAAAn5C,KACAw2C,EAAA,SAAAG,GACA,MAAAA,GAAAllB,SAAA,IAEAh1B,EAAA,SAAAk6C,GACA,MAAAn4C,QAAA43F,aAAAz/C,IAEA95C,EAAA,SAAA85C,GACA,MAAAA,GAAAllB,SAAA,IAEAklB,EAAA,SAAAA,GACA,MAAAA,GAAAllB,SAAA,KAEAi7B,EAAA,SAAA/V,GACA,MAAAA,GAAAllB,SAAA,IAAA0Y,eAEAnsC,EAAA,SAAA24C,EAAAl5C,GACA,MAAAk5C,GAAA0/C,YAAA54F,IAEAG,EAAA,SAAA+4C,EAAAl5C,GACA,MAAAk5C,GAAA2/C,cAAA74F,IAEAgjD,EAAA,SAAA9J,EAAAl5C,GACA,MAAAk5C,GAAA4/C,QAAA94F,IAEA2lD,EAAA,SAAAzM,EAAAl5C,GACA,OAAAk5C,EAAAwC,GAAA/E,MAAAuC,EAAAgR,GAAAhR,EAAAl5C,KAAA84F,QAAA/8D,KAAA8S,IAAA,EAAA9S,KAAAkT,IAAA,GAAAib,GAAAhR,GAAA,SAAAl5C,SAMA6wD,GAAAnV,GAAApX,QAA4BooB,GAAAnd,IAI5B6c,IAAAtsD,WACA4wD,QAAA,WACA,MAAAnyD,MAAA8B,EAAA04F,cAEAjrC,OAAA,WACA,MAAAvvD,MAAA8B,EAAA24F,aAEA5nC,YAAA,WACA,MAAA7yD,MAAA8B,EAAA44F,kBAEAtoC,SAAA,WACA,MAAApyD,MAAA8B,EAAA64F,eAEAnoC,gBAAA,WACA,MAAAxyD,MAAA8B,EAAA84F,sBAEAnoC,WAAA,WACA,MAAAzyD,MAAA8B,EAAA+4F,iBAEA7oC,SAAA,WACA,MAAAhyD,MAAA8B,EAAAg5F,eAEApoC,WAAA,WACA,MAAA1yD,MAAA8B,EAAAi5F,iBAEAC,QAAA,WACA,MAAAh7F,MAAA8B,EAAAk5F,WAEA9mC,kBAAA,WACA,UAEAlqB,QAAA,WACA,MAAAhqC,MAAA8B,EAAAkoC,WAEAixD,QAAA,WACAC,GAAAC,WAAA92F,MAAArE,KAAA8B,EAAAy3B,YAEA6hE,OAAA,WACAF,GAAAG,UAAAh3F,MAAArE,KAAA8B,EAAAy3B,YAEA81B,YAAA,WACA6rC,GAAAI,eAAAj3F,MAAArE,KAAA8B,EAAAy3B,YAEAk2B,SAAA,WACAyrC,GAAAK,YAAAl3F,MAAArE,KAAA8B,EAAAy3B,YAEAiiE,gBAAA,WACAN,GAAAO,mBAAAp3F,MAAArE,KAAA8B,EAAAy3B,YAEAmiE,WAAA,WACAR,GAAAS,cAAAt3F,MAAArE,KAAA8B,EAAAy3B,YAEAqiE,SAAA,WACAV,GAAAW,YAAAx3F,MAAArE,KAAA8B,EAAAy3B,YAEAuiE,WAAA,WACAZ,GAAAa,cAAA13F,MAAArE,KAAA8B,EAAAy3B,YAEAyiE,QAAA,WACAd,GAAAc,QAAA33F,MAAArE,KAAA8B,EAAAy3B,YAGA,IAAA2hE,IAAAlqD,KAAAzvC,SA6DA+wD,IAAAoyB,KAAA32B,GAAA,SAAAC,GAGA,MAFAA,GAAAsE,GAAA2pC,IAAAjuC,GACAA,EAAA4tC,SAAA,KACA5tC,GACG,SAAAA,EAAAloD,GACHkoD,EAAAqB,YAAArB,EAAA6E,cAAA/sD,IACG,SAAAkoD,GACH,MAAAA,GAAA6E,gBAEAP,GAAA4pC,MAAA5pC,GAAAoyB,KAAAhtC,MACA4a,GAAA4pC,MAAA5tC,IAAAgE,GAAAoyB,KAAAp2B,IAAA5W,MACA4a,GAAA2pC,IAAAluC,GAAA,SAAAC,GACA,GAAAiuC,GAAA,GAAA9tC,IAAA,MAEA,OADA8tC,GAAA5sC,YAAArB,EAAA6E,cAAA7E,EAAAgE,WAAAhE,EAAAmE,WACA8pC,GACG,SAAAjuC,EAAAloD,GACHkoD,EAAAitC,QAAAjtC,EAAAmE,UAAArsD,IACG,SAAAkoD,GACH,MAAAA,GAAAmE,UAAA,IAEAG,GAAAlB,KAAAkB,GAAA2pC,IAAAvkD,MACA4a,GAAAlB,KAAA9C,IAAAgE,GAAA2pC,IAAA3tC,IAAA5W,MACA4a,GAAAC,UAAA,SAAAvE,GACA,GAAA02B,GAAApyB,GAAAoyB,KAAA12B,EACA,OAAAxwB,MAAAyU,OAAA+b,EAAA02B,EAAA,KAAA12B,EAAAkG,oBAAAwwB,EAAAxwB,sBAAA,SAEA,wEAAArqD,QAAA,SAAAoyF,EAAA57F,GACAA,EAAA,EAAAA,CACA,IAAAwkF,GAAAvyB,GAAA2pC,GAAAluC,GAAA,SAAAC,GAEA,OADAA,EAAAsE,GAAA2pC,IAAAjuC,IAAAitC,QAAAjtC,EAAAmE,WAAAnE,EAAAuB,SAAAlvD,GAAA,GACA2tD,GACK,SAAAA,EAAAloD,GACLkoD,EAAAitC,QAAAjtC,EAAAmE,UAAA,EAAA30B,KAAAyU,MAAAnsC,KACK,SAAAkoD,GACL,GAAAiuC,GAAA3pC,GAAAoyB,KAAA12B,GAAAuB,QACA,OAAA/xB,MAAAyU,OAAAqgB,GAAAC,UAAAvE,IAAAiuC,EAAA57F,GAAA,OAAA47F,IAAA57F,IAEAiyD,IAAA2pC,EAAA,KAAApX,EAAAntC,MACA4a,GAAA2pC,EAAA,KAAA3tC,IAAAu2B,EAAAv2B,IAAA5W,MACA4a,GAAA2pC,EAAA,mBAAAjuC,GACA,GAAAiuC,GAAA3pC,GAAAoyB,KAAA12B,GAAAuB,QACA,OAAA/xB,MAAAyU,OAAAqgB,GAAAC,UAAAvE,IAAAiuC,EAAA57F,GAAA,SAGAiyD,GAAA6pC,KAAA7pC,GAAA8pC,OACA9pC,GAAA+pC,MAAA/pC,GAAA8pC,OAAA1kD,MACA4a,GAAA+pC,MAAA/tC,IAAAgE,GAAA8pC,OAAA9tC,IAAA5W,MACA4a,GAAAgqC,WAAAhqC,GAAAK,YAyNA,IAAAhE,KACA4tC,IAAA,GACAz6F,EAAA,IACA06F,EAAA,KACGxoC,GAAA,UAAAM,GAAA,IAkGHnX,IAAA+O,OAAA,SAAAA,GACA,OACAuwC,aAAAxwC,GAAAC,GACAwwC,WAAAluC,GAAAtC,IAGA,IAAAywC,IAAAx/C,GAAA+O,QACAE,QAAA,IACAE,UAAA,IACAE,UAAA,GACAE,UAAA,QACAoE,SAAA,iBACA9C,KAAA,WACAjoB,KAAA,WACAmrB,SAAA,WACAE,MAAA,wEACAE,WAAA,2CACAE,QAAA,+GACAE,aAAA,0EAEAvU,IAAAmL,OAAAq0C,GAAAF,aACAt/C,GAAAy/C,OAEApoC,GAAAjzD,WACAG,EAAA,EACAspD,EAAA,EACA5mD,IAAA,SAAAugD,GACA8P,GAAA9P,EAAA3kD,KAAAgrD,EAAA6xC,IACApoC,GAAAooC,GAAAn7F,EAAA1B,KAAA0B,EAAA1B,MACAA,KAAA0B,EAAA1B,KAAAgrD,GAAA6xC,GAAA7xC,EAA2ChrD,KAAA0B,EAAAm7F,GAAA7xC,GAE3CuR,MAAA,WACAv8D,KAAA0B,EAAA1B,KAAAgrD,EAAA,GAEAhhB,QAAA,WACA,MAAAhqC,MAAA0B,GAGA,IAAAm7F,IAAA,GAAAroC,GAKArX,IAAAy/C,IAAA76B,OAAA,SAAA1gE,EAAA47C,GACA57C,GAAAy7F,GAAAt7F,eAAAH,EAAA8iB,MACA24E,GAAAz7F,EAAA8iB,MAAA9iB,EAAA47C,GAEA2X,GAAAvzD,EAAA47C,GAQA,IAAA6/C,KACAC,QAAA,SAAAC,EAAA//C,GACA2X,GAAAooC,EAAAnoC,SAAA5X,IAEAggD,kBAAA,SAAA57F,EAAA47C,GAEA,IADA,GAAAigD,GAAA77F,EAAA67F,SAAA78F,GAAA,EAAAc,EAAA+7F,EAAA/6F,SACA9B,EAAAc,GAAAyzD,GAAAsoC,EAAA78F,GAAAw0D,SAAA5X,KAGA6X,IACAqoC,OAAA,SAAA97F,EAAA47C,GACAA,EAAA+d,UAEAoiC,MAAA,SAAA/7F,EAAA47C,GACA57C,IAAA2zD,YACA/X,EAAA6G,MAAAziD,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAg8F,WAAA,SAAAh8F,EAAA47C,GAEA,IADA,GAAA+X,GAAA3zD,EAAA2zD,YAAA30D,GAAA,EAAAc,EAAA6zD,EAAA7yD,SACA9B,EAAAc,GAAAE,EAAA2zD,EAAA30D,GAAA48C,EAAA6G,MAAAziD,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAi8F,WAAA,SAAAj8F,EAAA47C,GACA8X,GAAA1zD,EAAA2zD,YAAA/X,EAAA,IAEAsgD,gBAAA,SAAAl8F,EAAA47C,GAEA,IADA,GAAA+X,GAAA3zD,EAAA2zD,YAAA30D,GAAA,EAAAc,EAAA6zD,EAAA7yD,SACA9B,EAAAc,GAAA4zD,GAAAC,EAAA30D,GAAA48C,EAAA,IAEAugD,QAAA,SAAAn8F,EAAA47C,GACAoY,GAAAh0D,EAAA2zD,YAAA/X,IAEAwgD,aAAA,SAAAp8F,EAAA47C,GAEA,IADA,GAAA+X,GAAA3zD,EAAA2zD,YAAA30D,GAAA,EAAAc,EAAA6zD,EAAA7yD,SACA9B,EAAAc,GAAAk0D,GAAAL,EAAA30D,GAAA48C,IAEAygD,mBAAA,SAAAr8F,EAAA47C,GAEA,IADA,GAAA0gD,GAAAt8F,EAAAs8F,WAAAt9F,GAAA,EAAAc,EAAAw8F,EAAAx7F,SACA9B,EAAAc,GAAAyzD,GAAA+oC,EAAAt9F,GAAA48C,IAeAE,IAAAy/C,IAAA7a,KAAA,SAAA1gF,GAGA,MAFAu8F,IAAA,EACAzgD,GAAAy/C,IAAA76B,OAAA1gE,EAAAm1D,IACAonC,GAEA,IAAAA,IAAAvnC,GAAA,GAAA7B,IACAgC,IACAwE,OAAA,WACA4iC,IAAA,EAAAl4C,IAEA5B,MAAAtH,EACA2Y,UAAA3Y,EACA4Y,QAAA5Y,EACA8Y,aAAA,WACAe,GAAAkG,QACA/F,GAAArB,UAAAK,IAEAD,WAAA,WACA,GAAAwsB,GAAA,EAAA1rB,EACAunC,KAAA7b,EAAA,IAAAr8B,GAAAq8B,IACAvrB,GAAArB,UAAAqB,GAAApB,QAAAoB,GAAA1S,MAAAtH,GAmDAW,IAAAy/C,IAAAiB,OAAA,WAsBA,QAAA/5C,GAAA4R,EAAAC,GACAmoC,EAAAp0F,KAAAguC,GAAAme,EAAAH,EAAA6F,EAAA7F,IACAC,EAAA0F,MAAA1F,GACAA,EAAA6F,MAAA7F,GAEA,QAAAkK,GAAAnK,EAAAC,GACA,GAAAl0D,GAAAg1D,IAAAf,EAAAnO,GAAAoO,EAAApO,IACA,IAAA8R,EAAA,CACA,GAAA0kC,GAAAnnC,GAAAyC,EAAA53D,GAAAu8F,GAAAD,EAAA,IAAAA,EAAA,MAAAE,EAAArnC,GAAAonC,EAAAD,EACA/mC,IAAAinC,GACAA,EAAAhnC,GAAAgnC,EACA,IAAAroC,GAAAF,EAAAwoC,EAAAx8F,EAAAk0D,EAAA,OAAAuoC,EAAAF,EAAA,GAAAl2C,GAAArmD,EAAA+6D,EAAA1Q,GAAA6J,GAAA,GACA,IAAA6G,GAAA/6D,EAAAw8F,EAAAC,KAAAz8F,EAAAg0D,GAAA,CACA,GAAA0oC,GAAAH,EAAA,GAAAl2C,EACAq2C,GAAA5iC,MAAA4iC,OACS,IAAAD,KAAA,aAAA1hC,GAAA/6D,EAAAw8F,EAAAC,KAAAz8F,EAAAg0D,GAAA,CACT,GAAA0oC,IAAAH,EAAA,GAAAl2C,EACAq2C,GAAA/iC,MAAA+iC,OAEAzoC,GAAA0F,MAAA1F,GACAA,EAAA6F,MAAA7F,EAEA8G,GACA/G,EAAAwoC,EACA33B,EAAA1Q,EAAAH,GAAA6Q,EAAA1Q,EAAA0F,OAAA7F,GAEA6Q,EAAA7Q,EAAA6F,GAAAgL,EAAA1Q,EAAA0F,KAAA1F,EAAAH,GAGA6F,GAAA1F,GACAH,EAAAG,MAAAH,GACAA,EAAA6F,MAAA7F,IAEAA,EAAAwoC,EACA33B,EAAA1Q,EAAAH,GAAA6Q,EAAA1Q,EAAA0F,OAAA7F,GAEA6Q,EAAA7Q,EAAA6F,GAAAgL,EAAA1Q,EAAA0F,KAAA1F,EAAAH,OAKA5R,GAAA4R,EAAAC,EAEA0D,GAAA53D,EAAAy8F,EAAAxoC,EAEA,QAAAP,KACAqjB,EAAA10B,MAAA+b,EAEA,QAAAzK,KACA1d,EAAA,GAAAme,EAAAne,EAAA,GAAA6jB,EACAid,EAAA10B,QACAuV,EAAA,KAEA,QAAAiK,GAAA5N,EAAAC,GACA,GAAA0D,EAAA,CACA,GAAAzD,GAAAF,EAAAwoC,CACAG,IAAAtyC,GAAA6J,GAAA,IAAAA,KAAA,YAAAA,MACO0oC,GAAA5oC,EAAA6oC,EAAA5oC,CACPa,IAAA1S,MAAA4R,EAAAC,GACAkK,EAAAnK,EAAAC,GAEA,QAAA0E,KACA7D,GAAArB,YAEA,QAAAmF,KACAgJ,EAAAg7B,EAAAC,GACA/nC,GAAApB,UACArJ,GAAAsyC,GAAAjnC,KAAAvB,IAAA0F,EAAA,MACA7jB,EAAA,GAAAme,EAAAne,EAAA,GAAA6jB,EACAlC,EAAA,KAEA,QAAAkN,GAAA1Q,EAAA0F,GACA,OAAAA,GAAA1F,GAAA,EAAA0F,EAAA,IAAAA,EAEA,QAAAijC,GAAAjkD,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAEA,QAAAikD,GAAA9jD,EAAAjD,GACA,MAAAA,GAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAiD,MAAAjD,EAAA,GAAAiD,EAAAjD,EAAA,IAAAA,EAAA,GAAAiD,EAnGA,GAAAkb,GAAAwF,EAAAE,EAAAC,EAAA0iC,EAAAI,EAAAC,EAAAllC,EAAAglC,EAAAP,EAAApmD,EACA8gC,GACA10B,QACAqR,YACAC,UACAE,aAAA,WACAkjB,EAAA10B,MAAAwf,EACAkV,EAAArjB,UAAAkF,EACAme,EAAApjB,QAAAkF,EACA+jC,EAAA,EACA7nC,GAAAlB,gBAEAC,WAAA,WACAiB,GAAAjB,aACAijB,EAAA10B,QACA00B,EAAArjB,YACAqjB,EAAApjB,UACAiB,GAAA,GAAAR,IAAA0F,EAAA,KAAAF,IAAAG,EAAA,KAAsE6iC,EAAAjnC,GAAAoE,EAAA,GAA6B6iC,GAAAjnC,KAAAiE,GAAA,IACnG3jB,EAAA,GAAAme,EAAAne,EAAA,GAAA6jB,GAmFA,iBAAAyhC,GACAxhC,EAAAD,IAAA1F,EAAAwF,EAAAhuC,KACAywE,KACA3gD,GAAAy/C,IAAA76B,OAAAi7B,EAAAxkB,EACA,IAAAr3E,GAAA28F,EAAA37F,MACA,IAAAhB,EAAA,CACA28F,EAAAl2F,KAAA42F,EACA,QAAAhkD,GAAAn6C,EAAA,EAAAk6C,EAAAujD,EAAA,GAAA9W,GAAAzsC,GAAyDl6C,EAAAc,IAAOd,EAChEm6C,EAAAsjD,EAAAz9F,GACAo+F,EAAAjkD,EAAA,GAAAD,IAAAkkD,EAAAjkD,EAAA,GAAAD,IACAgsB,EAAAhsB,EAAA,GAAAC,EAAA,IAAA+rB,EAAAhsB,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,IACA+rB,EAAA/rB,EAAA,GAAAD,EAAA,IAAAgsB,EAAAhsB,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,KAEAwsC,EAAAt9E,KAAA6wC,EAAAC,EAIA,QADAob,GACApb,EADAkkD,GAAArxE,IACAlsB,EAAA6lF,EAAA7kF,OAAA,EAAA9B,EAAA,EAAAk6C,EAAAysC,EAAA7lF,GAAgEd,GAAAc,EAAQo5C,EAAAC,IAAAn6C,EACxEm6C,EAAAwsC,EAAA3mF,IACAu1D,EAAA2Q,EAAAhsB,EAAA,GAAAC,EAAA,KAAAkkD,MAAA9oC,EAAAC,EAAArb,EAAA,GAAA+gB,EAAAhhB,EAAA,IAIA,MADAujD,GAAApmD,EAAA,KACAme,IAAAxoC,KAAAguC,IAAAhuC,MAAAotB,sBAAAob,EAAAwF,IAAAE,EAAAC,QAGAre,GAAAy/C,IAAA+B,SAAA,SAAAt9F,GACAk2D,GAAAQ,GAAAP,GAAAC,GAAAC,GAAAM,GAAAC,GAAAC,GAAAO,GAAAC,GAAAC,GAAA,EACAxb,GAAAy/C,IAAA76B,OAAA1gE,EAAA82D,GACA,IAAAxd,GAAA8d,GAAA9T,EAAA+T,GAAA7b,EAAA8b,GAAAn4D,EAAAm6C,IAAAgK,IAAA9H,GACA,OAAAr8C,GAAA+sE,KACA5yB,EAAAqd,GAAArT,EAAAsT,GAAApb,EAAAqb,GACAH,GAAAX,KAAAzc,EAAA6c,GAAA7S,EAAA8S,GAAA5a,EAAA6a,KACAl3D,EAAAm6C,IAAAgK,IAAA9H,KACA0wB,KAAA9yB,UAEAjd,KAAAsqB,MAAAnD,EAAAhK,GAAAoN,GAAAnC,GAAA/I,EAAArf,KAAAwqB,KAAAxnD,IAAAunD,IAEA,IAAAwP,IAAAQ,GAAAP,GAAAC,GAAAC,GAAAM,GAAAC,GAAAC,GAAAO,GAAAC,GAAAC,GACAR,IACA6C,OAAAxe,EACAsH,MAAAuT,GACAlC,UAAAwC,GACAvC,QAAAgD,GACA9C,aAAA,WACA6C,GAAAhD,UAAAkD,IAEA9C,WAAA,WACA4C,GAAAhD,UAAAwC,KAqRA0N,GAAA1L,GAAAb,GAAAsC,GAAAU,KAAApW,OAAA,IAsPA2a,GAAA,GACAljB,IAAAy/C,IAAAp3B,WAAA,WACA,GAAA1N,GAAAF,EAAAiH,EAAAC,EAAAiD,EAAA5I,EAAAqM,GACAzD,OAAA,SAAA0D,GAIA,MAHA1D,OAAAmD,OAAA,GACAnD,EAAA5I,EAAAsM,GACA1D,EAAAmD,OAAA,EACAnD,GAEA0K,OAAA,SAAA3qE,GACA,MAAAy3B,WAAAp3B,QACAg3D,EAAAkG,GAAAvH,GAAAh2D,EAAA,MAAA81D,GAAA91D,EAAA,MAAA+8D,GAAA/8D,EAAA,MAAAg9D,GAAAh9D,EAAA,OACAigE,MAAAmD,OAAA,EAAAnD,EAAA,MACAyD,KAHA1N,EAAAF,IAAAiH,EAAAC,KAMA,OAAA0G,GAAAiH,SAAA,mBA4JAtvB,GAAAy/C,IAAAgC,eAAA,WACA,MAAAp+B,IAAAI,MACGi+B,IAAAj+B,GACHzjB,GAAAy/C,IAAAkC,OAAA,WACA,MAAA3hD,IAAAy/C,IAAAgC,iBAAA7kC,QAAA,OAAAiL,SAAA,UAAArE,WAAA,YAAA3U,MAAA,OAEA7O,GAAAy/C,IAAAmC,UAAA,WASA,QAAAA,GAAA/pC,GACA,GAAAra,GAAAqa,EAAA,GAAArQ,EAAAqQ,EAAA,EAGA,OAFAlR,GAAA,KACAk7C,EAAArkD,EAAAgK,GAAAb,IAAAm7C,EAAAtkD,EAAAgK,GAAAb,IAAAo7C,EAAAvkD,EAAAgK,GACAb,EAZA,GAGAA,GAIKk7C,EAAAC,EAAAC,EAPLC,EAAAhiD,GAAAy/C,IAAAkC,SACAM,EAAAjiD,GAAAy/C,IAAAgC,iBAAA7kC,QAAA,QAAAiL,SAAA,SAAArE,WAAA,QACA0+B,EAAAliD,GAAAy/C,IAAAgC,iBAAA7kC,QAAA,QAAAiL,SAAA,SAAArE,WAAA,OACA2+B,GACAx7C,MAAA,SAAAnJ,EAAAgK,GACAb,GAAAnJ,EAAAgK,IAsEA,OA7DAo6C,GAAA5oD,OAAA,SAAA6e,GACA,GAAA3Z,GAAA8jD,EAAAnzC,QAAAhB,EAAAm0C,EAAAz5B,YAAA/qB,GAAAqa,EAAA,GAAAhK,EAAA,IAAA3P,EAAAsJ,GAAAqQ,EAAA,GAAAhK,EAAA,IAAA3P,CACA,QAAAsJ,GAAA,KAAAA,EAAA,MAAAhK,IAAA,MAAAA,GAAA,KAAAykD,EAAAz6C,GAAA,MAAAA,EAAA,MAAAhK,IAAA,MAAAA,GAAA,KAAA0kD,EAAAF,GAAAhpD,OAAA6e,IAEA+pC,EAAAh9B,OAAA,SAAAA,GACA,GAAAw9B,GAAAJ,EAAAp9B,UAAAy9B,EAAAJ,EAAAr9B,UAAA09B,EAAAJ,EAAAt9B,SACA,QACAje,MAAA,SAAAnJ,EAAAgK,GACA46C,EAAAz7C,MAAAnJ,EAAAgK,GACA66C,EAAA17C,MAAAnJ,EAAAgK,GACA86C,EAAA37C,MAAAnJ,EAAAgK,IAEAqW,OAAA,WACAukC,EAAAvkC,SACAwkC,EAAAxkC,SACAykC,EAAAzkC,UAEA7F,UAAA,WACAoqC,EAAApqC,YACAqqC,EAAArqC,YACAsqC,EAAAtqC,aAEAC,QAAA,WACAmqC,EAAAnqC,UACAoqC,EAAApqC,UACAqqC,EAAArqC,WAEAE,aAAA,WACAiqC,EAAAjqC,eACAkqC,EAAAlqC,eACAmqC,EAAAnqC,gBAEAC,WAAA,WACAgqC,EAAAhqC,aACAiqC,EAAAjqC,aACAkqC,EAAAlqC,gBAIAwpC,EAAAthE,UAAA,SAAA37B,GACA,MAAAy3B,WAAAp3B,QACAg9F,EAAA1hE,UAAA37B,GACAs9F,EAAA3hE,UAAA37B,GACAu9F,EAAA5hE,UAAA37B,GACAi9F,GAJAI,EAAA1hE,aAMAshE,EAAA/yC,MAAA,SAAAlqD,GACA,MAAAy3B,WAAAp3B,QACAg9F,EAAAnzC,MAAAlqD,GACAs9F,EAAApzC,MAAA,IAAAlqD,GACAu9F,EAAArzC,MAAAlqD,GACAi9F,EAAAr5B,UAAAy5B,EAAAz5B,cAJAy5B,EAAAnzC,SAMA+yC,EAAAr5B,UAAA,SAAA5jE,GACA,IAAAy3B,UAAAp3B,OAAA,MAAAg9F,GAAAz5B,WACA,IAAArqB,GAAA8jD,EAAAnzC,QAAArR,GAAA74C,EAAA,GAAA6iD,GAAA7iD,EAAA,EAIA,OAHAk9F,GAAAG,EAAAz5B,UAAA5jE,GAAA0jE,aAAA7qB,EAAA,KAAAU,EAAAsJ,EAAA,KAAAtJ,IAAAV,EAAA,KAAAU,EAAAsJ,EAAA,KAAAtJ,KAAA0mB,OAAAu9B,GAAAx7C,MACAm7C,EAAAG,EAAA15B,WAAA/qB,EAAA,KAAAU,EAAAsJ,EAAA,KAAAtJ,IAAAmqB,aAAA7qB,EAAA,KAAAU,EAAA+b,GAAAzS,EAAA,IAAAtJ,EAAA+b,KAAAzc,EAAA,KAAAU,EAAA+b,GAAAzS,EAAA,KAAAtJ,EAAA+b,MAAA2K,OAAAu9B,GAAAx7C,MACAo7C,EAAAG,EAAA35B,WAAA/qB,EAAA,KAAAU,EAAAsJ,EAAA,KAAAtJ,IAAAmqB,aAAA7qB,EAAA,KAAAU,EAAA+b,GAAAzS,EAAA,KAAAtJ,EAAA+b,KAAAzc,EAAA,KAAAU,EAAA+b,GAAAzS,EAAA,KAAAtJ,EAAA+b,MAAA2K,OAAAu9B,GAAAx7C,MACAi7C,GAEAA,EAAA/yC,MAAA,MAEA,IAAA0zC,IAAAv+B,GA2BAK,GAAAE,GAAAD,GAAAE,GA3BAL,IACAxd,MAAAtH,EACA2Y,UAAA3Y,EACA4Y,QAAA5Y,EACA8Y,aAAA,WACA6L,GAAA,EACAG,GAAAnM,UAAA+L,IAEA3L,WAAA,WACA+L,GAAAnM,UAAAmM,GAAAlM,QAAAkM,GAAAxd,MAAAtH,EACAkjD,IAAA3zC,GAAAoV,GAAA,KAkBAw+B,IACA77C,MAAAyd,GACApM,UAAA3Y,EACA4Y,QAAA5Y,EACA8Y,aAAA9Y,EACA+Y,WAAA/Y,GAwDA6lB,IACAve,MAAAqe,GACAhN,UAAAiN,GACAhN,QAAAkN,GACAhN,aAAA,WACA+M,GAAAlN,UAAAoN,IAEAhN,WAAA,WACA8M,GAAAve,MAAAqe,GACAE,GAAAlN,UAAAiN,GACAC,GAAAjN,QAAAkN,IAoKAnlB,IAAAy/C,IAAA5wE,KAAA,WAEA,QAAAA,GAAA3qB,GAMA,MALAA,KACA,kBAAA6gE,IAAA09B,EAAA19B,eAAA79D,MAAArE,KAAAu5B,YACAsmE,KAAA36B,QAAA26B,EAAAC,EAAAF,IACAziD,GAAAy/C,IAAA76B,OAAA1gE,EAAAw+F,IAEAD,EAAAv6F,SAiCA,QAAAk3D,KAEA,MADAsjC,GAAA,KACA7zE,EA1CA,GAAAy4C,GAAA5iD,EAAAi+E,EAAAF,EAAAC,EAAA39B,EAAA,GA4CA,OAnCAl2C,GAAA+1D,KAAA,SAAA1gF,GAGA,MAFAq+F,IAAA,EACAviD,GAAAy/C,IAAA76B,OAAA1gE,EAAAy+F,EAAAx+B,KACAo+B,IAEA1zE,EAAA2yE,SAAA,SAAAt9F,GAGA,MAFAm2D,IAAAC,GAAAC,GAAAM,GAAAC,GAAAC,GAAAO,GAAAC,GAAAC,GAAA,EACAxb,GAAAy/C,IAAA76B,OAAA1gE,EAAAy+F,EAAAz9B,KACA1J,IAAAF,GAAAE,GAAAD,GAAAC,IAAAT,IAAAF,GAAAE,GAAAD,GAAAC,IAAAR,IAAAF,GAAAE,GAAAD,GAAAC,KAAAjd,UAEAzuB,EAAA6xE,OAAA,SAAAx8F,GAGA,MAFAogE,IAAAE,KAAAH,GAAAE,GAAAr0C,KACA8vB,GAAAy/C,IAAA76B,OAAA1gE,EAAAy+F,EAAAH,OACAn+B,GAAAE,KAAAD,GAAAE,MAEA31C,EAAAy4C,WAAA,SAAA3iE,GACA,MAAAy3B,WAAAp3B,QACA29F,GAAAr7B,EAAA3iE,KAAAigE,QAAAsC,GAAAviE,GAAAq6C,EACAogB,KAFAkI,GAIAz4C,EAAAnK,QAAA,SAAA/f,GACA,MAAAy3B,WAAAp3B,QACAy9F,EAAA,OAAA/9E,EAAA/f,GAAA,GAAA8/D,IAAA,GAAAY,IAAA1gE,GACA,kBAAAogE,IAAA09B,EAAA19B,eACA3F,KAHA16C,GAKAmK,EAAAk2C,YAAA,SAAApgE,GACA,MAAAy3B,WAAAp3B,QACA+/D,EAAA,kBAAApgE,MAAA89F,EAAA19B,aAAApgE,OACAkqB,GAFAk2C,GAQAl2C,EAAAy4C,WAAAtnB,GAAAy/C,IAAAmC,aAAAl9E,QAAA,OAUAs7B,GAAAy/C,IAAA7yF,UAAA,SAAAw6E,GACA,OACAxiB,OAAA,SAAAA,GACA,GAAAh4D,GAAA,GAAAw6D,IAAAxC,EACA,QAAA1mB,KAAAkpC,GAAAx6E,EAAAsxC,GAAAkpC,EAAAlpC,EACA,OAAAtxC,MAOAw6D,GAAAhjE,WACAuiD,MAAA,SAAAnJ,EAAAgK,GACA3kD,KAAA+hE,OAAAje,MAAAnJ,EAAAgK,IAEAqW,OAAA,WACAh7D,KAAA+hE,OAAA/G,UAEA7F,UAAA,WACAn1D,KAAA+hE,OAAA5M,aAEAC,QAAA,WACAp1D,KAAA+hE,OAAA3M,WAEAE,aAAA,WACAt1D,KAAA+hE,OAAAzM,gBAEAC,WAAA,WACAv1D,KAAA+hE,OAAAxM,eAuBApY,GAAAy/C,IAAAn4B,WAAAD,GACArnB,GAAAy/C,IAAAmD,kBAAAr/B,IAsFAvjB,GAAAy/C,IAAAoD,gBAAA,WACA,MAAAx7B,IAAAmB,MACGk5B,IAAAl5B,GAAAxvB,OAAAwvB,GACHxoB,GAAAy/C,IAAA52B,SAAA,SAAAjM,GAEA,QAAA8G,GAAA7L,GAEA,MADAA,GAAA+E,EAAA/E,EAAA,GAAAzN,GAAAyN,EAAA,GAAAzN,IACAyN,EAAA,IAAAjN,GAAAiN,EAAA,IAAAjN,GAAAiN,EAMA,MATA+E,GAAA8K,GAAA9K,EAAA,OAAAxS,GAAAwS,EAAA,GAAAxS,GAAAwS,EAAA53D,OAAA,EAAA43D,EAAA,GAAAxS,GAAA,GAKAsZ,EAAA1qB,OAAA,SAAA6e,GAEA,MADAA,GAAA+E,EAAA5jB,OAAA6e,EAAA,GAAAzN,GAAAyN,EAAA,GAAAzN,IACAyN,EAAA,IAAAjN,GAAAiN,EAAA,IAAAjN,GAAAiN,GAEA6L,GAKA+E,GAAAzvB,OAAAwvB,GA0BAxoB,GAAAy/C,IAAA/yB,OAAA,WAEA,QAAAA,KACA,GAAA7E,GAAA,kBAAA0mB,KAAArnF,MAAArE,KAAAu5B,WAAAmyD,EAAA3xB,EAAA8K,IAAAG,EAAA,GAAAzd,IAAAyd,EAAA,GAAAzd,GAAA,GAAApR,OAAAgkB,IAOA,OANA5sB,GAAA,aACAuW,MAAA,SAAAnJ,EAAAgK,GACAwV,EAAAzwD,KAAAixC,EAAAof,EAAApf,EAAAgK,IACAhK,EAAA,IAAAoN,GAAApN,EAAA,IAAAoN,OAIA5jC,KAAA,UACA6wC,aAAAmF,IAXA,GAAAoM,GAAAh5B,EAAAm+C,GAAA,KAAAjuD,EAAA,CA6BA,OAfAosC,GAAA6hB,OAAA,SAAA/wC,GACA,MAAAphB,WAAAp3B,QACAupF,EAAA/wC,EACAkvB,GAFA6hB,GAIA7hB,EAAAtD,MAAA,SAAA5rB,GACA,MAAAphB,WAAAp3B,QACAorC,EAAAoxB,IAAA4H,GAAA5rB,GAAA4M,GAAA9pB,EAAA8pB,IACAsiB,GAFAtD,GAIAsD,EAAApsC,UAAA,SAAA37B,GACA,MAAAy3B,WAAAp3B,QACAorC,EAAAoxB,GAAA4H,EAAAhf,IAAA9pB,GAAA37B,GAAAylD,IACAsiB,GAFApsC,GAIAosC,EAAAtD,MAAA,KA0BAppB,GAAAy/C,IAAAt1B,SAAA,SAAA/sB,EAAAC,GACA,GAAAwQ,GAAAi1C,GAAAzlD,EAAA,GAAAD,EAAA,IAAAgN,GAAA8T,EAAA9gB,EAAA,GAAAgN,GAAAiU,EAAAhhB,EAAA,GAAA+M,GAAA24C,EAAA1iE,KAAA4oB,IAAA65C,GAAAz4B,EAAAhqC,KAAA8pB,IAAA24C,GAAA/pC,EAAA14B,KAAA4oB,IAAAiV,GAAAjF,EAAA54B,KAAA8pB,IAAA+T,GAAA8kC,EAAA3iE,KAAA4oB,IAAAoV,GAAAG,EAAAn+B,KAAA8pB,IAAAkU,EACA,OAAAh+B,MAAAsqB,MAAAtqB,KAAAwqB,MAAAgD,EAAA2Q,EAAAukC,GAAAl1C,KAAAoL,EAAA+pC,EAAAjqC,EAAAyF,EAAA6L,GAAAxc,GAAAkL,EAAAiqC,EAAA/pC,EAAAuF,EAAA6L,IAEArqB,GAAAy/C,IAAAwD,UAAA,WAEA,QAAAA,KACA,OACAj8E,KAAA,kBACA6wC,YAAAkG,KAGA,QAAAA,KACA,MAAA/d,IAAAzF,MAAAla,KAAAwU,KAAAquD,EAAAC,KAAAC,EAAAD,GAAAt8F,IAAA0sD,GAAA1vB,OAAAmc,GAAAzF,MAAAla,KAAAwU,KAAAwuD,EAAAC,KAAAC,EAAAD,GAAAz8F,IAAA8uD,IAAA9xB,OAAAmc,GAAAzF,MAAAla,KAAAwU,KAAA8lB,EAAAqH,KAAAN,EAAAM,GAAA36B,OAAA,SAAAmW,GACA,MAAAoR,IAAApR,EAAA2lD,GAAAlpC,KACOpzD,IAAA22C,IAAA3Z,OAAAmc,GAAAzF,MAAAla,KAAAwU,KAAA4lB,EAAAwH,KAAAN,EAAAM,GAAA56B,OAAA,SAAAmgB,GACP,MAAAoH,IAAApH,EAAA87C,GAAArpC,KACOpzD,IAAA2gD,IAZP,GAAAka,GAAA/G,EAAAyoC,EAAAF,EAAAvhC,EAAAlH,EAAA8oC,EAAAF,EAAA7lD,EAAAgK,EAAA+L,EAAAoC,EAAAqM,EAAA,GAAAC,EAAAD,EAAAmhC,EAAA,GAAAG,EAAA,IAAAhjE,EAAA,GAuEA,OAzDA2iE,GAAAllC,MAAA,WACA,MAAAA,KAAAl3D,IAAA,SAAAgxD,GACA,OACA7wC,KAAA,aACA6wC,kBAIAorC,EAAAO,QAAA,WACA,OACAx8E,KAAA,UACA6wC,aAAAtE,EAAA2vC,GAAAr/D,OAAA8xB,EAAA4tC,GAAA9qE,MAAA,GAAA86B,EAAA6vC,GAAAxlE,UAAAnF,MAAA,GAAAk9B,EAAA0tC,GAAAzlE,UAAAnF,MAAA,OAGAwqE,EAAA3zB,OAAA,SAAA3qE,GACA,MAAAy3B,WAAAp3B,OACAi+F,EAAAQ,YAAA9+F,GAAA++F,YAAA/+F,GADAs+F,EAAAS,eAGAT,EAAAQ,YAAA,SAAA9+F,GACA,MAAAy3B,WAAAp3B,QACAk+F,GAAAv+F,EAAA,MAAAy+F,GAAAz+F,EAAA,MACA0+F,GAAA1+F,EAAA,MAAA4+F,GAAA5+F,EAAA,MACAu+F,EAAAE,IAAAz+F,EAAAu+F,IAAAE,IAAAz+F,GACA0+F,EAAAE,IAAA5+F,EAAA0+F,IAAAE,IAAA5+F,GACAs+F,EAAA3iE,gBALA4iE,EAAAG,IAAAD,EAAAG,KAOAN,EAAAS,YAAA,SAAA/+F,GACA,MAAAy3B,WAAAp3B,QACA21D,GAAAh2D,EAAA,MAAA+8D,GAAA/8D,EAAA,MACA81D,GAAA91D,EAAA,MAAAg9D,GAAAh9D,EAAA,MACAg2D,EAAA+G,IAAA/8D,EAAAg2D,IAAA+G,IAAA/8D,GACA81D,EAAAkH,IAAAh9D,EAAA81D,IAAAkH,IAAAh9D,GACAs+F,EAAA3iE,gBALAq6B,EAAAF,IAAAiH,EAAAC,KAOAshC,EAAA1tE,KAAA,SAAA5wB,GACA,MAAAy3B,WAAAp3B,OACAi+F,EAAAU,UAAAh/F,GAAAi/F,UAAAj/F,GADAs+F,EAAAW,aAGAX,EAAAU,UAAA,SAAAh/F,GACA,MAAAy3B,WAAAp3B,QACAm+F,GAAAx+F,EAAA,GAAA2+F,GAAA3+F,EAAA,GACAs+F,IAFAE,EAAAG,IAIAL,EAAAW,UAAA,SAAAj/F,GACA,MAAAy3B,WAAAp3B,QACAg9D,GAAAr9D,EAAA,GAAAs9D,GAAAt9D,EAAA,GACAs+F,IAFAjhC,EAAAC,IAIAghC,EAAA3iE,UAAA,SAAA37B,GACA,MAAAy3B,WAAAp3B,QACAs7B,GAAA37B,EACA64C,EAAA8rB,GAAA7O,EAAAkH,EAAA,IACAna,EAAA+hB,GAAA5O,EAAA+G,EAAAphC,GACAizB,EAAA+V,GAAA+5B,EAAAE,EAAA,IACA5tC,EAAA4T,GAAA25B,EAAAE,EAAA9iE,GACA2iE,GANA3iE,GAQA2iE,EAAAQ,eAAA,QAAAxpC,KAAA,OAAAA,MAAAypC,eAAA,QAAAzpC,KAAA,OAAAA,OAwBAja,GAAAy/C,IAAAoE,SAAA,WAEA,QAAAA,KACA,OACA78E,KAAA,aACA6wC,aAAAisC,GAAA1xF,EAAAlL,MAAArE,KAAAu5B,WAAA2nE,GAAAj1D,EAAA5nC,MAAArE,KAAAu5B,aAJA,GAAA0nE,GAAAC,EAAA3xF,EAAAo3D,GAAA16B,EAAA26B,EAuBA,OAhBAo6B,GAAA15B,SAAA,WACA,MAAAnqB,IAAAy/C,IAAAt1B,SAAA25B,GAAA1xF,EAAAlL,MAAArE,KAAAu5B,WAAA2nE,GAAAj1D,EAAA5nC,MAAArE,KAAAu5B,aAEAynE,EAAAzxF,OAAA,SAAAzN,GACA,MAAAy3B,WAAAp3B,QACAoN,EAAAzN,EAAAm/F,EAAA,kBAAAn/F,GAAA,KAAAA,EACAk/F,GAFAzxF,GAIAyxF,EAAA/0D,OAAA,SAAAnqC,GACA,MAAAy3B,WAAAp3B,QACA8pC,EAAAnqC,EAAAo/F,EAAA,kBAAAp/F,GAAA,KAAAA,EACAk/F,GAFA/0D,GAIA+0D,EAAAvjE,UAAA,WACA,MAAAlE,WAAAp3B,OAAA6+F,EAAA,GAEAA,GAEA7jD,GAAAy/C,IAAArvD,YAAA,SAAAh+B,EAAA08B,GACA,MAAA46B,IAAAt3D,EAAA,GAAAg4C,GAAAh4C,EAAA,GAAAg4C,GAAAtb,EAAA,GAAAsb,GAAAtb,EAAA,GAAAsb,KAaApK,GAAAy/C,IAAAz6F,OAAA,SAAAd,GAGA,MAFAomE,IAAA,EACAtqB,GAAAy/C,IAAA76B,OAAA1gE,EAAAqmE,IACAD,GAEA,IAAAA,IACAC,IACA1M,OAAAxe,EACAsH,MAAAtH,EACA2Y,UAAAoS,GACAnS,QAAA5Y,EACA8Y,aAAA9Y,EACA+Y,WAAA/Y,GA4BA2kD,GAAAx5B,GAAA,SAAAy5B,GACA,MAAA5jE,MAAAwqB,KAAA,KAAAo5C,KACG,SAAAtgC,GACH,SAAAtjC,KAAAsoB,KAAAgb,EAAA,MAEA3jB,GAAAy/C,IAAAyE,mBAAA,WACA,MAAA78B,IAAA28B,MACGtC,IAAAsC,EACH,IAAAG,IAAA35B,GAAA,SAAAy5B,GACA,GAAA3gG,GAAA+8B,KAAAmoB,KAAAy7C,EACA,OAAA3gG,MAAA+8B,KAAA4oB,IAAA3lD,IACG07C,IACHgB,GAAAy/C,IAAA2E,qBAAA,WACA,MAAA/8B,IAAA88B,MACGzC,IAAAyC,IAqBHnkD,GAAAy/C,IAAA4E,eAAA,WACA,MAAAhhC,IAAAwH,MACG62B,IAAA72B,IAcH7qB,GAAAy/C,IAAA6E,iBAAA,WACA,MAAAjhC,IAAA4H,MACGy2B,IAAAz2B,EACH,IAAAs5B,IAAA/5B,GAAA,SAAAy5B,GACA,SAAAA,GACG5jE,KAAAq+B,OACH1e,GAAAy/C,IAAA+E,SAAA,WACA,MAAAn9B,IAAAk9B,MACG7C,IAAA6C,GAIHv5B,GAAAhyB,OAAA,SAAAwE,EAAAgK,GACA,OAAAhK,EAAA,EAAAnd,KAAAq+B,KAAAr+B,KAAAwoB,IAAArB,IAAAkB,MA0BA1I,GAAAy/C,IAAAgF,SAAA,WACA,MAAAt5B,IAAAH,MACG02B,IAAA12B,EACH,IAAA05B,IAAAl6B,GAAA,WACA,UACGnqC,KAAAsoB,OACH3I,GAAAy/C,IAAAkF,aAAA,WACA,MAAAt9B,IAAAq9B,MACGhD,IAAAgD,EACH,IAAAE,IAAAp6B,GAAA,SAAAy5B,GACA,YAAAA,IACG,SAAAtgC,GACH,SAAAtjC,KAAAq+B,KAAAiF,MAEA3jB,GAAAy/C,IAAAoF,cAAA,WACA,MAAAx9B,IAAAu9B,MACGlD,IAAAkD,GAIHv5B,GAAAryB,OAAA,SAAAwE,EAAAgK,GACA,QAAAA,EAAA,EAAAnnB,KAAAq+B,KAAAr+B,KAAAwoB,IAAArL,IAAAkL,MAEA1I,GAAAy/C,IAAAqF,mBAAA,WACA,GAAAx9B,GAAA6D,GAAAE,IAAAxD,EAAAP,EAAAO,OAAAjL,EAAA0K,EAAA1K,MAQA,OAPA0K,GAAAO,OAAA,SAAAljE,GACA,MAAAA,GAAAkjE,IAAAljE,EAAA,GAAAA,EAAA,MAAAA,EAAAkjE,KAAAljE,EAAA,IAAAA,EAAA,MAEA2iE,EAAA1K,OAAA,SAAAj4D,GACA,MAAAA,GAAAi4D,GAAAj4D,EAAA,GAAAA,EAAA,GAAAA,EAAAK,OAAA,EAAAL,EAAA,YAAAA,EAAAi4D,KACAj4D,EAAA,GAAAA,EAAA,GAAAA,EAAA,SAEAi4D,GAAA,WACG8kC,IAAAr2B,GACHrrB,GAAA+kD,QAOA/kD,GAAA+kD,KAAAt5B,KAAA,SAAAu5B,GAGA,QAAAv5B,GAAAr/D,GACA,GAAAA,EAAApH,OAAA,UACA,IAAA9B,GAAAkuE,EAAA3lB,GAAAjO,GAAA6zB,EAAA5lB,GAAAjE,GAAAxjD,EAAAoI,EAAApH,OAAAs3D,KAAA2oC,IACA,KAAA/hG,EAAA,EAAiBA,EAAAc,EAAOd,IACxBo5D,EAAA/vD,OAAA6kE,EAAAhuE,KAAAP,KAAAuJ,EAAAlJ,OAAAmuE,EAAAjuE,KAAAP,KAAAuJ,EAAAlJ,SAGA,KADAo5D,EAAA7xD,KAAAkhE,IACAzoE,EAAA,EAAiBA,EAAAc,EAAOd,IAAA+hG,EAAA14F,MAAA+vD,EAAAp5D,GAAA,IAAAo5D,EAAAp5D,GAAA,IACxB,IAAAwoB,GAAA8/C,GAAAlP,GAAA7wC,EAAA+/C,GAAAy5B,GACAC,EAAAz5E,EAAA,KAAAC,EAAA,GAAAy5E,EAAA15E,IAAAzmB,OAAA,KAAA0mB,IAAA1mB,OAAA,GAAAs4D,IACA,KAAAp6D,EAAAwoB,EAAA1mB,OAAA,EAAgC9B,GAAA,IAAQA,EAAAo6D,EAAA/wD,KAAAH,EAAAkwD,EAAA5wC,EAAAxoB,IAAA,IACxC,KAAAA,GAAAgiG,EAAyBhiG,EAAAuoB,EAAAzmB,OAAAmgG,IAA8BjiG,EAAAo6D,EAAA/wD,KAAAH,EAAAkwD,EAAA7wC,EAAAvoB,IAAA,IACvD,OAAAo6D,GAdA,GAAA9f,GAAA8tB,GAAA9jB,EAAA+jB,EACA,OAAAnvC,WAAAp3B,OAAAymE,EAAAu5B,IAeAv5B,EAAAjuB,EAAA,SAAA74C,GACA,MAAAy3B,WAAAp3B,QAAAw4C,EAAA74C,EAAA8mE,GAAAjuB,GAEAiuB,EAAAjkB,EAAA,SAAA7iD,GACA,MAAAy3B,WAAAp3B,QAAAwiD,EAAA7iD,EAAA8mE,GAAAjkB,GAEAikB,IAaAzrB,GAAA+kD,KAAAznC,QAAA,SAAAzF,GAEA,MADAjX,IAAAiX,EAAAutC,IACAvtC,EAEA,IAAAutC,IAAAplD,GAAA+kD,KAAAznC,QAAAl5D,YACAghG,IAAAxgB,KAAA,WAEA,IADA,GAAAxnC,GAAAl6C,GAAA,EAAAc,EAAAnB,KAAAmC,OAAAq4C,EAAAx6C,KAAAmB,EAAA,GAAA4gF,EAAA,IACA1hF,EAAAc,GACAo5C,EAAAC,EACAA,EAAAx6C,KAAAK,GACA0hF,GAAAxnC,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,EAEA,UAAAunC,GAEAwgB,GAAA5D,SAAA,SAAAtjD,GACA,GAAAd,GAAA95C,EAAAJ,GAAA,EAAAc,EAAAnB,KAAAmC,OAAAw4C,EAAA,EAAAgK,EAAA,EAAAnK,EAAAx6C,KAAAmB,EAAA,EAEA,KADAo4B,UAAAp3B,SAAAk5C,GAAA,KAAAr7C,KAAA+hF,WACA1hF,EAAAc,GACAo5C,EAAAC,EACAA,EAAAx6C,KAAAK,GACAI,EAAA85C,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,GACAI,IAAAJ,EAAA,GAAAC,EAAA,IAAA/5C,EACAkkD,IAAApK,EAAA,GAAAC,EAAA,IAAA/5C,CAEA,QAAAk6C,EAAAU,EAAAsJ,EAAAtJ,IAEAknD,GAAAppC,KAAA,SAAAD,GAEA,IADA,GAAAz5B,GAAAkiB,EAAAnhD,EAAAg6C,EAAA/5C,EAAAC,EAAAu0D,EAAAuU,GAAAtQ,GAAA74D,GAAA,EAAAc,EAAAnB,KAAAmC,OAAAqnE,GAAAxpE,MAAAu6C,EAAAv6C,KAAAmB,EAAA,KACAd,EAAAc,GAAA,CAMA,IALAs+B,EAAAy5B,EAAAtjC,QACAsjC,EAAA/2D,OAAA,EACAq4C,EAAAx6C,KAAAK,GACAI,EAAAg/B,GAAAj/B,EAAAi/B,EAAAt9B,OAAA8yD,GAAA,GACAtT,GAAA,IACAA,EAAAnhD,GACAE,EAAA++B,EAAAkiB,GACAonB,GAAAroE,EAAA65C,EAAAC,IACAuuB,GAAAtoE,EAAA85C,EAAAC,IACA0e,EAAAxvD,KAAAs/D,GAAAvoE,EAAAC,EAAA65C,EAAAC,IAEA0e,EAAAxvD,KAAAhJ,IACSqoE,GAAAtoE,EAAA85C,EAAAC,IACT0e,EAAAxvD,KAAAs/D,GAAAvoE,EAAAC,EAAA65C,EAAAC,IAEA/5C,EAAAC,CAEAu0D,IAAAiE,EAAAxvD,KAAAwvD,EAAA,IACA3e,EAAAC,EAEA,MAAA0e,GAaA,IAAA2U,IAAAd,GAAA5C,GAAAwD,GAAAD,GAAA1D,MAAAyD,KAgIAnB,IAAA/qE,UAAA0rE,QAAA,WAEA,IADA,GAAAtD,GAAAiD,EAAA5sE,KAAAusE,MAAAI,EAAAC,EAAAzqE,OACAwqE,KACAhD,EAAAiD,EAAAD,GAAAhD,KACAA,EAAAnvB,GAAAmvB,EAAApvB,GAAAqyB,EAAAvnD,OAAAsnD,EAAA,EAGA,OADAC,GAAAhlE,KAAAwlE,IACAR,EAAAzqE,QA4MA+qE,GAAA3rE,WACAmiB,MAAA,WACA,MAAA1jB,MAAA2pE,KAAArpE,IAAAN,KAAA4pE,KAAA5pE,KAAA2pE,KAAApvB,EAAAv6C,KAAA2pE,KAAAnvB,GAEA72B,IAAA,WACA,MAAA3jB,MAAA2pE,KAAArpE,IAAAN,KAAA4pE,KAAA5pE,KAAA2pE,KAAAnvB,EAAAx6C,KAAA2pE,KAAApvB,IASAm0B,GAAAntE,WACAkqE,OAAA,SAAAjmC,EAAAwU,GACA,GAAAvsB,GAAA+0E,EAAAC,CACA,IAAAj9D,EAAA,CAKA,GAJAwU,EAAAswB,EAAA9kC,EACAwU,EAAAuwB,EAAA/kC,EAAA+kC,EACA/kC,EAAA+kC,IAAA/kC,EAAA+kC,EAAAD,EAAAtwB,GACAxU,EAAA+kC,EAAAvwB,EACAxU,EAAA+lC,EAAA,CAEA,IADA/lC,IAAA+lC,EACA/lC,EAAAypB,GAAAzpB,IAAAypB,CACAzpB,GAAAypB,EAAAjV,MAEAxU,GAAA+lC,EAAAvxB,CAEAvsB,GAAA+X,MACOxlC,MAAA8B,GACP0jC,EAAAspC,GAAA9uE,KAAA8B,GACAk4C,EAAAswB,EAAA,KACAtwB,EAAAuwB,EAAA/kC,EACAA,EAAA8kC,EAAA9kC,EAAAypB,EAAAjV,EACAvsB,EAAA+X,IAEAwU,EAAAswB,EAAAtwB,EAAAuwB,EAAA,KACAvqE,KAAA8B,EAAAk4C,EACAvsB,EAAA,KAMA,KAJAusB,EAAAiV,EAAAjV,EAAAuxB,EAAA,KACAvxB,EAAAwV,EAAA/hC,EACAusB,EAAA+mB,GAAA,EACAv7B,EAAAwU,EACAvsB,KAAAszC,GACAyhC,EAAA/0E,EAAA+hC,EACA/hC,IAAA+0E,EAAAvzC,GACAwzC,EAAAD,EAAAj3B,EACAk3B,KAAA1hC,GACAtzC,EAAAszC,EAAA0hC,EAAA1hC,GAAA,EACAyhC,EAAAzhC,GAAA,EACAv7B,EAAAg9D,IAEAh9D,IAAA/X,EAAA89C,IACAoD,GAAA3uE,KAAAytB,GACA+X,EAAA/X,EACAA,EAAA+X,EAAAgqB,GAEA/hC,EAAAszC,GAAA,EACAyhC,EAAAzhC,GAAA,EACA8N,GAAA7uE,KAAAwiG,MAGAC,EAAAD,EAAAvzC,EACAwzC,KAAA1hC,GACAtzC,EAAAszC,EAAA0hC,EAAA1hC,GAAA,EACAyhC,EAAAzhC,GAAA,EACAv7B,EAAAg9D,IAEAh9D,IAAA/X,EAAAwhC,IACA4f,GAAA7uE,KAAAytB,GACA+X,EAAA/X,EACAA,EAAA+X,EAAAgqB,GAEA/hC,EAAAszC,GAAA,EACAyhC,EAAAzhC,GAAA,EACA4N,GAAA3uE,KAAAwiG,KAGA/0E,EAAA+X,EAAAgqB,CAEAxvD,MAAA8B,EAAAi/D,GAAA,GAEA3+B,OAAA,SAAA4X,GACAA,EAAAuwB,IAAAvwB,EAAAuwB,EAAAD,EAAAtwB,EAAAswB,GACAtwB,EAAAswB,IAAAtwB,EAAAswB,EAAAC,EAAAvwB,EAAAuwB,GACAvwB,EAAAuwB,EAAAvwB,EAAAswB,EAAA,IACA,IAAAo4B,GAAAl5F,EAAA2tF,EAAA1pE,EAAAusB,EAAAwV,EAAAzU,EAAAf,EAAAiV,EAAA/T,EAAAlB,EAAAuxB,CA6BA,IA5B4D/hE,EAA5DuxC,EAA8BG,EAA8B4zB,GAAA5zB,GAA9BH,EAA9BG,EACAztB,EACAA,EAAAwhC,IAAAjV,EAAAvsB,EAAAwhC,EAAAzlD,EAA+CikB,EAAA89C,EAAA/hE,EAE/CxJ,KAAA8B,EAAA0H,EAEAuxC,GAAAG,GACAi8C,EAAA3tF,EAAAu3D,EACAv3D,EAAAu3D,EAAA/mB,EAAA+mB,EACAv3D,EAAAylD,EAAAlU,EACAA,EAAAyU,EAAAhmD,EACAA,IAAA0xC,GACAztB,EAAAjkB,EAAAgmD,EACAhmD,EAAAgmD,EAAAxV,EAAAwV,EACAxV,EAAAxwC,EAAA+hE,EACA99C,EAAAwhC,EAAAjV,EACAxwC,EAAA+hE,EAAArwB,EACAA,EAAAsU,EAAAhmD,IAEAA,EAAAgmD,EAAA/hC,EACAA,EAAAjkB,EACAwwC,EAAAxwC,EAAA+hE,KAGA4rB,EAAAn9C,EAAA+mB,EACA/mB,EAAAxwC,GAEAwwC,MAAAwV,EAAA/hC,IACA0pE,EAAA,CACA,GAAAn9C,KAAA+mB,EAEA,YADA/mB,EAAA+mB,GAAA,EAGA,IACA,GAAA/mB,IAAAh6C,KAAA8B,EAAA,KACA,IAAAk4C,IAAAvsB,EAAAwhC,GAQA,GAPAyzC,EAAAj1E,EAAA89C,EACAm3B,EAAA3hC,IACA2hC,EAAA3hC,GAAA,EACAtzC,EAAAszC,GAAA,EACA4N,GAAA3uE,KAAAytB,GACAi1E,EAAAj1E,EAAA89C,GAEAm3B,EAAAzzC,GAAAyzC,EAAAzzC,EAAA8R,GAAA2hC,EAAAn3B,GAAAm3B,EAAAn3B,EAAAxK,EAAA,CACA2hC,EAAAn3B,GAAAm3B,EAAAn3B,EAAAxK,IACA2hC,EAAAzzC,EAAA8R,GAAA,EACA2hC,EAAA3hC,GAAA,EACA8N,GAAA7uE,KAAA0iG,GACAA,EAAAj1E,EAAA89C,GAEAm3B,EAAA3hC,EAAAtzC,EAAAszC,EACAtzC,EAAAszC,EAAA2hC,EAAAn3B,EAAAxK,GAAA,EACA4N,GAAA3uE,KAAAytB,GACAusB,EAAAh6C,KAAA8B,CACA,YAUA,IAPA4gG,EAAAj1E,EAAAwhC,EACAyzC,EAAA3hC,IACA2hC,EAAA3hC,GAAA,EACAtzC,EAAAszC,GAAA,EACA8N,GAAA7uE,KAAAytB,GACAi1E,EAAAj1E,EAAAwhC,GAEAyzC,EAAAzzC,GAAAyzC,EAAAzzC,EAAA8R,GAAA2hC,EAAAn3B,GAAAm3B,EAAAn3B,EAAAxK,EAAA,CACA2hC,EAAAzzC,GAAAyzC,EAAAzzC,EAAA8R,IACA2hC,EAAAn3B,EAAAxK,GAAA,EACA2hC,EAAA3hC,GAAA,EACA4N,GAAA3uE,KAAA0iG,GACAA,EAAAj1E,EAAAwhC,GAEAyzC,EAAA3hC,EAAAtzC,EAAAszC,EACAtzC,EAAAszC,EAAA2hC,EAAAzzC,EAAA8R,GAAA,EACA8N,GAAA7uE,KAAAytB,GACAusB,EAAAh6C,KAAA8B,CACA,OAGA4gG,EAAA3hC,GAAA,EACA/mB,EAAAvsB,EACAA,IAAA+hC,SACOxV,EAAA+mB,EACP/mB,OAAA+mB,GAAA,MAiEA5jB,GAAA+kD,KAAAS,QAAA,SAAAlpC,GAGA,QAAAkpC,GAAAp5F,GACA,GAAAq5F,GAAA,GAAAj9F,OAAA4D,EAAApH,QAAA21D,EAAA0N,EAAA,MAAA5N,EAAA4N,EAAA,MAAA3G,EAAA2G,EAAA,MAAA1G,EAAA0G,EAAA,KAQA,OAPAuJ,IAAAC,EAAAzlE,GAAAi8D,GAAAsH,MAAAjjE,QAAA,SAAA6iE,EAAArsE,GACA,GAAAksE,GAAAG,EAAAH,MAAA3C,EAAA8C,EAAA9C,MAAAg5B,EAAAviG,GAAAksE,EAAApqE,OAAAoqE,EAAAvoE,IAAA,SAAApC,GACA,GAAAF,GAAAE,EAAA8hB,OACA,QAAAhiB,EAAAi5C,EAAAj5C,EAAAijD,KACSilB,EAAAjvB,GAAAmd,GAAA8R,EAAAjvB,GAAAkkB,GAAA+K,EAAAjlB,GAAAiT,GAAAgS,EAAAjlB,GAAAma,IAAAhH,EAAAgH,IAAAD,EAAAC,IAAAD,EAAAjH,IAAAE,EAAAF,QACT9T,MAAAv6C,EAAAlJ,KAEAuiG,EAEA,QAAA5zB,GAAAzlE,GACA,MAAAA,GAAAvF,IAAA,SAAAtD,EAAAL,GACA,OACAs6C,EAAAnd,KAAA4a,MAAAm2B,EAAA7tE,EAAAL,GAAA+2D,OACAzS,EAAAnnB,KAAA4a,MAAAo2B,EAAA9tE,EAAAL,GAAA+2D,OACA/2D,OAlBA,GAAAs6C,GAAA8tB,GAAA9jB,EAAA+jB,GAAA6F,EAAA5zB,EAAA6zB,EAAA7pB,EAAA6gB,EAAAq9B,EACA,OAAAppC,GAAAkpC,EAAAlpC,IAqBAkpC,EAAAhsB,MAAA,SAAAptE,GACA,MAAAwlE,IAAAC,EAAAzlE,IAAAgjE,MAAA/nC,OAAA,SAAAmlC,GACA,MAAAA,GAAArpE,GAAAqpE,EAAAviB,IACOpjD,IAAA,SAAA2lE,GACP,OACAp6D,OAAAhG,EAAAogE,EAAArpE,EAAAD,GACA4rC,OAAA1iC,EAAAogE,EAAAviB,EAAA/mD,OAIAsiG,EAAAG,UAAA,SAAAv5F,GACA,GAAAu5F,KAaA,OAZA/zB,IAAAC,EAAAzlE,IAAAujE,MAAAjjE,QAAA,SAAA6iE,EAAArsE,GAEA,IADA,GAAA0iG,GAAAn5B,EAAA8C,EAAA9C,KAAA2C,EAAAG,EAAAH,MAAA3kE,KAAAwlE,IAAAzrB,GAAA,EAAAnhD,EAAA+rE,EAAApqE,OAAAw7C,EAAA4uB,EAAA/rE,EAAA,GAAAmpE,KAAAqP,EAAAr7B,EAAAr9C,IAAAspE,EAAAjsB,EAAAyJ,EAAAzJ,EAAAr9C,IACAqhD,EAAAnhD,GACAm9C,EACAolD,EAAA/pB,EACAr7B,EAAA4uB,EAAA5qB,GAAAgoB,KACAqP,EAAAr7B,EAAAr9C,IAAAspE,EAAAjsB,EAAAyJ,EAAAzJ,EAAAr9C,EACAD,EAAA0iG,EAAA1iG,KAAA24E,EAAA34E,GAAA+uE,GAAAxF,EAAAm5B,EAAA/pB,GAAA,GACA8pB,EAAAp5F,MAAAH,EAAAlJ,GAAAkJ,EAAAw5F,EAAA1iG,GAAAkJ,EAAAyvE,EAAA34E,OAIAyiG,GAEAH,EAAAhoD,EAAA,SAAA74C,GACA,MAAAy3B,WAAAp3B,QAAAosE,EAAA3lB,GAAAjO,EAAA74C,GAAA6gG,GAAAhoD,GAEAgoD,EAAAh+C,EAAA,SAAA7iD,GACA,MAAAy3B,WAAAp3B,QAAAqsE,EAAA5lB,GAAAjE,EAAA7iD,GAAA6gG,GAAAh+C,GAEAg+C,EAAAn9B,WAAA,SAAA1jE,GACA,MAAAy3B,WAAAp3B,QACAqjE,EAAA,MAAA1jE,EAAA+gG,GAAA/gG,EACA6gG,GAFAn9B,IAAAq9B,GAAA,KAAAr9B,GAIAm9B,EAAA/4F,KAAA,SAAA9H,GACA,MAAAy3B,WAAAp3B,OACAwgG,EAAAn9B,WAAA1jE,KAAA,KAAAA,IADA0jE,IAAAq9B,GAAA,KAAAr9B,KAAA,IAGAm9B,GAEA,IAAAE,OAAA,oBAIA1lD,IAAA+kD,KAAAc,SAAA,SAAAb,GACA,MAAAhlD,IAAA+kD,KAAAS,UAAAG,UAAAX,IAEAhlD,GAAA+kD,KAAAe,SAAA,SAAAxpC,EAAAoF,EAAAC,EAAAiF,EAAAC,GAYA,QAAAi/B,GAAA15F,GA4BA,QAAAkiE,GAAAtqE,EAAAT,EAAAi6C,EAAAgK,EAAAka,EAAAC,EAAAiF,EAAAC,GACA,IAAA/6B,MAAA0R,KAAA1R,MAAA0b,GACA,GAAAxjD,EAAAquE,KAAA,CACA,GAAA0zB,GAAA/hG,EAAAw5C,EAAAwoD,EAAAhiG,EAAAwjD,CACA,UAAAu+C,EACA,GAAAn3C,GAAAm3C,EAAAvoD,GAAAoR,GAAAo3C,EAAAx+C,GAAA,IACAy+C,EAAAjiG,EAAAT,EAAAi6C,EAAAgK,EAAAka,EAAAC,EAAAiF,EAAAC,OACa,CACb,GAAAq/B,GAAAliG,EAAA2iD,KACA3iD,GAAAw5C,EAAAx5C,EAAAwjD,EAAAxjD,EAAA2iD,MAAA,KACAs/C,EAAAjiG,EAAAkiG,EAAAH,EAAAC,EAAAtkC,EAAAC,EAAAiF,EAAAC,GACAo/B,EAAAjiG,EAAAT,EAAAi6C,EAAAgK,EAAAka,EAAAC,EAAAiF,EAAAC,OAGA7iE,GAAAw5C,IAAAx5C,EAAAwjD,IAAAxjD,EAAA2iD,MAAApjD,MAGA0iG,GAAAjiG,EAAAT,EAAAi6C,EAAAgK,EAAAka,EAAAC,EAAAiF,EAAAC,GAGA,QAAAo/B,GAAAjiG,EAAAT,EAAAi6C,EAAAgK,EAAAka,EAAAC,EAAAiF,EAAAC,GACA,GAAAiM,GAAA,IAAApR,EAAAkF,GAAAmM,EAAA,IAAApR,EAAAkF,GAAA9oB,EAAAP,GAAAs1B,EAAAE,EAAAxrB,GAAAurB,EAAA7vE,EAAA8vE,GAAA,EAAAj1B,CACA/5C,GAAAquE,MAAA,EACAruE,IAAAsuE,MAAApvE,KAAAc,EAAAsuE,MAAApvE,GAAAkvE,MACAr0B,EAAA2jB,EAAAoR,EAA2BlM,EAAAkM,EAC3BE,EAAArR,EAAAoR,EAA2BlM,EAAAkM,EAC3BzE,EAAAtqE,EAAAT,EAAAi6C,EAAAgK,EAAAka,EAAAC,EAAAiF,EAAAC,GArDA,GAAAtjE,GAAA4iG,EAAAC,EAAAljG,EAAAc,EAAAqiG,EAAAC,EAAAC,EAAAC,EAAAp1B,EAAA3lB,GAAAjO,GAAA6zB,EAAA5lB,GAAAjE,EACA,UAAAka,EACA2kC,EAAA3kC,EAAA4kC,EAAA3kC,EAAA4kC,EAAA3/B,EAAA4/B,EAAA3/B,MAKA,IAHA0/B,EAAAC,IAAAH,EAAAC,EAAAp2E,KACAi2E,KAAAC,KACApiG,EAAAoI,EAAApH,OACAyhG,EAAA,IAAAvjG,EAAA,EAA+BA,EAAAc,IAAOd,EACtCK,EAAA6I,EAAAlJ,GACAK,EAAAi6C,EAAA6oD,MAAA9iG,EAAAi6C,GACAj6C,EAAAikD,EAAA8+C,MAAA/iG,EAAAikD,GACAjkD,EAAAi6C,EAAA+oD,MAAAhjG,EAAAi6C,GACAj6C,EAAAikD,EAAAg/C,MAAAjjG,EAAAikD,GACA2+C,EAAA55F,KAAAhJ,EAAAi6C,GACA4oD,EAAA75F,KAAAhJ,EAAAikD,OACS,KAAAtkD,EAAA,EAAiBA,EAAAc,IAAOd,EAAA,CACjC,GAAA0/D,IAAAwO,EAAA7tE,EAAA6I,EAAAlJ,MAAA2/D,GAAAwO,EAAA9tE,EAAAL,EACA0/D,GAAAyjC,MAAAzjC,GACAC,EAAAyjC,MAAAzjC,GACAD,EAAA2jC,MAAA3jC,GACAC,EAAA2jC,MAAA3jC,GACAsjC,EAAA55F,KAAAq2D,GACAwjC,EAAA75F,KAAAs2D,GAGA,GAAAb,GAAAukC,EAAAF,EAAApkC,EAAAukC,EAAAF,CACAtkC,GAAAC,EAAAukC,EAAAF,EAAAtkC,EAAkCukC,EAAAF,EAAApkC,CA6BlC,IAAA3/D,GAAA8vE,IAWA,IAVA9vE,EAAA2E,IAAA,SAAA1D,GACA+qE,EAAAhsE,EAAAiB,GAAA6tE,EAAA7tE,IAAAL,IAAAmuE,EAAA9tE,EAAAL,GAAAmjG,EAAAC,EAAAC,EAAAC,IAEAlkG,EAAAokG,MAAA,SAAAp/C,GACAirB,GAAAjrB,EAAAhlD,EAAA+jG,EAAAC,EAAAC,EAAAC,IAEAlkG,EAAAi1C,KAAA,SAAAoP,GACA,MAAA+rB,IAAApwE,EAAAqkD,EAAA,GAAAA,EAAA,GAAA0/C,EAAAC,EAAAC,EAAAC,IAEAtjG,GAAA,EACA,MAAAw+D,EAAA,CACA,OAAAx+D,EAAAc,GACAsqE,EAAAhsE,EAAA8J,EAAAlJ,GAAAijG,EAAAjjG,GAAAkjG,EAAAljG,GAAAmjG,EAAAC,EAAAC,EAAAC,KAEAtjG,MACOkJ,GAAAM,QAAApK,EAAA2E,IAEP,OADAk/F,GAAAC,EAAAh6F,EAAA7I,EAAA,KACAjB,EArFA,GAAAmkG,GAAAjpD,EAAA8tB,GAAA9jB,EAAA+jB,EACA,QAAAk7B,EAAArqE,UAAAp3B,SACAw4C,EAAA00B,GACA1qB,EAAA2qB,GACA,IAAAs0B,IACA5/B,EAAAlF,EACAiF,EAAAlF,EACAC,EAAAD,EAAA,GAEAokC,EAAAxpC,KA8EAwpC,EAAAtoD,EAAA,SAAA74C,GACA,MAAAy3B,WAAAp3B,QAAAw4C,EAAA74C,EAAAmhG,GAAAtoD,GAEAsoD,EAAAt+C,EAAA,SAAA7iD,GACA,MAAAy3B,WAAAp3B,QAAAwiD,EAAA7iD,EAAAmhG,GAAAt+C,GAEAs+C,EAAAx2B,OAAA,SAAA3qE,GACA,MAAAy3B,WAAAp3B,QACA,MAAAL,EAAA+8D,EAAAC,EAAAiF,EAAAC,EAAA,MAA8CnF,GAAA/8D,EAAA,MAAAg9D,GAAAh9D,EAAA,MAAAiiE,GAAAjiE,EAAA,MAC9CkiE,GAAAliE,EAAA,OACAmhG,GAHA,MAAApkC,EAAA,OAAAA,EAAAC,IAAAiF,EAAAC,KAKAi/B,EAAAr5F,KAAA,SAAA9H,GACA,MAAAy3B,WAAAp3B,QACA,MAAAL,EAAA+8D,EAAAC,EAAAiF,EAAAC,EAAA,MAA8CnF,EAAAC,EAAA,EAAAiF,GAAAjiE,EAAA,GAAAkiE,GAAAliE,EAAA,IAC9CmhG,GAFA,MAAApkC,EAAA,MAAAkF,EAAAlF,EAAAmF,EAAAlF,IAIAmkC,IA8DA9lD,GAAA2mD,eAAA1zB,GASAjzB,GAAA4mD,kBAAApzB,GAoBAxzB,GAAA6mD,kBAAAnzB,GAOA1zB,GAAA8mD,kBAAAnzB,EAiCA,IAAAK,IAAA,8CAAAC,GAAA,GAAA9hE,QAAA6hE,GAAA5hE,OAAA,IACA4tC,IAAA5P,YAAAqjC,GAMAzzB,GAAAk0B,eAAA,SAAA92B,EAAAC,GACA,GAAAwQ,SAAAxQ,EACA,mBAAAwQ,EAAAtC,GAAArgD,IAAAmyC,EAAAzO,gBAAA,oBAAA7iC,KAAAsxC,GAAA41B,GAAAU,GAAAt2B,YAAA6L,IAAA+pB,GAAAzqE,MAAAoc,QAAAy4B,GAAA82B,GAAA,WAAAtmB,GAAA/hB,MAAAuR,GAAAm2B,GAAAE,IAAAt2B,EAAAC,KAEA2C,GAAA+mD,iBAAA5yB,EAWA,IAAA6yB,IAAA,WACA,MAAAhoD,IAEAioD,GAAAjnD,GAAAn5C,KACAw3E,OAAA2oB,GACAE,KAAApyB,GACAmE,KAAA,WACA,MAAAvE,KAEAyyB,MAAA,WACA,MAAAxyB,KAEA1rB,IAAA,WACA,MAAA8rB,KAEAlsB,IAAA,WACA,MAAAmsB,KAEAtI,OAAA,WACA,MAAAuI,KAEAmyB,QAAAlyB,GACAmyB,KAAAlyB,GACAmyB,OAAA,WACA,MAAAlyB,OAGAmyB,GAAAvnD,GAAAn5C,KACA2gG,GAAAxoD,EACAyoD,IAAAjzB,GACAkzB,SAAAjzB,GACAkzB,SAAA,SAAArgD,GACA,MAAAmtB,IAAAD,GAAAltB,MAGAtH,IAAA6mC,KAAA,SAAArjF,GACA,GAAAN,GAAAM,EAAAuxB,QAAA,KAAA84B,EAAA3qD,GAAA,EAAAM,EAAAi1B,MAAA,EAAAv1B,GAAAM,EAAAH,EAAAH,GAAA,EAAAM,EAAAi1B,MAAAv1B,EAAA,OAGA,OAFA2qD,GAAAo5C,GAAAljG,IAAA8pD,IAAAm5C,GACA3jG,EAAAkkG,GAAAxjG,IAAAV,IAAA27C,EACAu1B,GAAAlxE,EAAAwqD,EAAA3mD,MAAA,KAAAkhF,GAAAhlF,KAAAg5B,UAAA,OA4DA4jB,GAAA4nD,eAAAvyB,GAWAr1B,GAAA6nD,eAAAhyB,GAWA71B,GAAA8nD,eAAA/xB,GASA/1B,GAAA+nD,iBAAA5xB,GAOAn2B,GAAApzC,UAAA,SAAA3D,GACA,GAAApE,GAAAkjF,GAAAjkC,gBAAA9D,GAAAgC,GAAAhP,OAAAwT,IAAA,IACA,QAAAxG,GAAApzC,UAAA,SAAA3D,GACA,SAAAA,EAAA,CACApE,EAAA88C,aAAA,YAAA14C,EACA,IAAA4kD,GAAAhpD,EAAA+H,UAAAo7F,QAAAC,cAEA,UAAA7xB,IAAAvoB,IAAA87B,OAAAue,MACKj/F,IAeLmtE,GAAAhyE,UAAAk0B,SAAA,WACA,mBAAAz1B,KAAA0lE,UAAA,WAAA1lE,KAAA+5D,OAAA,UAAA/5D,KAAAg0E,KAAA,UAAAh0E,KAAAgsD,MAAA,IAkBA,IAAAq5C,KACA9qD,EAAA,EACAC,EAAA,EACA/5C,EAAA,EACAC,EAAA,EACAkB,EAAA,EACA6iD,EAAA,EAEAtH,IAAAmoD,qBAAAxwB,GA+EA33B,GAAAooD,UACApoD,GAAAooD,OAAAC,OAAA,WACA,gBAAA7uB,GAEA,IADA,GAAAluD,MAAApoB,GAAA,EAAAc,EAAAw1E,EAAAx0E,SACA9B,EAAAc,GAAAsnB,EAAA/e,KAAAurE,GAAA0B,EAAAt2E,IACA,OAAAooB,KAoCA00B,GAAAooD,OAAAE,MAAA,WAEA,QAAAC,KACA,GAAwBrqD,GAAAV,EAAAmd,EAAAz3D,EAAAshD,EAAxB2mC,KAAwBqd,KAAAC,EAAAzoD,GAAAzF,MAAAv2C,GAAA0kG,IAIxB,KAHAC,KACAhoD,KACAzC,EAAA,EAAAh7C,GAAA,IACAA,EAAAc,GAAA,CAEA,IADAw5C,EAAA,EAAAgH,GAAA,IACAA,EAAAxgD,GACAw5C,GAAAmsC,EAAAzmF,GAAAshD,EAEAgkD,GAAAj8F,KAAAixC,GACAkrD,EAAAn8F,KAAAyzC,GAAAzF,MAAAv2C,IACAk6C,GAAAV,EAgBA,IAdAorD,GACAH,EAAAh+F,KAAA,SAAA2yC,EAAAC,GACA,MAAAurD,GAAAJ,EAAAprD,GAAAorD,EAAAnrD,MAGAwrD,GACAH,EAAAh8F,QAAA,SAAAnJ,EAAAL,GACAK,EAAAkH,KAAA,SAAA2yC,EAAAC,GACA,MAAAwrD,GAAAlf,EAAAzmF,GAAAk6C,GAAAusC,EAAAzmF,GAAAm6C,QAIAa,GAAAqhB,GAAArY,EAAAljD,GAAAk6C,EACAV,EAAA,EAAAt6C,GAAA,IACAA,EAAAc,GAAA,CAEA,IADA22D,EAAAnd,EAAAgH,GAAA,IACAA,EAAAxgD,GAAA,CACA,GAAA8kG,GAAAL,EAAAvlG,GAAA6lG,EAAAL,EAAAI,GAAAtkD,GAAA1/C,EAAA6kF,EAAAmf,GAAAC,GAAA9iC,EAAAzoB,EAAAilB,EAAAjlB,GAAA14C,EAAAo5C,CACAitC,GAAA2d,EAAA,IAAAC,IACAphG,MAAAmhG,EACAE,SAAAD,EACAznB,WAAArb,EACAub,SAAA/e,EACAl8D,MAAAzB,GAGA67C,EAAAmoD,IACAnhG,MAAAmhG,EACAxnB,WAAA3mB,EACA6mB,SAAAhkC,EACAj3C,MAAAiiG,EAAAM,IAEAtrD,GAAA0J,EAGA,IADAhkD,GAAA,IACAA,EAAAc,GAEA,IADAwgD,EAAAthD,EAAA,IACAshD,EAAAxgD,GAAA,CACA,GAAAoO,GAAA+4E,EAAAjoF,EAAA,IAAAshD,GAAA1V,EAAAq8C,EAAA3mC,EAAA,IAAAthD,IACAkP,EAAA7L,OAAAuoC,EAAAvoC,QACAoiG,EAAAp8F,KAAA6F,EAAA7L,MAAAuoC,EAAAvoC,OACA6L,OAAA08B,EACAA,OAAA18B,IAEAA,SACA08B,WAKAm6D,GAAAC,IAEA,QAAAA,KACAP,EAAAl+F,KAAA,SAAA2yC,EAAAC,GACA,MAAA4rD,IAAA7rD,EAAAhrC,OAAA7L,MAAA62C,EAAAtO,OAAAvoC,OAAA,GAAA82C,EAAAjrC,OAAA7L,MAAA82C,EAAAvO,OAAAvoC,OAAA,KArEA,GAAkBoiG,GAAAhoD,EAAAgpC,EAAA3lF,EAAA4kG,EAAAC,EAAAI,EAAlBX,KAAkBphD,EAAA,CA8GlB,OAtCAohD,GAAA3e,OAAA,SAAAnsC,GACA,MAAAphB,WAAAp3B,QACAhB,GAAA2lF,EAAAnsC,IAAAmsC,EAAA3kF,OACA2jG,EAAAhoD,EAAA,KACA2nD,GAHA3e,GAKA2e,EAAAphD,QAAA,SAAA1J,GACA,MAAAphB,WAAAp3B,QACAkiD,EAAA1J,EACAmrD,EAAAhoD,EAAA,KACA2nD,GAHAphD,GAKAohD,EAAAM,WAAA,SAAAprD,GACA,MAAAphB,WAAAp3B,QACA4jG,EAAAprD,EACAmrD,EAAAhoD,EAAA,KACA2nD,GAHAM,GAKAN,EAAAO,cAAA,SAAArrD,GACA,MAAAphB,WAAAp3B,QACA6jG,EAAArrD,EACAmrD,EAAA,KACAL,GAHAO,GAKAP,EAAAW,WAAA,SAAAzrD,GACA,MAAAphB,WAAAp3B,QACAikG,EAAAzrD,EACAmrD,GAAAO,IACAZ,GAHAW,GAKAX,EAAAK,OAAA,WAEA,MADAA,IAAAJ,IACAI,GAEAL,EAAA3nD,OAAA,WAEA,MADAA,IAAA4nD,IACA5nD,GAEA2nD,GAEAtoD,GAAAooD,OAAAe,MAAA,WAEA,QAAAC,GAAAvsD,GACA,gBAAAo8B,EAAAvX,EAAA/8D,EAAAiiE,GACA,GAAAqS,EAAAtyB,QAAA9J,EAAA,CACA,GAAAmlB,GAAAiX,EAAA9d,GAAAte,EAAAW,EAAAykB,EAAAgX,EAAA7d,GAAAve,EAAA2K,EAAA6hD,EAAAziC,EAAAlF,EAAA4nC,EAAAtnC,IAAAC,GACA,IAAAonC,IAAAE,EAAAD,EAAA,CACA,GAAAA,EAAAE,EAAA,CACA,GAAAtrD,GAAA+6B,EAAAG,OAAAkwB,CACAzsD,GAAAg8B,IAAA7W,EAAA9jB,EACArB,EAAAi8B,IAAA7W,EAAA/jB,EAEA,SAEA,GAAA+6B,EAAAtyB,OAAA2iD,KAAAE,EAAA,CACA,GAAAtrD,GAAA+6B,EAAAI,YAAAiwB,CACAzsD,GAAAg8B,IAAA7W,EAAA9jB,EACArB,EAAAi8B,IAAA7W,EAAA/jB,GAGA,OAAA+6B,EAAAG,QAgMA,QAAAqwB,GAAAlmG,GACAA,EAAAs1E,GAAA74B,GAAAP,MAAAjC,EAAAj6C,EAAAu1E,GAAA94B,GAAAP,MAAA+H,EACA2hD,EAAAO,SArNA,GAAkB97C,GAAA0/B,EAAApU,EAAAywB,EAAAC,EAAAzwB,EAAlBgwB,KAAkB1pD,EAAAO,GAAAR,SAAA,sBAAA/yC,GAAA,KAAAo9F,EAAA,GAAAC,EAAAC,GAAAC,EAAAC,GAAA7wB,GAAA,GAAAowB,EAAAU,GAAAC,EAAA,GAAAZ,EAAA,IAAAj3B,KAAAkH,IAuNlB,OAjMA2vB,GAAAxiB,KAAA,WACA,IAAAzN,GAAA,UAMA,MALAtrB,GAAA,KACAnO,EAAAj5B,KACAQ,KAAA,MACAkyD,QAAA,KAEA,CAEA,IAAA9X,GAAAl+D,EAAAQ,EAAAa,EAAAspD,EAAA1qD,EAAA+6C,EAAAV,EAAAgK,EAAAxjD,EAAAsuE,EAAAttE,OAAA3B,EAAAm2E,EAAAx0E,MACA,KAAA9B,EAAA,EAAiBA,EAAAG,IAAOH,EACxBQ,EAAA81E,EAAAt2E,GACAqB,EAAAb,EAAA0O,OACAy7C,EAAAnqD,EAAAorC,OACA0O,EAAAqQ,EAAArQ,EAAAj5C,EAAAi5C,EACAgK,EAAAqG,EAAArG,EAAAjjD,EAAAijD,GACArkD,EAAAq6C,IAAAgK,OACArkD,EAAA+1E,EAAA0wB,EAAA1mG,KAAAC,EAAAk9B,KAAAwqB,KAAA1nD,IAAAwmG,EAAAzmG,IAAAC,EACAq6C,GAAAr6C,EACAqkD,GAAArkD,EACA0qD,EAAArQ,MAAAU,EAAA35C,EAAA6lG,OAAAv8C,EAAAu8C,OAAA7lG,EAAA6lG,QAAA7lG,EAAA6lG,OAAAv8C,EAAAu8C,QAAA,IACAv8C,EAAArG,KAAAtJ,EACA35C,EAAAi5C,MAAAU,EAAA,EAAAA,GACA35C,EAAAijD,KAAAtJ,EAGA,KAAAA,EAAAg7B,EAAAixB,KACA3sD,EAAA/wC,EAAA,KACA+6C,EAAA/6C,EAAA,KACAvJ,GAAA,EACAg7C,GAAA,OAAAh7C,EAAAc,GACAN,EAAA4uE,EAAApvE,GACAQ,EAAA85C,MAAA95C,EAAA85C,GAAAU,EACAx6C,EAAA8jD,MAAA9jD,EAAA8jD,GAAAtJ,CAGA,IAAAk7B,EAGA,IAFAJ,GAAA5X,EAAAphB,GAAA+kD,KAAAe,SAAAxzB,GAAA4G,EAAAC,GACAj2E,GAAA,IACAA,EAAAc,IACAN,EAAA4uE,EAAApvE,IAAAw1E,OACAtX,EAAAslC,MAAA0C,EAAA1lG,GAKA,KADAR,GAAA,IACAA,EAAAc,GACAN,EAAA4uE,EAAApvE,GACAQ,EAAAg1E,OACAh1E,EAAA85C,EAAA95C,EAAAm1E,GACAn1E,EAAA8jD,EAAA9jD,EAAAo1E,KAEAp1E,EAAA85C,IAAA95C,EAAAm1E,IAAAn1E,EAAAm1E,GAAAn1E,EAAA85C,IAAAqsD,EACAnmG,EAAA8jD,IAAA9jD,EAAAo1E,IAAAp1E,EAAAo1E,GAAAp1E,EAAA8jD,IAAAqiD,EAGApqD,GAAAknC,MACA3/D,KAAA,OACAkyD,WAGAiwB,EAAA72B,MAAA,SAAA90B,GACA,MAAAphB,WAAAp3B,QACAstE,EAAA90B,EACA2rD,GAFA72B,GAIA62B,EAAA3vB,MAAA,SAAAh8B,GACA,MAAAphB,WAAAp3B,QACAw0E,EAAAh8B,EACA2rD,GAFA3vB,GAIA2vB,EAAA18F,KAAA,SAAA+wC,GACA,MAAAphB,WAAAp3B,QACAyH,EAAA+wC,EACA2rD,GAFA18F,GAIA08F,EAAAW,aAAA,SAAAtsD,GACA,MAAAphB,WAAAp3B,QACA8kG,EAAA,kBAAAtsD,QACA2rD,GAFAW,GAIAX,EAAAh/B,SAAAg/B,EAAAW,aACAX,EAAAa,aAAA,SAAAxsD,GACA,MAAAphB,WAAAp3B,QACAglG,EAAA,kBAAAxsD,QACA2rD,GAFAa,GAIAb,EAAAU,SAAA,SAAArsD,GACA,MAAAphB,WAAAp3B,QACA6kG,GAAArsD,EACA2rD,GAFAU,GAIAV,EAAA/vB,OAAA,SAAA57B,GACA,MAAAphB,WAAAp3B,QACAo0E,EAAA,kBAAA57B,QACA2rD,GAFA/vB,GAIA+vB,EAAAkB,eAAA,SAAA7sD,GACA,MAAAphB,WAAAp3B,QACAwkG,EAAAhsD,IACA2rD,GAFA9oE,KAAAwqB,KAAA2+C,IAIAL,EAAAgB,QAAA,SAAA3sD,GACA,MAAAphB,WAAAp3B,QACAmlG,GAAA3sD,EACA2rD,GAFAgB,GAIAhB,EAAAmB,MAAA,SAAA9sD,GACA,MAAAphB,WAAAp3B,QACAukG,EAAA/rD,IACA2rD,GAFA9oE,KAAAwqB,KAAA0+C,IAIAJ,EAAAjwB,MAAA,SAAA17B,GACA,MAAAphB,WAAAp3B,QACAw4C,KACA07B,EACA17B,EAAA,EACA07B,EAAA17B,GAEAoQ,EAAAtqD,EAAA,KAAAsqD,EAAAC,EAAAvQ,IAAAsQ,EAAA,KACAnO,EAAAj5B,KACAQ,KAAA,MACAkyD,QAAA,KAGO17B,EAAA,IACPiC,EAAAl5B,OACAS,KAAA,QACAkyD,QAAA17B,IAEAoQ,EAAAF,GAAAy7C,EAAAxiB,OAEAwiB,GAnBAjwB,GAqBAiwB,EAAA5iF,MAAA,WA0BA,QAAAwoB,GAAAw7D,EAAA99F,GACA,IAAA+9F,EAAA,CAEA,IADAA,EAAA,GAAAhiG,OAAAxE,GACAwgD,EAAA,EAAqBA,EAAAxgD,IAAOwgD,EAC5BgmD,EAAAhmD,KAEA,KAAAA,EAAA,EAAqBA,EAAAnhD,IAAOmhD,EAAA,CAC5B,GAAA9gD,GAAA81E,EAAAh1B,EACAgmD,GAAA9mG,EAAA0O,OAAAzK,OAAA4E,KAAA7I,EAAAorC,QACA07D,EAAA9mG,EAAAorC,OAAAnnC,OAAA4E,KAAA7I,EAAA0O,SAIA,IADA,GAAAorC,GAAAitD,EAAAD,EAAAtnG,GAAAshD,GAAA,EAAArhD,EAAAsnG,EAAAzlG,SACAw/C,EAAArhD,GAAA,IAAA2oC,MAAA0R,EAAAitD,EAAAjmD,GAAA+lD,IAAA,MAAA/sD,EACA,OAAAnd,MAAAkO,SAAA9hC,EAvCA,GAAAvJ,GAAAsnG,EAAA9mG,EAAAM,EAAAsuE,EAAAttE,OAAA3B,EAAAm2E,EAAAx0E,OAAAG,EAAAsH,EAAA,GAAA28C,EAAA38C,EAAA,EACA,KAAAvJ,EAAA,EAAiBA,EAAAc,IAAOd,GACxBQ,EAAA4uE,EAAApvE,IAAAyE,MAAAzE,EACAQ,EAAA0mG,OAAA,CAEA,KAAAlnG,EAAA,EAAiBA,EAAAG,IAAOH,EACxBQ,EAAA81E,EAAAt2E,GACA,gBAAAQ,GAAA0O,SAAA1O,EAAA0O,OAAAkgE,EAAA5uE,EAAA0O,SACA,gBAAA1O,GAAAorC,SAAAprC,EAAAorC,OAAAwjC,EAAA5uE,EAAAorC,WACAprC,EAAA0O,OAAAg4F,SACA1mG,EAAAorC,OAAAs7D,MAEA,KAAAlnG,EAAA,EAAiBA,EAAAc,IAAOd,EACxBQ,EAAA4uE,EAAApvE,GACA4oC,MAAApoC,EAAA85C,KAAA95C,EAAA85C,EAAAzO,EAAA,IAAA5pC,IACA2mC,MAAApoC,EAAA8jD,KAAA9jD,EAAA8jD,EAAAzY,EAAA,IAAAqa,IACAtd,MAAApoC,EAAAm1E,MAAAn1E,EAAAm1E,GAAAn1E,EAAA85C,GACA1R,MAAApoC,EAAAo1E,MAAAp1E,EAAAo1E,GAAAp1E,EAAA8jD,EAGA,IADAmiD,KACA,kBAAAG,GAAA,IAAA5mG,EAAA,EAAyDA,EAAAG,IAAOH,EAAAymG,EAAAzmG,IAAA4mG,EAAA1mG,KAAAP,KAAA22E,EAAAt2E,UAA2D,KAAAA,EAAA,EAAiBA,EAAAG,IAAOH,EAAAymG,EAAAzmG,GAAA4mG,CAEnJ,IADAF,KACA,kBAAAI,GAAA,IAAA9mG,EAAA,EAAyDA,EAAAG,IAAOH,EAAA0mG,EAAA1mG,IAAA8mG,EAAA5mG,KAAAP,KAAA22E,EAAAt2E,UAA2D,KAAAA,EAAA,EAAiBA,EAAAG,IAAOH,EAAA0mG,EAAA1mG,GAAA8mG,CAEnJ,IADA7wB,KACA,kBAAAC,GAAA,IAAAl2E,EAAA,EAAmDA,EAAAc,IAAOd,EAAAi2E,EAAAj2E,IAAAk2E,EAAAh2E,KAAAP,KAAAyvE,EAAApvE,UAAmD,KAAAA,EAAA,EAAiBA,EAAAc,IAAOd,EAAAi2E,EAAAj2E,GAAAk2E,CAiBrI,OAAA+vB,GAAAO,UAEAP,EAAAO,OAAA,WACA,MAAAP,GAAAjwB,MAAA,KAEAiwB,EAAA5rB,KAAA,WACA,MAAA4rB,GAAAjwB,MAAA,IAEAiwB,EAAA7b,KAAA,WAEA,GADAA,MAAAttC,GAAAyqC,SAAA6C,OAAAiB,OAAAvvC,GAAAY,GAAA,kBAAA64B,IAAA74B,GAAA,aAAA6pD,GAAA7pD,GAAA,gBAAA+4B,MACAv8C,UAAAp3B,OAAA,MAAAsoF,EACAzqF,MAAA+8C,GAAA,kBAAAg5B,IAAAh5B,GAAA,iBAAAm5B,IAAA31E,KAAAkqF,IAMAttC,GAAAuN,OAAA47C,EAAA1pD,EAAA,MA0CA,IAAAsqD,IAAA,GAAAE,GAAA,EAAAC,GAAAh6E,GACA8vB,IAAAooD,OAAA7uB,UAAA,WAEA,QAAAA,GAAAj3E,GACA,GAAAu6C,GAAA/wB,GAAAxpB,GAAAgwE,IAEA,KADAhwE,EAAA8rB,MAAA,EACA,OAAAyuB,EAAA/wB,EAAA7D,QAEA,GADAqqD,EAAA/lE,KAAAswC,IACA6tD,EAAA3lG,EAAA3B,KAAAm2E,EAAA18B,IAAAzuB,UAAApqB,EAAA0mG,EAAA1lG,QAAA,CAEA,IADA,GAAAhB,GAAA0mG,EAAA1wB,IACAh2E,GAAA,GACA8nB,EAAAvf,KAAAytE,EAAA0wB,EAAA1mG,IACAg2E,EAAA1pD,OAAAusB,EACAm9B,EAAA5rD,MAAAyuB,EAAAzuB,MAAA,CAEA7nB,KAAAs2C,EAAAt2C,MAAA,GACAs2C,EAAA93C,SAAA2lG,MAEAnkG,KAAAs2C,EAAAt2C,SAAAnD,KAAAm2E,EAAA18B,IAAAzuB,QAAA,SACAyuB,GAAA93C,QAQA,OALA40E,IAAAr3E,EAAA,SAAAu6C,GACA,GAAA6tD,GAAAp6E,CACA7lB,KAAAigG,EAAA7tD,EAAA93C,WAAA2lG,EAAAjgG,QACAlE,IAAA+pB,EAAAusB,EAAAvsB,YAAA/pB,OAAAs2C,EAAAt2C,SAEA+rE,EAzBA,GAAA7nE,GAAAsvE,GAAAh1E,EAAA80E,GAAAtzE,EAAAuzE,EAuDA,OA5BAP,GAAA9uE,KAAA,SAAA+yC,GACA,MAAAphB,WAAAp3B,QACAyF,EAAA+yC,EACA+7B,GAFA9uE,GAIA8uE,EAAAx0E,SAAA,SAAAy4C,GACA,MAAAphB,WAAAp3B,QACAD,EAAAy4C,EACA+7B,GAFAx0E,GAIAw0E,EAAAhzE,MAAA,SAAAi3C,GACA,MAAAphB,WAAAp3B,QACAuB,EAAAi3C,EACA+7B,GAFAhzE,GAIAgzE,EAAAoxB,QAAA,SAAAroG,GAWA,MAVAiE,KACAmzE,GAAAp3E,EAAA,SAAAu6C,GACAA,EAAA93C,WAAA83C,EAAAt2C,MAAA,KAEAozE,GAAAr3E,EAAA,SAAAu6C,GACA,GAAAvsB,EACAusB,GAAA93C,WAAA83C,EAAAt2C,SAAAnD,KAAAm2E,EAAA18B,IAAAzuB,QAAA,IACAkC,EAAAusB,EAAAvsB,YAAA/pB,OAAAs2C,EAAAt2C,UAGAjE,GAEAi3E,GAkDAv5B,GAAAooD,OAAAxwD,UAAA,WAEA,QAAA7I,GAAA8N,EAAAW,EAAAwkB,EAAAC,GACA,GAAAl9D,GAAA83C,EAAA93C,QAKA,IAJA83C,EAAAW,IACAX,EAAA2K,EAAA3K,EAAAzuB,MAAA6zC,EACAplB,EAAAmlB,KACAnlB,EAAAolB,KACAl9D,IAAAf,EAAAe,EAAAC,QAAA,CACA,GAAAhB,GAAAV,EAAAC,EAAAL,GAAA,CAEA,KADA8+D,EAAAnlB,EAAAt2C,MAAAy7D,EAAAnlB,EAAAt2C,MAAA,IACArD,EAAAc,GACA+qC,EAAAzrC,EAAAyB,EAAA7B,GAAAs6C,EAAAj6C,EAAAD,EAAAiD,MAAAy7D,EAAAC,GACAzkB,GAAAj6C,GAIA,QAAA6qB,GAAAyuB,GACA,GAAA93C,GAAA83C,EAAA93C,SAAAxB,EAAA,CACA,IAAAwB,IAAAf,EAAAe,EAAAC,QAEA,IADA,GAAAhB,GAAAd,GAAA,IACAA,EAAAc,GAAAT,EAAA88B,KAAA8S,IAAA5vC,EAAA6qB,EAAArpB,EAAA7B,IAEA,UAAAK,EAEA,QAAAq0C,GAAAr0C,EAAAL,GACA,GAAAovE,GAAAiH,EAAAn2E,KAAAP,KAAAU,EAAAL,EAEA,OADA6rC,GAAAujC,EAAA,KAAA7lE,EAAA,GAAAA,EAAA,GAAA2hB,EAAAkkD,EAAA,KACAA,EA3BA,GAAAiH,GAAAv5B,GAAAooD,OAAA7uB,YAAA9sE,GAAA,IAkCA,OALAmrC,GAAAnrC,KAAA,SAAA+wC,GACA,MAAAphB,WAAAp3B,QACAyH,EAAA+wC,EACA5F,GAFAnrC,GAIA6sE,GAAA1hC,EAAA2hC,IAEAv5B,GAAAooD,OAAAwC,IAAA,WAEA,QAAAA,GAAAx+F,GACA,GAEOtH,GAFPd,EAAAoI,EAAApH,OAAA0D,EAAA0D,EAAAvF,IAAA,SAAAtD,EAAAL,GACA,OAAAqD,EAAAnD,KAAAwnG,EAAArnG,EAAAL,KACOk6C,IAAA,kBAAAkkC,KAAAp6E,MAAArE,KAAAu5B,WAAAklD,GAAApF,GAAA,kBAAAsF,KAAAt6E,MAAArE,KAAAu5B,WAAAolD,GAAApkC,EAAA94C,EAAA+7B,KAAAkT,IAAAlT,KAAAuuB,IAAAstB,GAAAl4E,IAAA,kBAAA09E,KAAAx6E,MAAArE,KAAAu5B,WAAAslD,IAAAlhB,EAAAl8D,GAAA43E,EAAA,QAAAzoC,EAAAuM,GAAAvM,IAAA/qC,GAAAw1C,EAAAzK,GAAAyoC,EAAAl4E,EAAAw8D,GAAA/sB,EAAA,EAAA9rC,EAAAq4C,GAAAzF,MAAAv2C,GAAA6mG,IAeP,OAdA,OAAApgG,GAAA9C,EAAA8C,SAAAqgG,GAAA,SAAA5nG,EAAAshD,GACA,MAAA97C,GAAA87C,GAAA97C,EAAAxF,IACO,SAAAA,EAAAshD,GACP,MAAA/5C,GAAA2B,EAAAlJ,GAAAkJ,EAAAo4C,MAEA78C,EAAA+E,QAAA,SAAAxJ,GACA2nG,EAAA3nG,IACAkJ,OAAAlJ,GACAqD,MAAAzB,EAAA4D,EAAAxF,GACAo+E,WAAAlkC,EACAokC,SAAApkC,GAAAt4C,EAAAo5C,EAAAsiB,EACAkhB,SAAAp9E,KAGAumG,EAnBA,GAAAtkG,GAAA+3E,OAAA7zE,EAAAqgG,GAAAxpB,EAAA,EAAAE,EAAAjiB,GAAAmiB,EAAA,CA8CA,OAzBAkpB,GAAArkG,MAAA,SAAA5B,GACA,MAAAy3B,WAAAp3B,QACAuB,EAAA5B,EACAimG,GAFArkG,GAIAqkG,EAAAngG,KAAA,SAAA9F,GACA,MAAAy3B,WAAAp3B,QACAyF,EAAA9F,EACAimG,GAFAngG,GAIAmgG,EAAAtpB,WAAA,SAAA38E,GACA,MAAAy3B,WAAAp3B,QACAs8E,EAAA38E,EACAimG,GAFAtpB,GAIAspB,EAAAppB,SAAA,SAAA78E,GACA,MAAAy3B,WAAAp3B,QACAw8E,EAAA78E,EACAimG,GAFAppB,GAIAopB,EAAAlpB,SAAA,SAAA/8E,GACA,MAAAy3B,WAAAp3B,QACA08E,EAAA/8E,EACAimG,GAFAlpB,GAIAkpB,EAEA,IAAAE,MACA9qD,IAAAooD,OAAAt8E,MAAA,WAEA,QAAAA,GAAA1f,EAAAzE,GACA,KAAA3D,EAAAoI,EAAApH,QAAA,MAAAoH,EACA,IAAA2+F,GAAA3+F,EAAAvF,IAAA,SAAAtD,EAAAL,GACA,MAAAwF,GAAAtF,KAAA0oB,EAAAvoB,EAAAL,KAEAo5D,EAAAyuC,EAAAlkG,IAAA,SAAAtD,GACA,MAAAA,GAAAsD,IAAA,SAAA/B,EAAA5B,GACA,OAAAs6C,EAAAp6C,KAAA0oB,EAAAhnB,EAAA5B,GAAAskD,EAAApkD,KAAA0oB,EAAAhnB,EAAA5B,QAGAoxB,EAAAk2D,EAAApnF,KAAA0oB,EAAAwwC,EAAA30D,EACAojG,GAAA/qD,GAAAwpC,QAAAuhB,EAAAz2E,GACAgoC,EAAAtc,GAAAwpC,QAAAltB,EAAAhoC,EACA,IACAtwB,GAAAd,EAAAshD,EAAA9gD,EADAsnG,EAAAriG,EAAAvF,KAAA0oB,EAAAwwC,EAAA30D,GACAtE,EAAA0nG,EAAA,GAAA/lG,MACA,KAAAw/C,EAAA,EAAiBA,EAAAnhD,IAAOmhD,EAExB,IADAijD,EAAArkG,KAAA0oB,EAAAi/E,EAAA,GAAAvmD,GAAA9gD,EAAAsnG,EAAAxmD,GAAA8X,EAAA,GAAA9X,GAAA,IACAthD,EAAA,EAAmBA,EAAAc,IAAOd,EAC1BukG,EAAArkG,KAAA0oB,EAAAi/E,EAAA7nG,GAAAshD,GAAA9gD,GAAA44D,EAAAp5D,EAAA,GAAAshD,GAAA,GAAA8X,EAAAp5D,GAAAshD,GAAA,GAGA,OAAAp4C,GAtBA,GAAA1D,GAAAs2C,EAAAwrC,EAAApQ,GAAAzxE,EAAA0xE,GAAAotB,EAAAttB,GAAA38B,EAAAy8B,GAAAzyB,EAAA0yB,EAsDA,OA9BApuD,GAAApjB,OAAA,SAAA80C,GACA,MAAAphB,WAAAp3B,QACA0D,EAAA80C,EACA1xB,GAFApjB,GAIAojB,EAAA0+D,MAAA,SAAAhtC,GACA,MAAAphB,WAAAp3B,QACAwlF,EAAA,kBAAAhtC,KAAAytD,GAAAlnG,IAAAy5C,IAAA48B,GACAtuD,GAFA0+D,GAIA1+D,EAAAnjB,OAAA,SAAA60C,GACA,MAAAphB,WAAAp3B,QACA2D,EAAA,kBAAA60C,KAAA0tD,GAAAnnG,IAAAy5C,IAAA68B,GACAvuD,GAFAnjB,GAIAmjB,EAAA0xB,EAAA,SAAAkC,GACA,MAAAtjB,WAAAp3B,QACAw4C,EAAAkC,EACA5zB,GAFA0xB,GAIA1xB,EAAA07B,EAAA,SAAA9H,GACA,MAAAtjB,WAAAp3B,QACAwiD,EAAA9H,EACA5zB,GAFA07B,GAIA17B,EAAA27E,IAAA,SAAA/nD,GACA,MAAAtjB,WAAAp3B,QACAyiG,EAAA/nD,EACA5zB,GAFA27E,GAIA37E,EAYA,IAAAm/E,IAAAjrD,GAAAn5C,KACAskG,aAAA,SAAA/+F,GACA,GAAAlJ,GAAAshD,EAAAxgD,EAAAoI,EAAApH,OAAAmuC,EAAA/mC,EAAAvF,IAAAyzE,IAAA8wB,EAAAh/F,EAAAvF,IAAA0zE,IAAA5yE,EAAAq4C,GAAAzF,MAAAv2C,GAAAyG,KAAA,SAAA2yC,EAAAC,GACA,MAAAlK,GAAAiK,GAAAjK,EAAAkK,KACO2J,EAAA,EAAAqkD,EAAA,EAAAC,KAAAC,IACP,KAAAroG,EAAA,EAAiBA,EAAAc,IAAOd,EACxBshD,EAAA78C,EAAAzE,GACA8jD,EAAAqkD,GACArkD,GAAAokD,EAAA5mD,GACA8mD,EAAA/+F,KAAAi4C,KAEA6mD,GAAAD,EAAA5mD,GACA+mD,EAAAh/F,KAAAi4C,GAGA,OAAA+mD,GAAA3tE,UAAAiG,OAAAynE,IAEA1tE,QAAA,SAAAxxB,GACA,MAAA4zC,IAAAzF,MAAAnuC,EAAApH,QAAA44B,WAEAz3B,QAAAi0E,KAEA8wB,GAAAlrD,GAAAn5C,KACA2kG,WAAA,SAAAp/F,GACA,GAAAlJ,GAAAshD,EAAA9gD,EAAAM,EAAAoI,EAAApH,OAAA3B,EAAA+I,EAAA,GAAApH,OAAAomG,KAAAj4D,EAAA,EAAAsnB,IACA,KAAAjW,EAAA,EAAiBA,EAAAnhD,IAAOmhD,EAAA,CACxB,IAAAthD,EAAA,EAAAQ,EAAA,EAA0BR,EAAAc,EAAOd,IAAAQ,GAAA0I,EAAAlJ,GAAAshD,GAAA,EACjC9gD,GAAAyvC,MAAAzvC,GACA0nG,EAAA7+F,KAAA7I,GAEA,IAAA8gD,EAAA,EAAiBA,EAAAnhD,IAAOmhD,EACxBiW,EAAAjW,IAAArR,EAAAi4D,EAAA5mD,IAAA,CAEA,OAAAiW,IAEAgxC,OAAA,SAAAr/F,GACA,GAAAlJ,GAAAshD,EAAAtG,EAAA29B,EAAAC,EAAA4vB,EAAA1pC,EAAAt+D,EAAAioG,EAAA3nG,EAAAoI,EAAApH,OAAAw4C,EAAApxC,EAAA,GAAA/I,EAAAm6C,EAAAx4C,OAAAy1D,IAEA,KADAA,EAAA,GAAA/2D,EAAAioG,EAAA,EACAnnD,EAAA,EAAiBA,EAAAnhD,IAAOmhD,EAAA,CACxB,IAAAthD,EAAA,EAAA24E,EAAA,EAA2B34E,EAAAc,IAAOd,EAAA24E,GAAAzvE,EAAAlJ,GAAAshD,GAAA,EAClC,KAAAthD,EAAA,EAAA44E,EAAA,EAAA9Z,EAAAxkB,EAAAgH,GAAA,GAAAhH,EAAAgH,EAAA,MAAuDthD,EAAAc,IAAOd,EAAA,CAC9D,IAAAg7C,EAAA,EAAAwtD,GAAAt/F,EAAAlJ,GAAAshD,GAAA,GAAAp4C,EAAAlJ,GAAAshD,EAAA,UAAAwd,GAA0E9jB,EAAAh7C,IAAOg7C,EACjFwtD,IAAAt/F,EAAA8xC,GAAAsG,GAAA,GAAAp4C,EAAA8xC,GAAAsG,EAAA,OAAAwd,CAEA8Z,IAAA4vB,EAAAt/F,EAAAlJ,GAAAshD,GAAA,GAEAiW,EAAAjW,GAAA9gD,GAAAm4E,EAAAC,EAAAD,EAAA7Z,EAAA,EACAt+D,EAAAioG,MAAAjoG,GAEA,IAAA8gD,EAAA,EAAiBA,EAAAnhD,IAAOmhD,EAAAiW,EAAAjW,IAAAmnD,CACxB,OAAAlxC,IAEAmxC,OAAA,SAAAx/F,GACA,GAAAlJ,GAAAshD,EAAA9gD,EAAAM,EAAAoI,EAAApH,OAAA3B,EAAA+I,EAAA,GAAApH,OAAAk5C,EAAA,EAAAl6C,EAAAy2D,IACA,KAAAjW,EAAA,EAAiBA,EAAAnhD,IAAOmhD,EAAA,CACxB,IAAAthD,EAAA,EAAAQ,EAAA,EAA0BR,EAAAc,EAAOd,IAAAQ,GAAA0I,EAAAlJ,GAAAshD,GAAA,EACjC,IAAA9gD,EAAA,IAAAR,EAAA,EAA0BA,EAAAc,EAAOd,IAAAkJ,EAAAlJ,GAAAshD,GAAA,IAAA9gD,MAAyB,KAAAR,EAAA,EAAiBA,EAAAc,EAAOd,IAAAkJ,EAAAlJ,GAAAshD,GAAA,GAAAtG,EAElF,IAAAsG,EAAA,EAAiBA,EAAAnhD,IAAOmhD,EAAAiW,EAAAjW,GAAA,CACxB,OAAAiW,IAEAoxC,KAAAxxB,IA0BAr6B,IAAAooD,OAAA0D,UAAA,WAEA,QAAAA,GAAA1/F,EAAAlJ,GAEA,IADA,GAAA6oG,GAAAvuD,EAAAwuD,KAAAtjG,EAAA0D,EAAAvF,IAAAolG,EAAAppG,MAAA03C,EAAAwlC,EAAA38E,KAAAP,KAAA6F,EAAAxF,GAAAu9E,EAAAyrB,EAAA9oG,KAAAP,KAAA03C,EAAA7xC,EAAAxF,MAAA,EAAAc,EAAA0E,EAAA1D,OAAA3B,EAAAo9E,EAAAz7E,OAAA,EAAAk5C,EAAAiuD,EAAA,IAAAnoG,IACAd,EAAAG,GACA0oG,EAAAC,EAAA9oG,MACA6oG,EAAA/pC,GAAAye,EAAAv9E,EAAA,IAAA6oG,EAAAvuD,EAAAijC,EAAAv9E,IACA6oG,EAAAvkD,EAAA,CAEA,IAAAnkD,EAAA,EAEA,IADAH,GAAA,IACAA,EAAAc,IACAw5C,EAAA90C,EAAAxF,KACAq3C,EAAA,IAAAiD,GAAAjD,EAAA,KACAwxD,EAAAC,EAAAhsD,GAAAk+B,OAAAuC,EAAAjjC,EAAA,EAAAn6C,GAAA,GACA0oG,EAAAvkD,GAAAtJ,EACA6tD,EAAAx/F,KAAAH,EAAAlJ,IAIA,OAAA8oG,GAnBA,GAAAG,IAAA,EAAAF,EAAA3tB,OAAAyB,EAAAnF,GAAAsxB,EAAAzxB,EA2CA,OAtBAqxB,GAAAvlG,MAAA,SAAAi3C,GACA,MAAAphB,WAAAp3B,QACAinG,EAAAzuD,EACAsuD,GAFAG,GAIAH,EAAAvxD,MAAA,SAAAiD,GACA,MAAAphB,WAAAp3B,QACA+6E,EAAAt0B,GAAAjO,GACAsuD,GAFA/rB,GAIA+rB,EAAAE,KAAA,SAAAxuD,GACA,MAAAphB,WAAAp3B,QACAknG,EAAA,gBAAA1uD,GAAA,SAAAjD,GACA,MAAAmgC,IAAAngC,EAAAiD,IACOiO,GAAAjO,GACPsuD,GAJAI,GAMAJ,EAAAK,UAAA,SAAA3uD,GACA,MAAAphB,WAAAp3B,QACAmnG,IAAA3uD,EACAsuD,GAFAK,GAIAL,GAaA9rD,GAAAooD,OAAAgE,KAAA,WAEA,QAAAA,GAAA7oG,EAAAL,GACA,GAAAovE,GAAAiH,EAAAn2E,KAAAP,KAAAU,EAAAL,GAAAZ,EAAAgwE,EAAA,GAAAntE,EAAAsH,EAAA,GAAA28C,EAAA38C,EAAA,GAAAw9C,EAAA,MAAA0V,EAAAt/B,KAAAwqB,KAAA,kBAAA8U,KAAA,WACA,MAAAA,GAOA,IALAr9D,EAAAk7C,EAAAl7C,EAAAklD,EAAA,EACAmyB,GAAAr3E,EAAA,SAAAiB,GACAA,EAAA0mD,KAAA1mD,EAAAgD,SAEAozE,GAAAr3E,EAAA84E,IACAl0B,EAAA,CACA,GAAAi0B,GAAAj0B,GAAAyY,EAAA,EAAAt/B,KAAA8S,IAAA,EAAA7wC,EAAA2nD,EAAA9kD,EAAA,EAAA7C,EAAA2nD,EAAAb,IAAA,CACAuwB,IAAAr3E,EAAA,SAAAiB,GACAA,EAAA0mD,GAAAkxB,IAEAxB,GAAAr3E,EAAA84E,IACAzB,GAAAr3E,EAAA,SAAAiB,GACAA,EAAA0mD,GAAAkxB,IAIA,MADAa,IAAA15E,EAAA6C,EAAA,EAAAikD,EAAA,EAAAuW,EAAA,IAAAt/B,KAAA8S,IAAA,EAAA7wC,EAAA2nD,EAAA9kD,EAAA,EAAA7C,EAAA2nD,EAAAb,IACAkpB,EArBA,GAAA3S,GAAA4Z,EAAAv5B,GAAAooD,OAAA7uB,YAAA9uE,KAAAowE,IAAA3zB,EAAA,EAAAz6C,GAAA,IAsCA,OAfA2/F,GAAA3/F,KAAA,SAAA9H,GACA,MAAAy3B,WAAAp3B,QACAyH,EAAA9H,EACAynG,GAFA3/F,GAIA2/F,EAAAzsC,OAAA,SAAAh7D,GACA,MAAAy3B,WAAAp3B,QACA26D,EAAA,MAAAh7D,GAAA,kBAAAA,QACAynG,GAFAzsC,GAIAysC,EAAAllD,QAAA,SAAAviD,GACA,MAAAy3B,WAAAp3B,QACAkiD,GAAAviD,EACAynG,GAFAllD,GAIAoyB,GAAA8yB,EAAA7yB,IAmHAv5B,GAAAooD,OAAA32B,KAAA,WAEA,QAAAA,GAAAluE,EAAAL,GACA,GAAAovE,GAAAiH,EAAAn2E,KAAAP,KAAAU,EAAAL,GAAAmpG,EAAA/5B,EAAA,GAAAg6B,EAAAC,EAAAF,EAGA,IAFA1yB,GAAA2yB,EAAAE,GAAAF,EAAAh8E,OAAAjtB,GAAAipG,EAAA5sD,EACAg6B,GAAA4yB,EAAAG,GACAC,EAAAhzB,GAAA2yB,EAAAM,OAAoE,CACpE,GAAA/uD,GAAAyuD,EAAAtuD,EAAAsuD,EAAAhB,EAAAgB,CACA3yB,IAAA2yB,EAAA,SAAAxvD,GACAA,EAAAW,EAAAI,EAAAJ,IAAAI,EAAAf,GACAA,EAAAW,EAAAO,EAAAP,IAAAO,EAAAlB,GACAA,EAAAzuB,MAAAi9E,EAAAj9E,QAAAi9E,EAAAxuD,IAEA,IAAA+vD,GAAAC,EAAAjvD,EAAAG,GAAA,EAAAH,EAAAJ,EAAA+4B,EAAA9pE,EAAA,IAAAsxC,EAAAP,EAAAqvD,EAAA9uD,EAAAH,GAAA,EAAAgvD,GAAAj2B,EAAAlqE,EAAA,IAAA4+F,EAAAj9E,OAAA,EACAsrD,IAAA2yB,EAAA,SAAAxvD,GACAA,EAAAW,GAAAX,EAAAW,EAAAovD,GAAAr2B,EACA15B,EAAA2K,EAAA3K,EAAAzuB,MAAAuoD,IAGA,MAAArE,GAEA,QAAAi6B,GAAAF,GAKA,IAJA,GAGOS,GAHPR,GACA13C,EAAA,KACA7vD,UAAAsnG,IACOU,GAAAT,GACP,OAAAQ,EAAAC,EAAA9kF,QACA,OAAA+xD,GAAAj1E,EAAA+nG,EAAA/nG,SAAA7B,EAAA,EAAAc,EAAAe,EAAAC,OAA8E9B,EAAAc,IAAOd,EACrF6pG,EAAAxgG,MAAAxH,EAAA7B,GAAA82E,GACAr1E,EAAAI,EAAA7B,GACAotB,OAAAw8E,EACA/nG,UAAAi1E,EAAAj1E,EAAA7B,GAAA6B,WAAAi1E,EAAAvhD,YACAm8B,EAAA,KACAxX,EAAA,KACAsC,EAAA,EACAr8C,EAAA,EACAC,EAAA,EACAiB,EAAA,EACAspD,EAAA,KACA3qD,MACWk6C,EAAA48B,EAGX,OAAAsyB,GAAAvnG,SAAA,GAEA,QAAAynG,GAAA1nG,GACA,GAAAC,GAAAD,EAAAC,SAAAioG,EAAAloG,EAAAwrB,OAAAvrB,SAAAI,EAAAL,EAAA5B,EAAA8pG,EAAAloG,EAAA5B,EAAA,OACA,IAAA6B,EAAAC,OAAA,CACA23E,GAAA73E,EACA,IAAAmoG,IAAAloG,EAAA,GAAA26C,EAAA36C,IAAAC,OAAA,GAAA06C,GAAA,CACAv6C,IACAL,EAAA46C,EAAAv6C,EAAAu6C,EAAAmtD,EAAA/nG,EAAAH,EAAAQ,EAAAR,GACAG,EAAAzB,EAAAyB,EAAA46C,EAAAutD,GAEAnoG,EAAA46C,EAAAutD,MAEO9nG,KACPL,EAAA46C,EAAAv6C,EAAAu6C,EAAAmtD,EAAA/nG,EAAAH,EAAAQ,EAAAR,GAEAG,GAAAwrB,OAAAskC,EAAAs4C,EAAApoG,EAAAK,EAAAL,EAAAwrB,OAAAskC,GAAAo4C,EAAA,IAEA,QAAAP,GAAA3nG,GACAA,EAAAH,EAAA64C,EAAA14C,EAAA46C,EAAA56C,EAAAwrB,OAAAjtB,EACAyB,EAAAzB,GAAAyB,EAAAwrB,OAAAjtB,EAEA,QAAA6pG,GAAApoG,EAAAK,EAAA23E,GACA,GAAA33E,EAAA,CAEA,IADA,GAAAq4D,GAAA2vC,EAAAroG,EAAAsoG,EAAAtoG,EAAA+3E,EAAA13E,EAAAkoG,EAAAF,EAAA78E,OAAAvrB,SAAA,GAAAuoG,EAAAH,EAAA9pG,EAAAkqG,EAAAH,EAAA/pG,EAAAmqG,EAAA3wB,EAAAx5E,EAAAoqG,EAAAJ,EAAAhqG,EACAw5E,EAAAP,GAAAO,GAAAswB,EAAA9wB,GAAA8wB,GAAAtwB,GAAAswB,GACAE,EAAAhxB,GAAAgxB,GACAD,EAAA9wB,GAAA8wB,GACAA,EAAAhwD,EAAAt4C,EACA04D,EAAAqf,EAAAn9B,EAAA8tD,EAAAL,EAAAztD,EAAA4tD,EAAAT,EAAAhwB,EAAAl4E,EAAAwoG,EAAAxoG,GACA64D,EAAA,IACA+e,GAAAK,GAAAC,EAAA/3E,EAAAg4E,GAAAh4E,EAAA04D,GACA8vC,GAAA9vC,EACA+vC,GAAA/vC,GAEAgwC,GAAA3wB,EAAAx5E,EACAiqG,GAAAH,EAAA9pG,EACAoqG,GAAAJ,EAAAhqG,EACAkqG,GAAAH,EAAA/pG,CAEAw5E,KAAAP,GAAA8wB,KACAA,EAAAv/C,EAAAgvB,EACAuwB,EAAA/pG,GAAAmqG,EAAAD,GAEAJ,IAAA9wB,GAAAgxB,KACAA,EAAAx/C,EAAAs/C,EACAE,EAAAhqG,GAAAiqG,EAAAG,EACA3wB,EAAAh4E,GAGA,MAAAg4E,GAEA,QAAA6vB,GAAA9vD,GACAA,EAAAW,GAAA/wC,EAAA,GACAowC,EAAA2K,EAAA3K,EAAAzuB,MAAA3hB,EAAA,GAhGA,GAAA8sE,GAAAv5B,GAAAooD,OAAA7uB,YAAA9uE,KAAA,MAAAlE,MAAA,MAAAsmG,EAAAzwB,GAAA3vE,GAAA,KAAAigG,EAAA,IAiHA,OAfAj7B,GAAAo7B,WAAA,SAAArvD,GACA,MAAAphB,WAAAp3B,QACA6nG,EAAArvD,EACAi0B,GAFAo7B,GAIAp7B,EAAAhlE,KAAA,SAAA+wC,GACA,MAAAphB,WAAAp3B,QACA0nG,EAAA,OAAAjgG,EAAA+wC,GAAAmvD,EAAA,KACAl7B,GAFAi7B,EAAA,KAAAjgG,GAIAglE,EAAAi7B,SAAA,SAAAlvD,GACA,MAAAphB,WAAAp3B,QACA0nG,EAAA,OAAAjgG,EAAA+wC,GAAA,KAAAmvD,EACAl7B,GAFAi7B,EAAAjgG,EAAA,MAIA6sE,GAAA7H,EAAA8H,IAiCAv5B,GAAAooD,OAAAsF,QAAA,WAEA,QAAAA,GAAAnqG,EAAAL,GACA,GAAAyqG,GAAAr7B,EAAAiH,EAAAn2E,KAAAP,KAAAU,EAAAL,GAAAZ,EAAAgwE,EAAA,GAAA90B,EAAA,CACAm8B,IAAAr3E,EAAA,SAAAu6C,GACA,GAAA93C,GAAA83C,EAAA93C,QACAA,MAAAC,QACA63C,EAAAW,EAAAw/B,GAAAj4E,GACA83C,EAAA2K,EAAAu1B,GAAAh4E,KAEA83C,EAAAW,EAAAmwD,EAAAnwD,GAAAqvD,EAAAhwD,EAAA8wD,GAAA,EACA9wD,EAAA2K,EAAA,EACAmmD,EAAA9wD,IAGA,IAAAe,GAAAq/B,GAAA36E,GAAAy7C,EAAAm/B,GAAA56E,GAAAq4D,EAAA/c,EAAAJ,EAAAqvD,EAAAjvD,EAAAG,GAAA,EAAA2jB,EAAA3jB,EAAAP,EAAAqvD,EAAA9uD,EAAAH,GAAA,CAQA,OAPA+7B,IAAAr3E,EAAAoqG,EAAA,SAAA7vD,GACAA,EAAAW,GAAAX,EAAAW,EAAAl7C,EAAAk7C,GAAA/wC,EAAA,GACAowC,EAAA2K,GAAAllD,EAAAklD,EAAA3K,EAAA2K,GAAA/6C,EAAA,IACO,SAAAowC,GACPA,EAAAW,GAAAX,EAAAW,EAAAmd,IAAA+G,EAAA/G,GAAAluD,EAAA,GACAowC,EAAA2K,GAAA,GAAAllD,EAAAklD,EAAA3K,EAAA2K,EAAAllD,EAAAklD,EAAA,IAAA/6C,EAAA,KAEA6lE,EAtBA,GAAAiH,GAAAv5B,GAAAooD,OAAA7uB,YAAA9uE,KAAA,MAAAlE,MAAA,MAAAsmG,EAAAzwB,GAAA3vE,GAAA,KAAAigG,GAAA,CAuCA,OAfAgB,GAAAb,WAAA,SAAArvD,GACA,MAAAphB,WAAAp3B,QACA6nG,EAAArvD,EACAkwD,GAFAb,GAIAa,EAAAjhG,KAAA,SAAA+wC,GACA,MAAAphB,WAAAp3B,QACA0nG,EAAA,OAAAjgG,EAAA+wC,GACAkwD,GAFAhB,EAAA,KAAAjgG,GAIAihG,EAAAhB,SAAA,SAAAlvD,GACA,MAAAphB,WAAAp3B,QACA0nG,EAAA,OAAAjgG,EAAA+wC,GACAkwD,GAFAhB,EAAAjgG,EAAA,MAIA6sE,GAAAo0B,EAAAn0B,IAoBAv5B,GAAAooD,OAAAwF,QAAA,WAEA,QAAA/+C,GAAA9pD,EAAAm5C,GAEA,IADA,GAAA87B,GAAA4K,EAAA1hF,GAAA,EAAAc,EAAAe,EAAAC,SACA9B,EAAAc,GACA4gF,GAAA5K,EAAAj1E,EAAA7B,IAAAqD,OAAA23C,EAAA,IAAAA,GACA87B,EAAA4K,KAAA94C,MAAA84C,OAAA,IAAAA,EAGA,QAAAipB,GAAAhxD,GACA,GAAA93C,GAAA83C,EAAA93C,QACA,IAAAA,KAAAC,OAAA,CACA,GAAAg1E,GAAA8zB,EAAA9pG,EAAA8jD,EAAA5Y,EAAA2N,GAAA+sC,KAAApmD,EAAAz+B,EAAA0zB,QAAA8oE,EAAArxE,IAAA8oC,EAAA,UAAA+0C,EAAAjmD,EAAAka,GAAA,SAAA+rC,EAAAjmD,EAAAma,GAAA,eAAA8rC,EAAA,EAAAlxD,EAAAzuB,MAAA05B,EAAAma,GAAAna,EAAAka,GAAA3hC,KAAAkT,IAAAuU,EAAAka,GAAAla,EAAAma,GAGA,KAFApT,EAAArrB,EAAAskB,EAAAka,GAAAla,EAAAma,GAAAplB,EAAAt2C,OACAqjF,EAAAhF,KAAA,GACA5gF,EAAAw/B,EAAAx+B,QAAA,GACA4kF,EAAAr9E,KAAAytE,EAAAx2C,EAAAx/B,EAAA,IACA4lF,EAAAhF,MAAA5K,EAAA4K,KACA,aAAAmpB,IAAAD,EAAAE,EAAApkB,EAAA5wB,KAAAuoC,GACA/9D,EAAAvb,MACAs5E,EAAAuM,IAEAlkB,EAAAhF,MAAAgF,EAAA3hE,MAAA28D,KACA71C,EAAA66C,EAAA5wB,EAAAlR,GAAA,GACAkR,EAAA34B,KAAAkT,IAAAuU,EAAAka,GAAAla,EAAAma,IACA2nB,EAAA5kF,OAAA4kF,EAAAhF,KAAA,EACA2c,EAAArxE,IAGA05D,GAAA5kF,SACA+pC,EAAA66C,EAAA5wB,EAAAlR,GAAA,GACA8hC,EAAA5kF,OAAA4kF,EAAAhF,KAAA,GAEA7/E,EAAA2H,QAAAmhG,IAGA,QAAAI,GAAApxD,GACA,GAAA93C,GAAA83C,EAAA93C,QACA,IAAAA,KAAAC,OAAA,CACA,GAAAg1E,GAAAlyB,EAAA5Y,EAAA2N,GAAArZ,EAAAz+B,EAAA0zB,QAAAmxD,IAGA,KAFA/6B,EAAArrB,EAAAskB,EAAAka,GAAAla,EAAAma,GAAAplB,EAAAt2C,OACAqjF,EAAAhF,KAAA,EACA5K,EAAAx2C,EAAAvb,OACA2hE,EAAAr9E,KAAAytE,GACA4P,EAAAhF,MAAA5K,EAAA4K,KACA,MAAA5K,EAAAt6B,IACA3Q,EAAA66C,EAAA5P,EAAAt6B,EAAAoI,EAAAka,GAAAla,EAAAma,GAAAna,GAAAtkB,EAAAx+B,QACA4kF,EAAA5kF,OAAA4kF,EAAAhF,KAAA,EAGA7/E,GAAA2H,QAAAuhG,IAGA,QAAAD,GAAApkB,EAAA5wB,GAEA,IADA,GAAA/O,GAAA1lD,EAAAqlF,EAAAhF,KAAAspB,EAAA,EAAAC,EAAAj+E,IAAAhtB,GAAA,EAAAc,EAAA4lF,EAAA5kF,SACA9B,EAAAc,IACAimD,EAAA2/B,EAAA1mF,GAAA0hF,QACA36B,EAAAkkD,MAAAlkD,GACAA,EAAAikD,MAAAjkD,GAIA,OAFA1lD,MACAy0D,KACAz0D,EAAA87B,KAAA8S,IAAA6lB,EAAAk1C,EAAAE,EAAA7pG,KAAAy0D,EAAAm1C,EAAAC,IAAAl+E,IAEA,QAAA6e,GAAA66C,EAAA5wB,EAAAlR,EAAA/d,GACA,GAAArmC,GAAAR,GAAA,EAAAc,EAAA4lF,EAAA5kF,OAAAw4C,EAAAsK,EAAAtK,EAAAgK,EAAAM,EAAAN,EAAA1iD,EAAAk0D,EAAA/d,EAAA2uC,EAAAhF,KAAA5rB,GAAA,CACA,IAAAA,GAAAlR,EAAAka,GAAA,CAEA,KADAj4B,GAAAjlC,EAAAgjD,EAAAma,MAAAn9D,EAAAgjD,EAAAma,MACA/+D,EAAAc,GACAN,EAAAkmF,EAAA1mF,GACAQ,EAAA85C,IACA95C,EAAA8jD,IACA9jD,EAAAu+D,GAAAn9D,EACA04C,GAAA95C,EAAAs+D,GAAA3hC,KAAAkT,IAAAuU,EAAAtK,EAAAsK,EAAAka,GAAAxkB,EAAA14C,EAAAm2C,EAAAv3C,EAAAkhF,KAAA9/E,GAAA,EAEApB,GAAAg8C,GAAA,EACAh8C,EAAAs+D,IAAAla,EAAAtK,EAAAsK,EAAAka,GAAAxkB,EACAsK,EAAAN,GAAA1iD,EACAgjD,EAAAma,IAAAn9D,MACO,CAEP,KADAilC,GAAAjlC,EAAAgjD,EAAAka,MAAAl9D,EAAAgjD,EAAAka,MACA9+D,EAAAc,GACAN,EAAAkmF,EAAA1mF,GACAQ,EAAA85C,IACA95C,EAAA8jD,IACA9jD,EAAAs+D,GAAAl9D,EACA0iD,GAAA9jD,EAAAu+D,GAAA5hC,KAAAkT,IAAAuU,EAAAN,EAAAM,EAAAma,GAAAza,EAAA1iD,EAAAm2C,EAAAv3C,EAAAkhF,KAAA9/E,GAAA,EAEApB,GAAAg8C,GAAA,EACAh8C,EAAAu+D,IAAAna,EAAAN,EAAAM,EAAAma,GAAAza,EACAM,EAAAtK,GAAA14C,EACAgjD,EAAAka,IAAAl9D,GAGA,QAAA8oG,GAAArqG,GACA,GAAA+uE,GAAA+7B,GAAA90B,EAAAh2E,GAAAjB,EAAAgwE,EAAA,EAOA,OANAhwE,GAAAk7C,EAAAl7C,EAAAklD,EAAA,EACAllD,EAAAiE,OAAAjE,EAAA0/D,GAAAv1D,EAAA,GAAAnK,EAAA2/D,GAAAx1D,EAAA,IAA2DnK,EAAA0/D,GAAA1/D,EAAA2/D,GAAA,EAC3DosC,GAAA90B,EAAAoxB,QAAAroG,GACAusD,GAAAvsD,KAAA0/D,GAAA1/D,EAAA2/D,GAAA3/D,EAAAiE,QACA8nG,EAAAJ,EAAAJ,GAAAvrG,GACAgsG,IAAAD,EAAA/7B,GACAA,EArGA,GAAA+7B,GAAA90B,EAAAv5B,GAAAooD,OAAA7uB,YAAAt+B,EAAA5a,KAAA4a,MAAAxuC,GAAA,KAAAy6C,EAAA,KAAAhY,EAAAiuC,GAAAmxB,GAAA,EAAAP,EAAA,WAAAK,EAAA,MAAA/tE,KAAAwqB,KAAA,GA+IA,OAxCA+iD,GAAAnhG,KAAA,SAAA+wC,GACA,MAAAphB,WAAAp3B,QACAyH,EAAA+wC,EACAowD,GAFAnhG,GAIAmhG,EAAA1mD,QAAA,SAAA1J,GAEA,QAAA+wD,GAAA1xD,GACA,GAAAv4C,GAAAk5C,EAAAp6C,KAAAwqG,EAAA/wD,IAAAzuB,MACA,cAAA9pB,EAAA64E,GAAAtgC,GAAAugC,GAAAvgC,EAAA,gBAAAv4C,gBAEA,QAAAkqG,GAAA3xD,GACA,MAAAugC,IAAAvgC,EAAAW,GANA,IAAAphB,UAAAp3B,OAAA,MAAAkiD,EAQA,IAAAlgC,EAGA,OAFAkoB,GAAA,OAAAgY,EAAA1J,GAAA2/B,GAAA,aAAAn2D,QAAAw2B,IAAA+wD,EAAA,WAAAvnF,GAAAw2B,YACAgxD,KACAZ,GAEAA,EAAA3yD,MAAA,SAAAuC,GACA,MAAAphB,WAAAp3B,QACAi2C,EAAAuC,EAAAnd,KAAA4a,MAAAqjC,OACAsvB,GAFA3yD,GAAAqjC,QAIAsvB,EAAAU,OAAA,SAAA9wD,GACA,MAAAphB,WAAAp3B,QACAspG,EAAA9wD,EACA6wD,EAAA,KACAT,GAHAU,GAKAV,EAAAQ,MAAA,SAAA5wD,GACA,MAAAphB,WAAAp3B,QACAopG,EAAA5wD,EACAowD,GAFAQ,GAIAR,EAAAG,KAAA,SAAAvwD,GACA,MAAAphB,WAAAp3B,QACA+oG,EAAAvwD,EAAA,GACAowD,GAFAG,GAIAz0B,GAAAs0B,EAAAr0B,IA2BAv5B,GAAAzR,QACAqyD,OAAA,SAAA6N,EAAAC,GACA,GAAA1qG,GAAAo4B,UAAAp3B,MAGA,OAFAhB,GAAA,IAAA0qG,EAAA,GACA1qG,EAAA,IAAAyqG,EAAA,GACA,WACA,GAAAjxD,GAAAgK,EAAAyC,CACA,IACAzM,EAAA,EAAAnd,KAAAkO,SAAA,EACAiZ,EAAA,EAAAnnB,KAAAkO,SAAA,EACA0b,EAAAzM,IAAAgK,WACSyC,KAAA,EACT,OAAAwkD,GAAAC,EAAAlxD,EAAAnd,KAAAwqB,MAAA,EAAAxqB,KAAAouB,IAAAxE,QAGA0kD,UAAA,WACA,GAAApgE,GAAAyR,GAAAzR,OAAAqyD,OAAA15F,MAAA84C,GAAA5jB,UACA,mBACA,MAAAiE,MAAAwoB,IAAAta,OAGAqgE,MAAA,SAAAvrG,GACA,GAAAkrC,GAAAyR,GAAAzR,OAAAsgE,UAAAxrG,EACA,mBACA,MAAAkrC,KAAAlrC,IAGAwrG,UAAA,SAAAxrG,GACA,kBACA,OAAAkB,GAAA,EAAAigD,EAAA,EAA8BA,EAAAnhD,EAAOmhD,IAAAjgD,GAAA87B,KAAAkO,QACrC,OAAAhqC,MAIAy7C,GAAA6O,QAkCA,IAAAmvB,KACAlpC,MAAAkK,EACAnK,KAAAmK,EAiBAgB,IAAA6O,MAAAwvB,OAAA,WACA,MAAAF,KAAA,WAAA1K,IAAA,GA+FA,IAAA0L,KACA56E,EAAA,EACAM,EAAA,EACAP,EAAA,EACA2lD,EAAA,EACAxlD,EAAA,EASAu7C,IAAA6O,MAAAJ,IAAA,WACA,MAAA2wB,IAAAp/B,GAAA6O,MAAAwvB,SAAAf,QAAA,oBAgEA,IAAAmC,IAAAz/B,GAAAmL,OAAA,OAAAq0B,IACA1qC,MAAA,SAAA0I,GACA,OAAAnd,KAAAwU,MAAA2I,IAEA3I,KAAA,SAAA2I,GACA,OAAAnd,KAAAyU,OAAA0I,IAGAwC,IAAA6O,MAAA9D,IAAA,WACA,MAAA20B,IAAA1/B,GAAA6O,MAAAwvB,SAAA,UAyCAr+B,GAAA6O,MAAAhE,KAAA,WACA,MAAA7K,IAAA6O,MAAA9D,MAAAmF,SAAA,KAEAlQ,GAAA6O,MAAAigD,QAAA,WACA,MAAAhvB,QACAjyB,EAAA,QACAzQ,UA4FA4C,GAAA6O,MAAAkgD,WAAA,WACA,MAAA/uD,IAAA6O,MAAAigD,UAAAv0D,MAAAy0D,KAEAhvD,GAAA6O,MAAAogD,WAAA,WACA,MAAAjvD,IAAA6O,MAAAigD,UAAAv0D,MAAA20D,KAEAlvD,GAAA6O,MAAAsgD,YAAA,WACA,MAAAnvD,IAAA6O,MAAAigD,UAAAv0D,MAAA60D,KAEApvD,GAAA6O,MAAAwgD,YAAA,WACA,MAAArvD,IAAA6O,MAAAigD,UAAAv0D,MAAA+0D,IAEA,IAAAN,KAAA,qFAAAnoG,IAAAokD,IACAikD,IAAA,+KAAAroG,IAAAokD,IACAmkD,IAAA,6KAAAvoG,IAAAokD,IACAqkD,IAAA,8KAAAzoG,IAAAokD,GACAjL,IAAA6O,MAAA6xB,SAAA,WACA,MAAAF,YAmCAxgC,GAAA6O,MAAA0gD,SAAA,WACA,MAAA1uB,IAAA,YAiCA7gC,GAAA6O,MAAA2gD,UAAA,WACA,MAAA1uB,KAAA,YAyBA9gC,GAAA6O,MAAAn8B,SAAA,WACA,MAAAquD,KAAA,OAuBA/gC,GAAAwG,OAIAxG,GAAAwG,IAAAgZ,IAAA,WAEA,QAAAA,KACA,GAAA6W,GAAAh2C,KAAA8S,IAAA,GAAA+tC,EAAAh6E,MAAArE,KAAAu5B,YAAAk6C,EAAAj2C,KAAA8S,IAAA,GAAAiuC,EAAAl6E,MAAArE,KAAAu5B,YAAA6pC,EAAAqb,EAAAp6E,MAAArE,KAAAu5B,WAAAssB,GAAA+Z,EAAA+e,EAAAt6E,MAAArE,KAAAu5B,WAAAssB,GAAAwzB,EAAA77C,KAAAuuB,IAAA6T,EAAAwD,GAAA6b,EAAA7b,EAAAxD,EAAA,GAEA,IADA6T,EAAAD,IAAAwL,EAAAvL,IAAAD,IAAAwL,GACA3F,GAAAsS,GAAA,MAAAihB,GAAAn5B,EAAAwL,IAAAzL,EAAAo5B,EAAAp5B,EAAA,EAAAyL,GAAA,OACA,IAAAD,GAAAhiB,EAAA6vC,EAAAC,EAAAh1C,EAAAF,EAAAiH,EAAAC,EAAAiF,EAAAC,EAAAiF,EAAAG,EAAA/P,EAAA,EAAAC,EAAA,EAAAttC,IAOA,KANA8gF,IAAAjuB,EAAAx6E,MAAArE,KAAAu5B,YAAA,QACAszE,EAAAE,IAAAC,GAAAxvE,KAAAwqB,KAAAwrB,IAAAC,MAAAs5B,EAAA1oG,MAAArE,KAAAu5B,WACA0lD,IAAA3lB,IAAA,GACAma,IAAAna,EAAA1T,GAAAinD,EAAAp5B,EAAAj2C,KAAA4oB,IAAA0mD,KACAt5B,IAAAna,EAAAzT,GAAAinD,EAAAr5B,EAAAh2C,KAAA4oB,IAAA0mD,MAEAr5B,EAAA,CACA3b,EAAA2b,EAAAj2C,KAAA8pB,IAAA8b,EAAA9J,GACA1B,EAAA6b,EAAAj2C,KAAA4oB,IAAAgd,EAAA9J,GACAuF,EAAA4U,EAAAj2C,KAAA8pB,IAAAsY,EAAAtG,GACAwF,EAAA2U,EAAAj2C,KAAA4oB,IAAAwZ,EAAAtG,EACA,IAAA+0B,GAAA7wD,KAAAuuB,IAAA6T,EAAAwD,EAAA,EAAA9J,IAAA5T,GAAA,GACA,IAAA4T,GAAAwlB,GAAAhnB,EAAAF,EAAAiH,EAAAC,KAAAmgB,EAAAoP,EAAA,CACA,GAAA4e,IAAA7pC,EAAAxD,GAAA,CACA9H,GAAA2b,EAAAj2C,KAAA8pB,IAAA2lD,GACAr1C,EAAA6b,EAAAj2C,KAAA4oB,IAAA6mD,GACApuC,EAAAC,EAAA,UAGAhH,GAAAF,EAAA,CAEA,IAAA4b,EAAA,CACAzP,EAAAyP,EAAAh2C,KAAA8pB,IAAAsY,EAAAvG,GACA2K,EAAAwP,EAAAh2C,KAAA4oB,IAAAwZ,EAAAvG,GACA4P,EAAAuK,EAAAh2C,KAAA8pB,IAAA8b,EAAA/J,GACA+P,EAAAoK,EAAAh2C,KAAA4oB,IAAAgd,EAAA/J,EACA,IAAA+0B,GAAA5wD,KAAAuuB,IAAAqX,EAAAxD,EAAA,EAAAvG,IAAA3T,GAAA,GACA,IAAA2T,GAAAylB,GAAA/a,EAAAC,EAAAiF,EAAAG,KAAA,EAAA6V,EAAAmP,EAAA,CACA,GAAA8e,IAAA9pC,EAAAxD,GAAA,CACAmE,GAAAyP,EAAAh2C,KAAA8pB,IAAA4lD,GACAlpC,EAAAwP,EAAAh2C,KAAA4oB,IAAA8mD,GACAjkC,EAAAG,EAAA,UAGArF,GAAAC,EAAA,CAEA,IAAAqV,EAAAjiB,KAAA4nB,EAAAxhD,KAAAkT,IAAAlT,KAAAuuB,IAAA0nB,EAAAD,GAAA,GAAA25B,EAAA9oG,MAAArE,KAAAu5B,aAAA,MACAyjC,EAAAwW,EAAAC,EAAAwL,EAAA,GACA,IAAAmuB,GAAApuB,EAAAquB,EAAAruB,CACA,IAAA3F,EAAA3zB,GAAA,CACA,GAAA4nD,GAAA,MAAArkC,GAAAlF,EAAAC,GAAA,MAAAnF,GAAA/G,EAAAF,GAAAoR,IAAAlR,EAAAF,IAAAqR,EAAAG,IAAAvK,EAAAC,IAAAiF,EAAAC,IAAAjF,EAAAjH,EAAAw1C,EAAA,GAAAtuC,EAAApH,EAAA01C,EAAA,GAAAruC,EAAAJ,EAAAyuC,EAAA,GAAApuC,EAAAJ,EAAAwuC,EAAA,GAAAC,EAAA,EAAA/vE,KAAA4oB,IAAA5oB,KAAAmoB,MAAAoZ,EAAAE,EAAAD,EAAAE,IAAA1hC,KAAAwqB,KAAA+W,IAAAC,KAAAxhC,KAAAwqB,KAAAiX,IAAAC,OAAA,GAAAsuC,EAAAhwE,KAAAwqB,KAAAslD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAD,GAAA7vE,KAAAkT,IAAAsuC,GAAAxL,EAAAg6B,IAAAD,EAAA,IACAH,EAAA5vE,KAAAkT,IAAAsuC,GAAAvL,EAAA+5B,IAAAD,EAAA,IAEA,SAAA1uC,EAAA,CACA,GAAA4uC,GAAA1uB,GAAA,MAAA9V,GAAAlF,EAAAC,IAAAiF,EAAAG,IAAAtR,EAAAF,GAAA6b,EAAA25B,EAAAnuB,GAAAyuB,EAAA3uB,IAAAlgB,EAAAC,IAAAiF,EAAAC,GAAAyP,EAAA25B,EAAAnuB,EACAD,KAAAouB,EACAphF,EAAAtiB,KAAA,IAAA+jG,EAAA,OAAAL,EAAA,IAAAA,EAAA,QAAApwC,EAAA,IAAAywC,EAAA,OAAAh6B,EAAA,IAAAA,EAAA,QAAAwL,EAAAH,GAAA2uB,EAAA,MAAAA,EAAA,MAAAC,EAAA,MAAAA,EAAA,WAAAzuB,EAAA,IAAAyuB,EAAA,OAAAN,EAAA,IAAAA,EAAA,QAAApwC,EAAA,IAAA0wC,EAAA,IAEA1hF,EAAAtiB,KAAA,IAAA+jG,EAAA,OAAAL,EAAA,IAAAA,EAAA,QAAApwC,EAAA,IAAA0wC,EAAA,QAGA1hF,GAAAtiB,KAAA,IAAAouD,EAAA,IAAAF,EAEA,UAAAqR,EAAA,CACA,GAAA0kC,GAAA5uB,IAAAjnB,EAAAF,IAAAqR,EAAAG,GAAAoK,GAAA65B,EAAApuB,GAAA2uB,EAAA7uB,IAAAhb,EAAAC,GAAA,MAAAnF,GAAA/G,EAAAF,IAAAiH,EAAAC,GAAA0U,GAAA65B,EAAApuB,EACAD,KAAAquB,EACArhF,EAAAtiB,KAAA,IAAAkkG,EAAA,OAAAP,EAAA,IAAAA,EAAA,QAAArwC,EAAA,IAAA4wC,EAAA,OAAAp6B,EAAA,IAAAA,EAAA,MAAAyL,EAAAH,GAAA8uB,EAAA,MAAAA,EAAA,MAAAD,EAAA,MAAAA,EAAA,aAAA1uB,EAAA,IAAA0uB,EAAA,OAAAN,EAAA,IAAAA,EAAA,QAAArwC,EAAA,IAAA2wC,EAAA,IAEA3hF,EAAAtiB,KAAA,IAAAkkG,EAAA,OAAAP,EAAA,IAAAA,EAAA,QAAArwC,EAAA,IAAA2wC,EAAA,QAGA3hF,GAAAtiB,KAAA,IAAAq6D,EAAA,IAAAC,OAGAh4C,GAAAtiB,KAAA,IAAAouD,EAAA,IAAAF,GACA,MAAAiH,GAAA7yC,EAAAtiB,KAAA,IAAA+pE,EAAA,IAAAA,EAAA,MAAA4a,EAAA,IAAApP,EAAA,IAAApgB,EAAA,IAAAC,GACA9yC,EAAAtiB,KAAA,IAAAq6D,EAAA,IAAAC,GACA,MAAAiF,GAAAj9C,EAAAtiB,KAAA,IAAA8pE,EAAA,IAAAA,EAAA,MAAA4a,EAAA,MAAAnP,EAAA,IAAAhW,EAAA,IAAAG,EAGA,OADAp9C,GAAAtiB,KAAA,KACAsiB,EAAA7Z,KAAA,IAEA,QAAAy6F,GAAAn5B,EAAAwL,GACA,YAAAxL,EAAA,IAAAA,EAAA,IAAAA,EAAA,QAAAwL,EAAA,OAAAxL,EAAA,IAAAA,EAAA,IAAAA,EAAA,QAAAwL,EAAA,MAAAxL,EAhFA,GAAA4K,GAAAD,GAAAG,EAAAD,GAAA6uB,EAAAhvB,GAAA4uB,EAAAC,GAAAvuB,EAAAD,GAAAG,EAAAD,GAAAG,EAAAD,EAyHA,OAvCAjiB,GAAA0hB,YAAA,SAAAp8E,GACA,MAAAs3B,WAAAp3B,QACAk8E,EAAAz1B,GAAA3mD,GACA06D,GAFA0hB,GAIA1hB,EAAA4hB,YAAA,SAAAt8E,GACA,MAAAs3B,WAAAp3B,QACAo8E,EAAA31B,GAAA3mD,GACA06D,GAFA4hB,GAIA5hB,EAAAwwC,aAAA,SAAAlrG,GACA,MAAAs3B,WAAAp3B,QACAgrG,EAAAvkD,GAAA3mD,GACA06D,GAFAwwC,GAIAxwC,EAAAowC,UAAA,SAAA9qG,GACA,MAAAs3B,WAAAp3B,QACA4qG,EAAA9qG,GAAA+qG,MAAApkD,GAAA3mD,GACA06D,GAFAowC,GAIApwC,EAAA8hB,WAAA,SAAAx8E,GACA,MAAAs3B,WAAAp3B,QACAs8E,EAAA71B,GAAA3mD,GACA06D,GAFA8hB,GAIA9hB,EAAAgiB,SAAA,SAAA18E,GACA,MAAAs3B,WAAAp3B,QACAw8E,EAAA/1B,GAAA3mD,GACA06D,GAFAgiB,GAIAhiB,EAAAkiB,SAAA,SAAA58E,GACA,MAAAs3B,WAAAp3B,QACA08E,EAAAj2B,GAAA3mD,GACA06D,GAFAkiB,GAIAliB,EAAAgiC,SAAA,WACA,GAAAv3C,KAAAi3B,EAAAh6E,MAAArE,KAAAu5B,aAAAglD,EAAAl6E,MAAArE,KAAAu5B,YAAA,EAAAghB,IAAAkkC,EAAAp6E,MAAArE,KAAAu5B,aAAAolD,EAAAt6E,MAAArE,KAAAu5B,YAAA,EAAAssB,EACA,QAAAroB,KAAA8pB,IAAA/M,GAAA6M,EAAA5pB,KAAA4oB,IAAA7L,GAAA6M,IAEAuV,EAEA,IAAAqwC,IAAA,MAqEA7vD,IAAAwG,IAAAsW,KAAA,WACA,MAAA4lB,IAAA1jC,GAEA,IAAA+jC,IAAA/iC,GAAAn5C,KACAw3E,OAAAwE,GACA6tB,gBAAA1tB,GACAztD,KAAA0tD,GACA0tB,cAAAztB,GACA0tB,aAAAztB,GACA0tB,MAAAhtB,GACAitB,aAAA7sB,GACA8sB,eAAA7sB,GACAmkB,OAAAlkB,GACA6sB,SAAAxtB,GACAytB,gBAAA7tB,GACA8tB,kBAAA3tB,GACA4tB,SAAA1sB,IAEA1B,IAAAr2E,QAAA,SAAAjD,EAAAlD,GACAA,EAAAkD,MACAlD,EAAAuxD,OAAA,WAAA/rD,KAAAtC,IA8IA,IAAA26E,KAAA,aAAAC,IAAA,aAAAN,IAAA,cA0CA/jC,IAAAwG,IAAAsW,KAAAs0C,OAAA,WACA,GAAAt0C,GAAA4lB,GAAAgC,GAGA,OAFA5nB,GAAA6C,OAAA7C,EAAAtf,QAAAsf,GAAAtf,EACAsf,EAAAsM,MAAAtM,EAAAtV,QAAAsV,GAAAtV,EACAsV,GAsFAomB,GAAAtlD,QAAAulD,GACAA,GAAAvlD,QAAAslD,GACAljC,GAAAwG,IAAAo+B,KAAA,WACA,MAAAD,IAAA3lC,IAEAgB,GAAAwG,IAAAo+B,KAAAwsB,OAAA,WACA,GAAAxsB,GAAAD,GAAAD,GAOA,OANAE,GAAAjlB,OAAAilB,EAAApnC,QAAAonC,GAAApnC,EACAonC,EAAA1D,YAAA0D,EAAAjqB,SAAAiqB,GAAAjqB,GACAiqB,EAAAxD,YAAAwD,EAAAljB,SAAAkjB,GAAAljB,GACAkjB,EAAAxb,MAAAwb,EAAAp9B,QAAAo9B,GAAAp9B,EACAo9B,EAAAtD,WAAAsD,EAAAnqB,SAAAmqB,GAAAnqB,GACAmqB,EAAApD,SAAAoD,EAAAjjB,SAAAijB,GAAAjjB,GACAijB,GAEA5kC,GAAAwG,IAAA8hD,MAAA,WAEA,QAAAA,GAAA/kG,EAAAL,GACA,GAAAqB,GAAA0mF,EAAApoF,KAAAuP,EAAA7O,EAAAL,GAAA2qD,EAAAo9B,EAAApoF,KAAAisC,EAAAvrC,EAAAL,EACA,WAAAqB,EAAA23D,GAAAsD,EAAAj7D,EAAA0lD,EAAA1lD,EAAA43D,GAAA53D,EAAAk+D,GAAAl+D,EAAA0hE,KAAAorC,EAAA9sG,EAAAspD,GAAAyjD,EAAA/sG,EAAA0lD,EAAA1lD,EAAA43D,GAAA53D,EAAA0lD,EAAA1lD,EAAA23D,IAAAo1C,EAAA/sG,EAAA0lD,EAAA1lD,EAAA43D,GAAAtO,EAAA5D,EAAA4D,EAAAqO,IAAAsD,EAAA3R,EAAA5D,EAAA4D,EAAAsO,GAAAtO,EAAA4U,GAAA5U,EAAAoY,IAAAqrC,EAAAzjD,EAAA5D,EAAA4D,EAAAsO,GAAA53D,EAAA0lD,EAAA1lD,EAAA23D,KAAA,IAEA,QAAA+uB,GAAAroF,EAAA0kD,EAAA/jD,EAAAL,GACA,GAAA+nF,GAAA3jC,EAAAlkD,KAAAR,EAAAW,EAAAL,GAAA+mD,EAAA0V,EAAAv8D,KAAAR,EAAAqoF,EAAA/nF,GAAA+iE,EAAAqb,EAAAl+E,KAAAR,EAAAqoF,EAAA/nF,GAAAwlD,GAAA+Z,EAAA+e,EAAAp+E,KAAAR,EAAAqoF,EAAA/nF,GAAAwlD,EACA,QACAuB,IACAgc,KACAxD,KACAvG,IAAAjS,EAAA5pB,KAAA8pB,IAAA8b,GAAAhc,EAAA5pB,KAAA4oB,IAAAgd,IACA9J,IAAAlS,EAAA5pB,KAAA8pB,IAAAsY,GAAAxY,EAAA5pB,KAAA4oB,IAAAwZ,KAGA,QAAA4uC,GAAAj0D,EAAAC,GACA,MAAAD,GAAA6oB,IAAA5oB,EAAA4oB,IAAA7oB,EAAAqlB,IAAAplB,EAAAolB,GAEA,QAAAjD,GAAAvV,EAAA3lD,EAAA84C,GACA,UAAA6M,EAAA,IAAAA,EAAA,SAAA7M,EAAAmL,IAAA,MAAAjkD,EAEA,QAAAgtG,GAAAj7B,EAAAna,EAAAoa,EAAAna,GACA,eAAAA,EAtBA,GAAA/pD,GAAAo3D,GAAA16B,EAAA26B,GAAA9J,EAAAylB,GAAA9D,EAAAD,GAAAG,EAAAD,EAiDA,OAzBA+mB,GAAA3oC,OAAA,SAAA76D,GACA,MAAAs3B,WAAAp3B,QACA26D,EAAAlU,GAAA3mD,GACAwjG,GAFA3oC,GAIA2oC,EAAAl2F,OAAA,SAAAtN,GACA,MAAAs3B,WAAAp3B,QACAoN,EAAAq5C,GAAA3mD,GACAwjG,GAFAl2F,GAIAk2F,EAAAx5D,OAAA,SAAAhqC,GACA,MAAAs3B,WAAAp3B,QACA8pC,EAAA2c,GAAA3mD,GACAwjG,GAFAx5D,GAIAw5D,EAAAhnB,WAAA,SAAAx8E,GACA,MAAAs3B,WAAAp3B,QACAs8E,EAAA71B,GAAA3mD,GACAwjG,GAFAhnB,GAIAgnB,EAAA9mB,SAAA,SAAA18E,GACA,MAAAs3B,WAAAp3B,QACAw8E,EAAA/1B,GAAA3mD,GACAwjG,GAFA9mB,GAIA8mB,GAKAtoD,GAAAwG,IAAA+qD,SAAA,WAEA,QAAAA,GAAAhuG,EAAAL,GACA,GAAAg5D,GAAA9pD,EAAAhP,KAAAP,KAAAU,EAAAL,GAAAsuG,EAAA1iE,EAAA1rC,KAAAP,KAAAU,EAAAL,GAAAG,GAAA64D,EAAA1U,EAAAgqD,EAAAhqD,GAAA,EAAAljD,GAAA43D,GACA1e,EAAA0e,EAAA1e,EACAgK,EAAAnkD,IAEAm6C,EAAAg0D,EAAAh0D,EACAgK,EAAAnkD,GACOmuG,EAEP,OADAltG,KAAAuC,IAAAygE,GACA,IAAAhjE,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAVA,GAAA8N,GAAAo3D,GAAA16B,EAAA26B,GAAAnC,EAAA+d,EA2BA,OAfAksB,GAAAn/F,OAAA,SAAAorC,GACA,MAAAphB,WAAAp3B,QACAoN,EAAAq5C,GAAAjO,GACA+zD,GAFAn/F,GAIAm/F,EAAAziE,OAAA,SAAA0O,GACA,MAAAphB,WAAAp3B,QACA8pC,EAAA2c,GAAAjO,GACA+zD,GAFAziE,GAIAyiE,EAAAjqC,WAAA,SAAA9pB,GACA,MAAAphB,WAAAp3B,QACAsiE,EAAA9pB,EACA+zD,GAFAjqC,GAIAiqC,GAKAvxD,GAAAwG,IAAA+qD,SAAAH,OAAA,WACA,GAAAG,GAAAvxD,GAAAwG,IAAA+qD,WAAAjqC,EAAA+d,GAAAosB,EAAAF,EAAAjqC,UAIA,OAHAiqC,GAAAjqC,WAAA,SAAA9pB,GACA,MAAAphB,WAAAp3B,OAAAysG,EAAAnsB,GAAAhe,EAAA9pB,IAAA8pB,GAEAiqC,GAQAvxD,GAAAwG,IAAA7sB,OAAA,WAEA,QAAAA,GAAAp2B,EAAAL,GACA,OAAAwuG,GAAA3tG,IAAAijB,EAAA5jB,KAAAP,KAAAU,EAAAL,KAAAuiF,IAAAh5E,EAAArJ,KAAAP,KAAAU,EAAAL,IAFA,GAAA8jB,GAAAw+D,GAAA/4E,EAAA84E,EAcA,OAVA5rD,GAAA3S,KAAA,SAAAw2B,GACA,MAAAphB,WAAAp3B,QACAgiB,EAAAykC,GAAAjO,GACA7jB,GAFA3S,GAIA2S,EAAAltB,KAAA,SAAA+wC,GACA,MAAAphB,WAAAp3B,QACAyH,EAAAg/C,GAAAjO,GACA7jB,GAFAltB,GAIAktB,EAYA,IAAA+3E,IAAA1xD,GAAAn5C,KACA6lE,OAAA+Y,GACAksB,MAAA,SAAAllG,GACA,GAAAw9C,GAAA5pB,KAAAwqB,KAAAp+C,EAAA,IACA,cAAAw9C,EAAA,KAAAA,EAAA,KAAAA,EAAA,OAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,MAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,OAAAA,EAAA,KAEA2nD,QAAA,SAAAnlG,GACA,GAAA0kE,GAAA9wC,KAAAwqB,KAAAp+C,GAAA,EAAAolG,KAAA3gC,EAAAC,EAAA0gC,EACA,cAAA1gC,EAAA,IAAAD,EAAA,QAAAC,EAAA,KAAAD,EAAA,OAEA4gC,OAAA,SAAArlG,GACA,GAAAw9C,GAAA5pB,KAAAwqB,KAAAp+C,GAAA,CACA,YAAAw9C,EAAA,KAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,KAEA8nD,gBAAA,SAAAtlG,GACA,GAAAykE,GAAA7wC,KAAAwqB,KAAAp+C,EAAAulG,IAAA7gC,EAAAD,EAAA8gC,GAAA,CACA,aAAA7gC,EAAA,IAAAD,EAAA,KAAAC,EAAA,KAAAD,EAAA,KAAAC,EAAA,KAEA8gC,cAAA,SAAAxlG,GACA,GAAAykE,GAAA7wC,KAAAwqB,KAAAp+C,EAAAulG,IAAA7gC,EAAAD,EAAA8gC,GAAA,CACA,cAAA7gC,EAAA,IAAAD,EAAA,IAAAC,EAAA,KAAAD,EAAA,IAAAC,EAAA,MAGAnxB,IAAAwG,IAAA0rD,YAAAR,GAAAzmF,MACA,IAAA+mF,IAAA3xE,KAAAwqB,KAAA,GAAAgnD,GAAAxxE,KAAA0qC,IAAA,GAAA3gB,GACAvJ,IAAAx6C,WAAA,SAAA7C,GAOA,OANAynF,GAAApuC,EAAA5J,EAAA++C,MAAAmgB,GAAAnwD,EAAAqkC,GAAA7iF,GAAA2nF,KAAA9kF,EAAA+rG,KACAxpE,KAAAiL,KAAAlK,MACAk9C,KAAAjS,GACA38B,MAAA,EACA6uC,SAAA,KAEAtiC,GAAA,EAAAnhD,EAAAR,KAAAmC,SAAqCw/C,EAAAnhD,GAAS,CAC9C8nF,EAAA5+E,KAAA0+E,KACA,QAAA7kD,GAAAvjC,KAAA2hD,GAAAthD,GAAA,EAAAc,EAAAoiC,EAAAphC,SAAyD9B,EAAAc,IACzD64C,EAAAzW,EAAAljC,KAAAojF,GAAAzpC,EAAA35C,EAAA8+C,EAAA/O,EAAA5sC,GACA4kF,EAAA1+E,KAAAswC,GAGA,MAAAkpC,IAAAoF,EAAAnpC,EAAA/O,IAEA4N,GAAAilC,UAAA,SAAAtiF,GACA,MAAAX,MAAA24C,KAAA,MAAAh4C,EAAA8sF,GAAA5K,GAAAW,GAAA7iF,KAEA,IAmBAwuF,IAAAogB,GAnBA9hB,GAAA5K,GAAAW,MAmBAL,MAAAmsB,GAAA,CACAnsB,IAAA5iF,KAAAy9C,GAAAz9C,KACA4iF,GAAA8D,MAAAjpC,GAAAipC,MACA9D,GAAAnpC,KAAAgE,GAAAhE,KACAmpC,GAAAv5E,KAAAo0C,GAAAp0C,KACAuzC,GAAA35C,WAAA,SAAAL,EAAAxC,GACA,MAAAwC,MAAAK,WAAA2rF,GAAAhsF,EAAAK,WAAA7C,GAAAwC,EAAAg6C,GAAAh6C,YAAAK,WAAAL,IAEAg6C,GAAA35C,WAAAjC,UAAA4hF,GACAA,GAAA//B,OAAA,SAAAlF,GACA,GAAAkqC,GAAAC,EAAAruC,EAAA5J,EAAApwC,KAAAowC,GAAA+O,EAAAn/C,KAAA6gD,UAAAynC,IACApqC,GAAAD,EAAAC,EACA,QAAAyD,IAAA,EAAAnhD,EAAAR,KAAAmC,SAAqCw/C,EAAAnhD,GAAS,CAC9C8nF,EAAA5+E,KAAA0+E,KACA,QAAA7kD,GAAAvjC,KAAA2hD,GAAAthD,GAAA,EAAAc,EAAAoiC,EAAAphC,SAAyD9B,EAAAc,IACzD64C,EAAAzW,EAAAljC,MAAAgoF,EAAAnqC,EAAA39C,KAAAy5C,IAAAt1B,SAAArkB,EAAAshD,KACA,YAAA3H,KAAAquC,EAAA3jE,SAAAs1B,EAAAt1B,UACA++D,GAAA4E,EAAAhoF,EAAA8+C,EAAA/O,EAAA4J,EAAAmF,GAAA/O,IACAg4C,EAAA1+E,KAAA2+E,IAEAD,EAAA1+E,KAAA,MAIA,MAAAw5E,IAAAoF,EAAAnpC,EAAA/O,IAEA+yC,GAAAoF,UAAA,SAAArqC,GACA,GAAAkqC,GAAAonB,EAAAx1D,EAAAquC,EAAA7kF,EAAA4sC,EAAApwC,KAAAowC,GAAA+O,EAAAn/C,KAAA6gD,UAAAynC,IACApqC,GAAAE,EAAAF,EACA,QAAAyD,IAAA,EAAAnhD,EAAAR,KAAAmC,SAAqCw/C,EAAAnhD,GACrC,OAAA+iC,GAAAvjC,KAAA2hD,GAAAthD,GAAA,EAAAc,EAAAoiC,EAAAphC,SAAyD9B,EAAAc,GACzD,GAAA64C,EAAAzW,EAAAljC,GAAA,CACAmD,EAAAw2C,EAAAmF,GAAA/O,GACAo/D,EAAAtxD,EAAA39C,KAAAy5C,IAAAt1B,SAAArkB,EAAAshD,GACA2mC,EAAA5+E,KAAA0+E,KACA,QAAA/sC,IAAA,EAAAx6C,EAAA2uG,EAAArtG,SAA+Ck5C,EAAAx6C,IAC/CwnF,EAAAmnB,EAAAn0D,KAAAooC,GAAA4E,EAAAhtC,EAAA8D,EAAA/O,EAAA5sC,GACA4kF,EAAA1+E,KAAA2+E,GAKA,MAAAnF,IAAAoF,EAAAnpC,EAAA/O,IAEA+yC,GAAA3+C,OAAA,SAAAA,GACA,GAAA4jD,GAAA7kD,EAAAyW,EAAAsuC,IACA,mBAAA9jD,OAAA+c,EAAA/c,GACA,QAAAmd,GAAA,EAAAnhD,EAAAR,KAAAmC,OAAoCw/C,EAAAnhD,EAAOmhD,IAAA,CAC3C2mC,EAAA5+E,KAAA0+E,KACA,QAAA7kD,GAAAvjC,KAAA2hD,GAAAthD,EAAA,EAAAc,EAAAoiC,EAAAphC,OAAwD9B,EAAAc,EAAOd,KAC/D25C,EAAAzW,EAAAljC,KAAAmkC,EAAAjkC,KAAAy5C,IAAAt1B,SAAArkB,EAAAshD,IACAymC,EAAA1+E,KAAAswC,GAIA,MAAAkpC,IAAAoF,EAAAtoF,KAAA6gD,UAAA7gD,KAAAowC,KAEA+yC,GAAAE,MAAA,SAAA1iF,EAAA0iF,GACA,GAAAjzC,GAAApwC,KAAAowC,GAAA+O,EAAAn/C,KAAA6gD,SACA,OAAAtnB,WAAAp3B,OAAA,EAAAnC,KAAAg6C,OAAAmF,GAAA/O,GAAAizC,MAAAniF,IAAAP,GACA+gD,EAAA1hD,KAAA,MAAAqjF,EAAA,SAAArpC,GACAA,EAAAmF,GAAA/O,GAAAizC,MAAAjhD,OAAAzhC,IACK,SAAAq5C,GACLA,EAAAmF,GAAA/O,GAAAizC,MAAAn/E,IAAAvD,EAAA0iF,MAWAF,GAAArgF,KAAA,SAAA2sG,EAAA/rG,GAMA,QAAA66C,KACAv+C,KAAAw+C,gBAAA79C,GAEA,QAAA89C,KACAz+C,KAAA0+C,kBAAA/9C,EAAAg+C,MAAAh+C,EAAAi+C,OAEA,QAAA8wD,GAAAl1D,GACA,aAAAA,EAAA+D,GAAA/D,GAAA,cACA,GAAAn6C,GAAAk6C,EAAAv6C,KAAA+/C,aAAAp/C,EACA,OAAA45C,KAAAC,IAAAn6C,EAAAktC,EAAAgN,EAAAC,GAAA,SAAAwQ,GACAhrD,KAAA8+C,aAAAn+C,EAAAN,EAAA2qD,QAIA,QAAA2kD,GAAAn1D,GACA,aAAAA,EAAAiE,GAAAjE,GAAA,cACA,GAAAn6C,GAAAk6C,EAAAv6C,KAAA6oF,eAAAloF,EAAAg+C,MAAAh+C,EAAAi+C,MACA,OAAArE,KAAAC,IAAAn6C,EAAAktC,EAAAgN,EAAAC,GAAA,SAAAwQ,GACAhrD,KAAAg/C,eAAAr+C,EAAAg+C,MAAAh+C,EAAAi+C,MAAAv+C,EAAA2qD,QAvBA,GAAAzxB,UAAAp3B,OAAA,GACA,IAAAuB,IAAA+rG,GAAAzvG,KAAA8C,KAAAY,EAAA+rG,EAAA/rG,GACA,OAAA1D,MAEA,GAAAutC,GAAA,aAAAkiE,EAAA36B,GAAAlE,GAAAjwE,EAAAw8C,GAAAgC,GAAAC,QAAAqwD,EAuBA,OAAArsB,IAAApjF,KAAA,QAAAyvG,EAAA/rG,EAAA/C,EAAAi+C,MAAA+wD,EAAAD,IAEAvsB,GAAAusB,UAAA,SAAAD,EAAApsB,GAEA,QAAAqsB,GAAAhvG,EAAAL,GACA,GAAAokD,GAAA4+B,EAAA9iF,KAAAP,KAAAU,EAAAL,EAAAL,KAAA+/C,aAAAp/C,GACA,OAAA8jD,IAAA,SAAAuG,GACAhrD,KAAA8+C,aAAAn+C,EAAA8jD,EAAAuG,KAGA,QAAA2kD,GAAAjvG,EAAAL,GACA,GAAAokD,GAAA4+B,EAAA9iF,KAAAP,KAAAU,EAAAL,EAAAL,KAAA6oF,eAAAloF,EAAAg+C,MAAAh+C,EAAAi+C,OACA,OAAA6F,IAAA,SAAAuG,GACAhrD,KAAAg/C,eAAAr+C,EAAAg+C,MAAAh+C,EAAAi+C,MAAA6F,EAAAuG,KAVA,GAAArqD,GAAAw8C,GAAAgC,GAAAC,QAAAqwD,EAaA,OAAAzvG,MAAAqjF,MAAA,QAAAosB,EAAA9uG,EAAAi+C,MAAA+wD,EAAAD,IAEAvsB,GAAAhjC,MAAA,SAAAx/C,EAAA+C,EAAAu8C,GAUA,QAAAC,KACAlgD,KAAAmgD,MAAAC,eAAAz/C,GAEA,QAAAivG,GAAAp1D,GACA,aAAAA,EAAA0F,GAAA1F,GAAA,cACA,GAAAn6C,GAAAk6C,EAAAH,EAAAp6C,MAAAgpF,iBAAAhpF,KAAA,MAAAipF,iBAAAtoF,EACA,OAAA45C,KAAAC,IAAAn6C,EAAAuwE,GAAAr2B,EAAAC,GAAA,SAAAwQ,GACAhrD,KAAAmgD,MAAAG,YAAA3/C,EAAAN,EAAA2qD,GAAA/K,OAhBA,GAAA9+C,GAAAo4B,UAAAp3B,MACA,IAAAhB,EAAA,GACA,mBAAAR,GAAA,CACAQ,EAAA,IAAAuC,EAAA,GACA,KAAAu8C,IAAAt/C,GAAAX,KAAAmgD,MAAAF,EAAAt/C,EAAAs/C,GAAAv8C,EACA,OAAA1D,MAEAigD,EAAA,GAaA,MAAAmjC,IAAApjF,KAAA,SAAAW,EAAA+C,EAAAksG,IAEAzsB,GAAA0sB,WAAA,SAAAlvG,EAAA0iF,EAAApjC,GAEA,QAAA4vD,GAAAnvG,EAAAL,GACA,GAAAokD,GAAA4+B,EAAA9iF,KAAAP,KAAAU,EAAAL,EAAA+5C,EAAAp6C,MAAAgpF,iBAAAhpF,KAAA,MAAAipF,iBAAAtoF,GACA,OAAA8jD,IAAA,SAAAuG,GACAhrD,KAAAmgD,MAAAG,YAAA3/C,EAAA8jD,EAAAuG,GAAA/K,IAGA,MAPA1mB,WAAAp3B,OAAA,IAAA89C,EAAA,IAOAjgD,KAAAqjF,MAAA,SAAA1iF,EAAAkvG,IAEA1sB,GAAA+F,KAAA,SAAAxlF,GACA,MAAA0/E,IAAApjF,KAAA,OAAA0D,EAAA4/E,KAQAH,GAAA/gD,OAAA,WACA,GAAA+c,GAAAn/C,KAAA6gD,SACA,OAAA7gD,MAAA24C,KAAA,4BACA,GAAAl3C,EACAzB,MAAAm/C,GAAA5e,MAAA,IAAA9+B,EAAAzB,KAAAohD,aAAA3/C,EAAA4/C,YAAArhD,SAGAmjF,GAAAa,KAAA,SAAAtgF,GACA,GAAA0sC,GAAApwC,KAAAowC,GAAA+O,EAAAn/C,KAAA6gD,SACA,OAAAtnB,WAAAp3B,OAAA,EAAAnC,KAAAg6C,OAAAmF,GAAA/O,GAAA4zC,MACA,kBAAAtgF,OAAAy5C,GAAA6mC,KAAA3/E,MAAA84C,GAAA5jB,YACAmoB,EAAA1hD,KAAA,SAAAg6C,GACAA,EAAAmF,GAAA/O,GAAA4zC,KAAAtgF,MAGAy/E,GAAA/tC,MAAA,SAAA1xC,GACA,GAAA0sC,GAAApwC,KAAAowC,GAAA+O,EAAAn/C,KAAA6gD,SACA,OAAAtnB,WAAAp3B,OAAA,EAAAnC,KAAAg6C,OAAAmF,GAAA/O,GAAAgF,MACAsM,EAAA1hD,KAAA,kBAAA0D,GAAA,SAAAs2C,EAAA35C,EAAAshD,GACA3H,EAAAmF,GAAA/O,GAAAgF,OAAA1xC,EAAAnD,KAAAy5C,IAAAt1B,SAAArkB,EAAAshD,KACKj+C,KAAA,SAAAs2C,GACLA,EAAAmF,GAAA/O,GAAAgF,MAAA1xC,MAGAy/E,GAAAc,SAAA,SAAAvgF,GACA,GAAA0sC,GAAApwC,KAAAowC,GAAA+O,EAAAn/C,KAAA6gD,SACA,OAAAtnB,WAAAp3B,OAAA,EAAAnC,KAAAg6C,OAAAmF,GAAA/O,GAAA6zC,SACAviC,EAAA1hD,KAAA,kBAAA0D,GAAA,SAAAs2C,EAAA35C,EAAAshD,GACA3H,EAAAmF,GAAA/O,GAAA6zC,SAAAzmD,KAAA8S,IAAA,EAAA5sC,EAAAnD,KAAAy5C,IAAAt1B,SAAArkB,EAAAshD,MACKj+C,EAAA85B,KAAA8S,IAAA,EAAA5sC,GAAA,SAAAs2C,GACLA,EAAAmF,GAAA/O,GAAA6zC,SAAAvgF,MAGAy/E,GAAAxqC,KAAA,SAAAx0B,EAAA84B,GACA,GAAA7M,GAAApwC,KAAAowC,GAAA+O,EAAAn/C,KAAA6gD,SACA,IAAAtnB,UAAAp3B,OAAA,GACA,GAAAuhF,GAAA6rB,GAAAO,EAAA3gB,EACA,KACAA,GAAA/+C,EACAsR,EAAA1hD,KAAA,SAAAg6C,EAAA35C,EAAAshD,GACA4tD,GAAAv1D,EAAAmF,GAAA/O,GACAjsB,EAAA5jB,KAAAy5C,IAAAt1B,SAAArkB,EAAAshD,KAEO,QACP4tD,GAAA7rB,EACAyL,GAAA2gB,OAGApuD,GAAA1hD,KAAA,SAAAg6C,GACA,GAAAx2C,GAAAw2C,EAAAmF,GAAA/O,IACA5sC,EAAAo5C,QAAAp5C,EAAAo5C,MAAAO,GAAAR,SAAA,6BAAAI,GAAA54B,EAAA84B,IAGA,OAAAj9C,OAEAmjF,GAAA3/E,WAAA,WAEA,OADA4kF,GAAA7kD,EAAAyW,EAAAx2C,EAAAusG,EAAA/vG,KAAAowC,GAAA4/D,IAAAV,GAAAnwD,EAAAn/C,KAAA6gD,UAAAynC,KACA3mC,EAAA,EAAAnhD,EAAAR,KAAAmC,OAAoCw/C,EAAAnhD,EAAOmhD,IAAA,CAC3C2mC,EAAA5+E,KAAA0+E,KACA,QAAA7kD,GAAAvjC,KAAA2hD,GAAAthD,EAAA,EAAAc,EAAAoiC,EAAAphC,OAAwD9B,EAAAc,EAAOd,KAC/D25C,EAAAzW,EAAAljC,MACAmD,EAAAw2C,EAAAmF,GAAA4wD,GACAtsB,GAAAzpC,EAAA35C,EAAA8+C,EAAA6wD,GACAjqE,KAAAviC,EAAAuiC,KACAi+C,KAAAxgF,EAAAwgF,KACA5uC,MAAA5xC,EAAA4xC,MAAA5xC,EAAAygF,SACAA,SAAAzgF,EAAAygF,YAGAmE,EAAA1+E,KAAAswC,GAGA,MAAAkpC,IAAAoF,EAAAnpC,EAAA6wD,IAgFA7yD,GAAAwG,IAAAssD,KAAA,WAEA,QAAAA,GAAAjuG,GACAA,EAAA22C,KAAA,WACA,GAEAu3D,GAFAluG,EAAAm7C,GAAAiG,OAAApjD,MACA2tF,EAAA3tF,KAAAgtF,WAAAhhC,EAAAuiC,EAAAvuF,KAAAgtF,UAAAhhC,EAAAj2B,OACA4lD,EAAA,MAAAw0B,EAAA5hB,EAAA5S,MAAA4S,EAAA5S,MAAAt3E,MAAAkqF,EAAA6hB,GAAA7hB,EAAA9T,SAAA01B,EAAAt0B,EAAA,MAAAw0B,EAAA9hB,EAAA1S,WAAA0S,EAAA1S,WAAAx3E,MAAAkqF,EAAA6hB,GAAAj0D,EAAAk0D,EAAAvsB,EAAA9hF,EAAAumF,UAAA,SAAAh/E,KAAAoyE,EAAA4S,GAAA+hB,EAAAxsB,EAAA/hC,QAAA0pB,OAAA,eAAA3oE,KAAA,gBAAAq9C,MAAA,UAAAiX,IAAAm5C,EAAApzD,GAAA35C,WAAAsgF,EAAAgG,QAAA3pC,MAAA,UAAAiX,IAAAh1B,SAAAouE,EAAArzD,GAAA35C,WAAAsgF,EAAA6D,SAAAxnC,MAAA,aAAAswD,EAAAjzE,KAAA8S,IAAAogE,EAAA,GAAAC,EACAj5D,EAAAijC,GAAA4T,GAAAviE,EAAAhqB,EAAAumF,UAAA,WAAAh/E,MAAA,IAAAqnG,GAAA5kF,EAAA+1B,QAAAmC,OAAA,QAAAphD,KAAA,kBACAq6C,GAAA35C,WAAAwoB,GACAskF,GAAApsD,OAAA,QACAosD,EAAApsD,OAAA,OACA,IAAA2a,GAAAkF,EAAAjF,EAAAkF,EAAA6sC,EAAAP,EAAAltD,OAAA,QAAA0tD,EAAAN,EAAAptD,OAAA,QAAA8lC,EAAApF,EAAA1gC,OAAA,QAAA8lC,KAAArN,GAAAk1B,EAAAT,EAAAltD,OAAA,QAAA4tD,EAAAR,EAAAptD,OAAA,QAAA4J,EAAA,QAAAikD,GAAA,SAAAA,GAAA,GAcA,IAbA,WAAAA,GAAA,QAAAA,GACAf,EAAAhsB,GAAArlB,EAAA,IAAAC,EAAA,IAAAiF,EAAA,KAAAC,EAAA,KACAklB,EAAApmF,KAAA,KAAAkqD,EAAA,iBAAA7M,MAAA,wBACAywD,EAAA9tG,KAAA,QAAA40C,EAAA,OAAAsV,EAAAkkD,EAAA,MAAAx5D,EAAA,OAAAsV,EAAAkkD,KAEAhB,EAAA/rB,GAAAtlB,EAAA,IAAAC,EAAA,IAAAiF,EAAA,KAAAC,EAAA,KACAklB,EAAApmF,KAAA,cAAAq9C,MAAA,cAAA6M,EAAA,iBACA4jD,EAAA9tG,KAAA,QAAAkqD,EAAAkkD,EAAA,IAAAx5D,EAAA,SAAAA,EAAA,OAAAsV,EAAAkkD,IAEAL,EAAA/tG,KAAAkhE,EAAAhX,EAAA0jD,GACAK,EAAAjuG,KAAAg8D,EAAA9R,EAAAyjD,GACAK,EAAAhuG,KAAAihE,EAAA,GAAAjhE,KAAAkhE,EAAAhX,EAAA0jD,GACAM,EAAAluG,KAAA+7D,EAAA,GAAA/7D,KAAAg8D,EAAA9R,EAAAyjD,GACAliB,EAAAnR,UAAA,CACA,GAAAziC,GAAA4zC,EAAApvB,EAAAxkB,EAAAyiC,YAAA,CACAuQ,GAAAY,EAAA,SAAA7tF,GACA,MAAAi6C,GAAAj6C,GAAAy+D,OAESwuB,GAAAvQ,UACTuQ,EAAAY,EAEAgiB,EAAAhwG,KAAA2vG,EAAA3hB,EAAAZ,EAEA2iB,GAAA/vG,KAAA2vG,EAAAviB,EAAAY,GACAiiB,EAAAjwG,KAAA2vG,EAAA3hB,OAnCA,GAAA8hB,GAAArkD,EAAA7O,GAAA6O,MAAAwvB,SAAAy1B,EAAAE,GAAAT,EAAA,EAAAQ,EAAA,EAAAP,EAAA,EAAAP,GAAA,IAAAD,EAAA,IAwFA,OAlDAF,GAAAjkD,MAAA,SAAArR,GACA,MAAAphB,WAAAp3B,QACA6pD,EAAArR,EACAs1D,GAFAjkD,GAIAikD,EAAAgB,OAAA,SAAAt2D,GACA,MAAAphB,WAAAp3B,QACA8uG,EAAAt2D,IAAAy2D,IAAAz2D,EAAA,GAAAw2D,GACAlB,GAFAgB,GAIAhB,EAAAt0B,MAAA,WACA,MAAApiD,WAAAp3B,QACAiuG,EAAA5tD,GAAAjpB,WACA02E,GAFAG,GAIAH,EAAAE,WAAA,SAAAx1D,GACA,MAAAphB,WAAAp3B,QACAguG,EAAAx1D,EACAs1D,GAFAE,GAIAF,EAAAp0B,WAAA,SAAAlhC,GACA,MAAAphB,WAAAp3B,QACAkuG,EAAA11D,EACAs1D,GAFAI,GAIAJ,EAAAoB,SAAA,SAAA12D,GACA,GAAAx5C,GAAAo4B,UAAAp3B,MACA,OAAAhB,IACAuvG,GAAA/1D,EACAu2D,GAAA33E,UAAAp4B,EAAA,GACA8uG,GAHAS,GAKAT,EAAAS,cAAA,SAAA/1D,GACA,MAAAphB,WAAAp3B,QACAuuG,GAAA/1D,EACAs1D,GAFAS,GAIAT,EAAAiB,cAAA,SAAAv2D,GACA,MAAAphB,WAAAp3B,QACA+uG,GAAAv2D,EACAs1D,GAFAiB,GAIAjB,EAAAU,YAAA,SAAAh2D,GACA,MAAAphB,WAAAp3B,QACAwuG,GAAAh2D,EACAs1D,GAFAU,GAIAV,EAAAqB,cAAA,WACA,MAAA/3E,WAAAp3B,QAAA8tG,GAEAA,EAEA,IAAAkB,IAAA,SAAAC,IACAjtD,IAAA,EACAjJ,MAAA,EACAstD,OAAA,EACAztD,KAAA,EAcAoC,IAAAwG,IAAA4tD,MAAA,WAEA,QAAAA,GAAAvvG,GACAA,EAAA22C,KAAA,WACA,GAAA32C,GAAAm7C,GAAAiG,OAAApjD,MAAAmgD,MAAA,wBAAAA,MAAA,+CAAApD,GAAA,kBAAAy0D,GAAAz0D,GAAA,mBAAAy0D,GACAC,EAAAzvG,EAAAumF,UAAA,eAAAh/E,MAAA,GACAkoG,GAAA1vD,QAAAmC,OAAA,QAAAphD,KAAA,sBAAAq9C,MAAA,uBAAAA,MAAA,sBACAn+C,EAAAumF,UAAA,WAAAh/E,MAAA,IAAAw4C,QAAAmC,OAAA,QAAAphD,KAAA,kBAAAq9C,MAAA,gBACA,IAAAuxD,GAAA1vG,EAAAumF,UAAA,WAAAh/E,KAAAooG,EAAAx1D,EACAu1D,GAAA5nB,OAAA1nD,SACAsvE,EAAA3vD,QAAAmC,OAAA,KAAAphD,KAAA,iBAAApC,GACA,gBAAAA,IACSy/C,MAAA,kBAAAz/C,GACT,MAAAkxG,IAAAlxG,KACSwjD,OAAA,QAAAphD,KAAA,aAAApC,GACT,cAAAwI,KAAAxI,IAAA,SACSoC,KAAA,aAAApC,GACT,cAAAwI,KAAAxI,IAAA,SACSoC,KAAA,WAAAA,KAAA,YAAAq9C,MAAA,uBACTuxD,EAAAvxD,MAAA,UAAAoxD,EAAAtqB,QAAA,YACA,IAAAvvC,GAAAm6D,EAAA10D,GAAA35C,WAAAxB,GAAA8vG,EAAA30D,GAAA35C,WAAAiuG,EACA92D,KACAjD,EAAAijC,GAAAhgC,GACAm3D,EAAAhvG,KAAA,IAAA40C,EAAA,IAAA50C,KAAA,QAAA40C,EAAA,GAAAA,EAAA,IACAq6D,EAAAF,IAEAltD,IACAjN,EAAAijC,GAAAh2B,GACAmtD,EAAAhvG,KAAA,IAAA40C,EAAA,IAAA50C,KAAA,SAAA40C,EAAA,GAAAA,EAAA,IACAs6D,EAAAH,IAEAI,EAAAJ,KAyDA,QAAAI,GAAAjwG,GACAA,EAAAumF,UAAA,WAAAzlF,KAAA,qBAAApC,GACA,mBAAAwxG,GAAA,KAAAhpG,KAAAxI,IAAA,IAAAyxG,GAAA,KAAAjpG,KAAAxI,IAAA,MAGA,QAAAqxG,GAAA/vG,GACAA,EAAAohD,OAAA,WAAAtgD,KAAA,IAAAovG,EAAA,IACAlwG,EAAAumF,UAAA,2BAAAzlF,KAAA,QAAAovG,EAAA,GAAAA,EAAA,IAEA,QAAAF,GAAAhwG,GACAA,EAAAohD,OAAA,WAAAtgD,KAAA,IAAAqvG,EAAA,IACAnwG,EAAAumF,UAAA,2BAAAzlF,KAAA,SAAAqvG,EAAA,GAAAA,EAAA,IAEA,QAAAX,KAwBA,QAAAY,KACA,IAAAj1D,GAAAP,MAAAy1D,UACAC,IACAttC,EAAA,KACA0mB,EAAA,IAAAwmB,EAAA,GACAxmB,EAAA,IAAAymB,EAAA,GACAG,EAAA,GAEAp1D,KAGA,QAAAq1D,KACA,IAAAp1D,GAAAP,MAAAy1D,SAAA,GAAAC,IACA5mB,EAAA,IAAAwmB,EAAA,GACAxmB,EAAA,IAAAymB,EAAA,GACAG,EAAA,EACAp1D,KAGA,QAAAs1D,KACA,GAAA1uD,GAAA3G,GAAAitC,MAAAn+C,GAAA6+C,GAAA,CACAhlF,KACAg+C,EAAA,IAAAh+C,EAAA,GACAg+C,EAAA,IAAAh+C,EAAA,IAEAwsG,IACAn1D,GAAAP,MAAA61D,QACAztC,QAAAktC,EAAA,GAAAA,EAAA,OAAAC,EAAA,GAAAA,EAAA,QACAzmB,EAAA,GAAAwmB,IAAApuD,EAAA,GAAAkhB,EAAA,KACA0mB,EAAA,GAAAymB,IAAAruD,EAAA,GAAAkhB,EAAA,MACWA,EAAA,MAEX0tC,GAAAC,EAAA7uD,EAAAnJ,EAAA,KACAo3D,EAAA/vG,GACA8oF,GAAA,GAEA8nB,GAAAD,EAAA7uD,EAAAa,EAAA,KACAqtD,EAAAhwG,GACA8oF,GAAA,GAEAA,IACAmnB,EAAAjwG,GACA6wG,GACA1uF,KAAA,QACA+mF,KAAAoH,EAAA,mBAIA,QAAAK,GAAA7uD,EAAAkI,EAAA3rD,GACA,GAAAqwC,GAAAJ,EAAAoH,EAAAijC,GAAA3uB,GAAAwnB,EAAA97B,EAAA,GAAA+7B,EAAA/7B,EAAA,GAAAxL,EAAAw/C,EAAArrF,GAAAosE,EAAApsE,EAAA8xG,EAAAD,EAAAtoG,EAAA6iE,EAAA,GAAAA,EAAA,EAiBA,IAhBA6lC,IACA9+B,GAAAtnC,EACAunC,GAAA7pE,EAAAsiC,GAEAwE,GAAArwC,EAAAyyG,EAAAC,GAAAv1E,KAAA8S,IAAAkjC,EAAAh2C,KAAAkT,IAAA+iC,EAAA3vB,EAAAzjD,KAAAyjD,EAAAzjD,GACAiyG,EACAhiE,GAAAI,GAAAxE,GAAAtiC,GAEAo7D,IAAA94B,EAAA1O,KAAA8S,IAAAkjC,EAAAh2C,KAAAkT,IAAA+iC,EAAA,EAAAzO,EAAA3kE,GAAAqwC,KACAxE,EAAAwE,GACAJ,EAAAI,EACAA,EAAAxE,GAEAoE,EAAApE,GAGAugC,EAAA,IAAA/7B,GAAA+7B,EAAA,IAAAn8B,EAIA,MAHAjwC,GAAA2yG,EAAA,KAAsCC,EAAA,KACtCxmC,EAAA,GAAA/7B,EACA+7B,EAAA,GAAAn8B,GACA,EAGA,QAAA4iE,KACAV,IACAxwG,EAAAm+C,MAAA,wBAAAooC,UAAA,WAAApoC,MAAA,UAAAoxD,EAAAtqB,QAAA,aACA9pC,GAAAiG,OAAA,QAAAjD,MAAA,eACA79C,EAAAy6C,GAAA,wBAAAA,GAAA,sBAAAA,GAAA,wBAAAA,GAAA,uBAAAA,GAAA,sBAAAA,GAAA,oBACAwuC,IACAsnB,GACA1uF,KAAA,aAvGA,GAAA6gD,GAAAl/D,EAAAmmC,EAAAjsC,KAAAmzG,EAAAh2D,GAAAiG,OAAAjG,GAAAP,MAAA3Q,QAAA4mE,EAAAj2D,EAAAY,GAAAvR,EAAA1S,WAAAv3B,EAAAm7C,GAAAiG,OAAAnX,GAAAmnE,EAAAD,EAAAppB,QAAA2oB,GAAA,UAAAxpG,KAAAkqG,IAAAz4D,EAAAi4D,GAAA,UAAA1pG,KAAAkqG,IAAAzuD,EAAA2tD,EAAAa,EAAArqB,QAAA,UAAAyC,EAAAtoC,GAAAhX,GAAAy/C,EAAAvuC,GAAAitC,MAAAn+C,GACA3pC,EAAA66C,GAAAiG,OAAAhJ,EAAAnO,IAAA8Q,GAAA,gBAAAq1D,GAAAr1D,GAAA,cAAAw1D,EAOA,IANAp1D,GAAAP,MAAA8G,eACAphD,EAAAy6C,GAAA,kBAAAy1D,GAAAz1D,GAAA,iBAAAm2D,GAEA5wG,EAAAy6C,GAAA,kBAAAy1D,GAAAz1D,GAAA,gBAAAm2D,GAEAlxG,EAAAihF,YAAAsF,UAAA,KAAAtF,YACAqvB,EACA5mB,EAAA,GAAAwmB,EAAA,GAAAxmB,EAAA,GACAA,EAAA,GAAAymB,EAAA,GAAAzmB,EAAA,OACO,IAAA0nB,EAAA,CACP,GAAAC,IAAA,KAAAnqG,KAAAkqG,GAAAE,GAAA,KAAApqG,KAAAkqG,EACAttG,IAAAosG,EAAA,EAAAmB,GAAA3nB,EAAA,GAAAymB,EAAA,EAAAmB,GAAA5nB,EAAA,IACAA,EAAA,GAAAwmB,EAAAmB,GACA3nB,EAAA,GAAAymB,EAAAmB,OACOn2D,IAAAP,MAAA61D,SAAAztC,EAAA0mB,EAAA91D,QACP5zB,GAAAm+C,MAAA,yBAAAooC,UAAA,WAAApoC,MAAA,gBACAhD,GAAAiG,OAAA,QAAAjD,MAAA,SAAAgzD,EAAAhzD,MAAA,WACA0yD,GACA1uF,KAAA,eAEAquF,IA3HA,GAAAS,GAAAD,EAAAp2D,EAAAW,EAAAg0D,EAAA,iCAAA52D,EAAA,KAAAgK,EAAA,KAAAutD,GAAA,KAAAC,GAAA,KAAAY,GAAA,EAAAD,GAAA,EAAAnB,EAAA4B,GAAA,EAoRA,OAnPAhC,GAAA30D,MAAA,SAAA56C,GACAA,EAAA22C,KAAA,WACA,GAAAk6D,GAAAj2D,EAAAY,GAAAx9C,KAAAu5B,WAAAi6E,GACA74D,EAAAu3D,EACAvtD,EAAAwtD,EACA9xG,EAAA4yG,EACAtxD,EAAAqxD,GACSS,EAAAzzG,KAAAgtF,WAAAwmB,CACTxzG,MAAAgtF,UAAAwmB,EACArkB,GACAhyC,GAAAiG,OAAApjD,MAAAwD,aAAAm1C,KAAA,yBACAs6D,EAAAQ,EAAApzG,EACA2yG,EAAAS,EAAA9xD,EACAuwD,EAAAuB,EAAA94D,EACAw3D,EAAAsB,EAAA9uD,EACAkuD,GACA1uF,KAAA,iBAEWk/D,MAAA,yBACX,GAAAhG,GAAA/L,GAAA4gC,EAAAsB,EAAA74D,GAAA+4D,EAAApiC,GAAA6gC,EAAAqB,EAAA7uD,EAEA,OADAsuD,GAAAD,EAAA,KACA,SAAAhoD,GACAknD,EAAAsB,EAAA74D,EAAA0iC,EAAAryB,GACAmnD,EAAAqB,EAAA7uD,EAAA+uD,EAAA1oD,GACA6nD,GACA1uF,KAAA,QACA+mF,KAAA,cAGWvyD,KAAA,uBACXs6D,EAAAO,EAAAnzG,EACA2yG,EAAAQ,EAAA7xD,EACAkxD,GACA1uF,KAAA,QACA+mF,KAAA,WAEA2H,GACA1uF,KAAA,gBAIA0uF,GACA1uF,KAAA,eAEA0uF,GACA1uF,KAAA,QACA+mF,KAAA,WAEA2H,GACA1uF,KAAA,iBA8HAotF,EAAA52D,EAAA,SAAAkC,GACA,MAAAtjB,WAAAp3B,QACAw4C,EAAAkC,EACA80D,EAAA4B,IAAA54D,GAAA,GAAAgK,GACA4sD,GAHA52D,GAKA42D,EAAA5sD,EAAA,SAAA9H,GACA,MAAAtjB,WAAAp3B,QACAwiD,EAAA9H,EACA80D,EAAA4B,IAAA54D,GAAA,GAAAgK,GACA4sD,GAHA5sD,GAKA4sD,EAAA/lE,MAAA,SAAAqR,GACA,MAAAtjB,WAAAp3B,QACAw4C,GAAAgK,GAAAouD,IAAAl2D,EAAA,GAAAi2D,IAAAj2D,EAAA,IAAmDlC,EAAAo4D,IAAAl2D,EAA0B8H,IAAAmuD,IAAAj2D,GAC7E00D,GAFA52D,GAAAgK,GAAAouD,EAAAD,GAAAn4D,EAAAo4D,EAAApuD,EAAAmuD,EAAA,MAIAvB,EAAA9kC,OAAA,SAAA5vB,GACA,GAAAib,GAAA+G,EAAAjH,EAAAkH,EAAA9T,CACA,OAAAzxB,WAAAp3B,QAqBAw4C,IACAmd,EAAAjb,EAAA,GAAAgiB,EAAAhiB,EAAA,GACA8H,IAAAmT,IAAA,GAAA+G,IAAA,IACAo0C,GAAAn7C,EAAA+G,GACAlkB,EAAAxE,SAAA2hB,EAAAnd,EAAAmd,GAAA+G,EAAAlkB,EAAAkkB,IACAA,EAAA/G,IAAA9M,EAAA8M,IAAA+G,IAAA7T,GACA8M,GAAAo6C,EAAA,IAAArzC,GAAAqzC,EAAA,KAAAA,GAAAp6C,EAAA+G,KAEAla,IACAiT,EAAA/a,EAAA,GAAAiiB,EAAAjiB,EAAA,GACAlC,IAAAid,IAAA,GAAAkH,IAAA,IACAk0C,GAAAp7C,EAAAkH,GACAna,EAAAxO,SAAAyhB,EAAAjT,EAAAiT,GAAAkH,EAAAna,EAAAma,IACAA,EAAAlH,IAAA5M,EAAA4M,IAAAkH,IAAA9T,GACA4M,GAAAu6C,EAAA,IAAArzC,GAAAqzC,EAAA,KAAAA,GAAAv6C,EAAAkH,KAEAyyC,IApCA52D,IACAs4D,GACAn7C,EAAAm7C,EAAA,GAAAp0C,EAAAo0C,EAAA,KAEAn7C,EAAAo6C,EAAA,GAAArzC,EAAAqzC,EAAA,GACAv3D,EAAAxE,SAAA2hB,EAAAnd,EAAAxE,OAAA2hB,GAAA+G,EAAAlkB,EAAAxE,OAAA0oB,IACAA,EAAA/G,IAAA9M,EAAA8M,IAAA+G,IAAA7T,KAGArG,IACAquD,GACAp7C,EAAAo7C,EAAA,GAAAl0C,EAAAk0C,EAAA,KAEAp7C,EAAAu6C,EAAA,GAAArzC,EAAAqzC,EAAA,GACAxtD,EAAAxO,SAAAyhB,EAAAjT,EAAAxO,OAAAyhB,GAAAkH,EAAAna,EAAAxO,OAAA2oB,IACAA,EAAAlH,IAAA5M,EAAA4M,IAAAkH,IAAA9T,KAGArQ,GAAAgK,IAAAmT,EAAAF,IAAAiH,EAAAC,IAAAnkB,GAAAmd,EAAA+G,GAAAla,IAAAiT,EAAAkH,KAoBAyyC,EAAAhtF,MAAA,WAKA,MAJAgtF,GAAAtqB,UACAirB,GAAA,KAAAC,GAAA,KACAc,EAAAD,EAAA,MAEAzB,GAEAA,EAAAtqB,MAAA,WACA,QAAAtsC,GAAAu3D,EAAA,IAAAA,EAAA,MAAAvtD,GAAAwtD,EAAA,IAAAA,EAAA,IAEAh1D,GAAAuN,OAAA6mD,EAAA30D,EAAA,MAEA,IAAAg1D,KACAzwG,EAAA,YACAS,EAAA,YACAF,EAAA,YACAY,EAAA,YACAqxG,GAAA,cACAC,GAAA,cACAC,GAAA,cACAC,GAAA,eAEAP,KAAA,6DACA9kD,GAAA6D,GAAAhK,OAAAq0C,GAAAD,WACAqX,GAAAtlD,GAAAH,IACA0lD,GAAAD,GAAA,wBACAtlD,IAAAwlD,IAAAjjE,KAAAzvC,UAAA8iF,cAAA,GAAArzC,MAAA,4BAAAozC,GAAA4vB,GAIA5vB,GAAAv1B,MAAA,SAAAzoD,GACA,GAAA4nD,GAAA,GAAAhd,MAAA5qC,EACA,OAAA6iC,OAAA+kB,GAAA,KAAAA,GAEAo2B,GAAA3uD,SAAAu+E,GAAAv+E,SACA68B,GAAA4hD,OAAAnmD,GAAA,SAAAC,GACA,UAAAG,IAAA,IAAA3wB,KAAAyU,MAAA+b,EAAA,OACG,SAAAA,EAAAloD,GACHkoD,EAAAguC,QAAAhuC,EAAAgtC,UAAA,IAAAx9D,KAAAyU,MAAAnsC,KACG,SAAAkoD,GACH,MAAAA,GAAA0E,eAEAJ,GAAA6hD,QAAA7hD,GAAA4hD,OAAAx8D,MACA4a,GAAA6hD,QAAA7lD,IAAAgE,GAAA4hD,OAAA5lD,IAAA5W,MACA4a,GAAA8hD,OAAArmD,GAAA,SAAAC,GACA,UAAAG,IAAA,IAAA3wB,KAAAyU,MAAA+b,EAAA,OACG,SAAAA,EAAAloD,GACHkoD,EAAAguC,QAAAhuC,EAAAgtC,UAAA,IAAAx9D,KAAAyU,MAAAnsC,KACG,SAAAkoD,GACH,MAAAA,GAAAyE,eAEAH,GAAA+hD,QAAA/hD,GAAA8hD,OAAA18D,MACA4a,GAAA+hD,QAAA/lD,IAAAgE,GAAA8hD,OAAA9lD,IAAA5W,MACA4a,GAAAgiD,KAAAvmD,GAAA,SAAAC,GACA,GAAAumD,GAAAvmD,EAAAkG,oBAAA,EACA,WAAA/F,IAAA,MAAA3wB,KAAAyU,MAAA+b,EAAA,KAAAumD,QACG,SAAAvmD,EAAAloD,GACHkoD,EAAAguC,QAAAhuC,EAAAgtC,UAAA,KAAAx9D,KAAAyU,MAAAnsC,KACG,SAAAkoD,GACH,MAAAA,GAAAoE,aAEAE,GAAAkiD,MAAAliD,GAAAgiD,KAAA58D,MACA4a,GAAAkiD,MAAAlmD,IAAAgE,GAAAgiD,KAAAhmD,IAAA5W,MACA4a,GAAAmiD,MAAA1mD,GAAA,SAAAC,GAGA,MAFAA,GAAAsE,GAAA2pC,IAAAjuC,GACAA,EAAAitC,QAAA,GACAjtC,GACG,SAAAA,EAAAloD,GACHkoD,EAAA4tC,SAAA5tC,EAAAgE,WAAAlsD,IACG,SAAAkoD,GACH,MAAAA,GAAAgE,aAEAM,GAAAd,OAAAc,GAAAmiD,MAAA/8D,MACA4a,GAAAd,OAAAlD,IAAAgE,GAAAmiD,MAAAnmD,IAAA5W,KAsDA,IAAA+sC,KAAA,oGACAiwB,KAAApiD,GAAA4hD,OAAA,IAAA5hD,GAAA4hD,OAAA,IAAA5hD,GAAA4hD,OAAA,KAAA5hD,GAAA4hD,OAAA,KAAA5hD,GAAA8hD,OAAA,IAAA9hD,GAAA8hD,OAAA,IAAA9hD,GAAA8hD,OAAA,KAAA9hD,GAAA8hD,OAAA,KAAA9hD,GAAAgiD,KAAA,IAAAhiD,GAAAgiD,KAAA,IAAAhiD,GAAAgiD,KAAA,IAAAhiD,GAAAgiD,KAAA,KAAAhiD,GAAA2pC,IAAA,IAAA3pC,GAAA2pC,IAAA,IAAA3pC,GAAA6pC,KAAA,IAAA7pC,GAAAmiD,MAAA,IAAAniD,GAAAmiD,MAAA,IAAAniD,GAAAoyB,KAAA,IACAiwB,GAAAlmD,GAAAkD,QAAA,eAAAjxD,GACA,MAAAA,GAAA8xD,qBACG,eAAA9xD,GACH,MAAAA,GAAAgyD,gBACG,iBAAAhyD,GACH,MAAAA,GAAA+xD,gBACG,iBAAA/xD,GACH,MAAAA,GAAA0xD,cACG,iBAAA1xD,GACH,MAAAA,GAAA6uD,UAAA,GAAA7uD,EAAAyxD,aACG,iBAAAzxD,GACH,UAAAA,EAAAyxD,aACG,cAAAzxD,GACH,MAAAA,GAAAsxD,cACG,KAAA8G,MACH6rB,IACAjtC,MAAA,SAAAh0B,EAAAg3D,EAAAhoD,GACA,MAAAyqB,IAAAzF,MAAAla,KAAAwU,KAAAtuB,EAAAgP,MAAAgoD,EAAAhoD,GAAA1uB,IAAA4gF,KAEA3yC,MAAAkK,EACAnK,KAAAmK,EAEAu4D,IAAAhwB,KAAApyB,GAAAoyB,KACApyB,GAAAtG,MAAA,WACA,MAAAs4B,IAAAnnC,GAAA6O,MAAAwvB,SAAAk5B,GAAAC,IAEA,IAAAC,IAAAF,GAAA1wG,IAAA,SAAAxD,GACA,OAAAA,EAAA,GAAA8tD,IAAA9tD,EAAA,MAEAq0G,GAAAd,GAAApiD,QAAA,eAAAjxD,GACA,MAAAA,GAAAk6F,wBACG,eAAAl6F,GACH,MAAAA,GAAAq6F,mBACG,iBAAAr6F,GACH,MAAAA,GAAAm6F,mBACG,iBAAAn6F,GACH,MAAAA,GAAAi6F,iBACG,iBAAAj6F,GACH,MAAAA,GAAA+5F,aAAA,GAAA/5F,EAAA85F,gBACG,iBAAA95F,GACH,UAAAA,EAAA85F,gBACG,cAAA95F,GACH,MAAAA,GAAAo6F,iBACG,KAAAhiC,KACH87C,IAAAlwB,KAAApyB,GAAAoyB,KAAAp2B,IACAgE,GAAAtG,MAAAsC,IAAA,WACA,MAAAg2B,IAAAnnC,GAAA6O,MAAAwvB,SAAAo5B,GAAAC,KAEA13D,GAAA+rC,KAAArgC,GAAA,SAAAO,GACA,MAAAA,GAAAwB,eAEAzN,GAAA23D,KAAA,SAAA/rD,EAAAjvB,GACA,MAAAmvB,IAAAF,EAAA,mBAAAg8B,GAAAjrD,IAKAqjB,GAAAgsC,KAAA,SAAApgC,EAAAjvB,GACA,MAAAmvB,IAAAF,EAAA,YAAAk8B,GAAAnrD,IAOAqjB,GAAAwrC,IAAA9/B,GAAA,SAAAO,GACA,MAAAA,GAAA2rD,cAEA/0G,KAAAm9C,MAAArD,EAAA,OAAAvyC,MAAAzD,EAAA,kBAAAg2C,KAAAv5C,KAAAZ,EAAAO,EAAAP,EAAAC,GAAAk6C,KAAAl6C,EAAAD,QAAAmE,OLq3hBM,SAAUlE,EAAQD,EAASO,GMvq0BjC,GAAA80G,GAAA90G,EAAA,GAEAN,GAAAD,SACAs1G,MAAAD,EAAAC,MACAH,KAAA50G,EAAA,IACAg1G,IAAAh1G,EAAA,IACAolF,QAAA0vB,EAAA1vB,UN6s0BM,SAAU1lF,EAAQD,EAASO,GAEjC,YO/t0BA,SAAA+0G,GAAAE,GACAn1G,KAAAo1G,aAAAtzG,EAAAuG,IAAA8sG,EAAA,aAAAA,EAAAE,SACAr1G,KAAAs1G,gBAAAxzG,EAAAuG,IAAA8sG,EAAA,eAAAA,EAAAI,WACAv1G,KAAAw1G,cAAA1zG,EAAAuG,IAAA8sG,EAAA,aAAAA,EAAAM,SAGAz1G,KAAA01G,WAAAnuG,GAGAvH,KAAA21G,oBAAA7zG,EAAAktC,aAAAznC,IAGAvH,KAAA41G,oBAAA9zG,EAAAktC,aAAAznC,IAGAvH,KAAA61G,UAEA71G,KAAAw1G,cAEAx1G,KAAA81G,WAGA91G,KAAA+1G,aACA/1G,KAAA+1G,UAAAC,OAIAh2G,KAAAi2G,OAGAj2G,KAAAk2G,UAGAl2G,KAAAm2G,QAGAn2G,KAAAo2G,SAGAp2G,KAAAq2G,aAGAr2G,KAAAs2G,eA+ZA,QAAAC,GAAAvyG,EAAAq3C,GACAr3C,EAAAq3C,GACAr3C,EAAAq3C,KAEAr3C,EAAAq3C,GAAA,EAIA,QAAAm7D,GAAAxyG,EAAAq3C,KACAr3C,EAAAq3C,UAAkBr3C,GAAAq3C,GAGlB,QAAAo7D,GAAAC,EAAA52C,EAAA62C,EAAAh2G,GACA,GAAAsB,GAAA,GAAA69D,EACAx9D,EAAA,GAAAq0G,CACA,KAAAD,GAAAz0G,EAAAK,EAAA,CACA,GAAAs0G,GAAA30G,CACAA,GAAAK,EACAA,EAAAs0G,EAEA,MAAA30G,GAAA40G,EAAAv0G,EAAAu0G,GACA/0G,EAAA6nC,YAAAhpC,GAAAm2G,EAAAn2G,GAGA,QAAAo2G,GAAAL,EAAA52C,EAAA62C,EAAAh2G,GACA,GAAAsB,GAAA,GAAA69D,EACAx9D,EAAA,GAAAq0G,CACA,KAAAD,GAAAz0G,EAAAK,EAAA,CACA,GAAAs0G,GAAA30G,CACAA,GAAAK,EACAA,EAAAs0G,EAEA,GAAAI,IAAkB/0G,IAAAK,IAIlB,OAHA3B,KACAq2G,EAAAr2G,QAEAq2G,EAGA,QAAAC,GAAAP,EAAAM,GACA,MAAAP,GAAAC,EAAAM,EAAA/0G,EAAA+0G,EAAA10G,EAAA00G,EAAAr2G,MAngBA,GAAAmB,GAAA5B,EAAA,EAEAN,GAAAD,QAAAs1G,CAEA,IAAA6B,GAAA,KACAd,EAAA,KACAa,EAAA,GA0DA5B,GAAA1zG,UAAA21G,WAAA,EAGAjC,EAAA1zG,UAAA41G,WAAA,EAKAlC,EAAA1zG,UAAAm1G,WAAA,WACA,MAAA12G,MAAAo1G,aAGAH,EAAA1zG,UAAA61G,aAAA,WACA,MAAAp3G,MAAAs1G,eAGAL,EAAA1zG,UAAA81G,WAAA,WACA,MAAAr3G,MAAAw1G,aAGAP,EAAA1zG,UAAA+1G,SAAA,SAAAC,GAEA,MADAv3G,MAAA01G,OAAA6B,EACAv3G,MAGAi1G,EAAA1zG,UAAA6B,MAAA,WACA,MAAApD,MAAA01G,QAMAT,EAAA1zG,UAAAi2G,oBAAA,SAAAC,GAKA,MAJA31G,GAAA2B,WAAAg0G,KACAA,EAAA31G,EAAAktC,SAAAyoE,IAEAz3G,KAAA21G,oBAAA8B,EACAz3G,MAGAi1G,EAAA1zG,UAAAm2G,UAAA,WACA,MAAA13G,MAAAk3G,YAGAjC,EAAA1zG,UAAAkuE,MAAA,WACA,MAAA3tE,GAAAsmB,KAAApoB,KAAA61G,SAGAZ,EAAA1zG,UAAAs3B,QAAA,WACA,MAAA/2B,GAAA0iC,OAAAxkC,KAAAyvE,QAAA3tE,EAAAmzC,KAAA,SAAAhzC,GACA,MAAAH,GAAA0mC,QAAAxoC,KAAAi2G,IAAAh0G,KACGjC,QAGHi1G,EAAA1zG,UAAAo2G,MAAA,WACA,MAAA71G,GAAA0iC,OAAAxkC,KAAAyvE,QAAA3tE,EAAAmzC,KAAA,SAAAhzC,GACA,MAAAH,GAAA0mC,QAAAxoC,KAAAm2G,KAAAl0G,KACGjC,QAGHi1G,EAAA1zG,UAAAq2G,SAAA,SAAAC,EAAAn0G,GACA,GAAAc,GAAA+0B,SAQA,OAPAz3B,GAAA62C,KAAAk/D,EAAA/1G,EAAAmzC,KAAA,SAAAhzC,GACAuC,EAAArC,OAAA,EACAnC,KAAA83G,QAAA71G,EAAAyB,GAEA1D,KAAA83G,QAAA71G,IAEGjC,OACHA,MAGAi1G,EAAA1zG,UAAAu2G,QAAA,SAAA71G,EAAAyB,GACA,MAAA5B,GAAAuG,IAAArI,KAAA61G,OAAA5zG,IACAs3B,UAAAp3B,OAAA,IACAnC,KAAA61G,OAAA5zG,GAAAyB,GAEA1D,OAGAA,KAAA61G,OAAA5zG,GAAAs3B,UAAAp3B,OAAA,EAAAuB,EAAA1D,KAAA21G,oBAAA1zG,GACAjC,KAAAw1G,cACAx1G,KAAA81G,QAAA7zG,GAAA+zG,EACAh2G,KAAA+1G,UAAA9zG,MACAjC,KAAA+1G,UAAAC,GAAA/zG,IAAA,GAEAjC,KAAAi2G,IAAAh0G,MACAjC,KAAAk2G,OAAAj0G,MACAjC,KAAAm2G,KAAAl0G,MACAjC,KAAAo2G,MAAAn0G,QACAjC,KAAAk3G,WACAl3G,OAGAi1G,EAAA1zG,UAAAy4C,KAAA,SAAA/3C,GACA,MAAAjC,MAAA61G,OAAA5zG,IAGAgzG,EAAA1zG,UAAAw2G,QAAA,SAAA91G,GACA,MAAAH,GAAAuG,IAAArI,KAAA61G,OAAA5zG,IAGAgzG,EAAA1zG,UAAAy2G,WAAA,SAAA/1G,GACA,GAAAlC,GAAAC,IACA,IAAA8B,EAAAuG,IAAArI,KAAA61G,OAAA5zG,GAAA,CACA,GAAAg2G,GAAA,SAAAr2G,GAAkC7B,EAAAk4G,WAAAl4G,EAAAs2G,UAAAz0G,WAClC5B,MAAA61G,OAAA5zG,GACAjC,KAAAw1G,cACAx1G,KAAAk4G,4BAAAj2G,SACAjC,MAAA81G,QAAA7zG,GACAH,EAAA62C,KAAA34C,KAAAkC,SAAAD,GAAAH,EAAAmzC,KAAA,SAAAkiC,GACAn3E,KAAAm4G,UAAAhhC,IACOn3E,aACPA,MAAA+1G,UAAA9zG,IAEAH,EAAA62C,KAAA72C,EAAAsmB,KAAApoB,KAAAi2G,IAAAh0G,IAAAg2G,SACAj4G,MAAAi2G,IAAAh0G,SACAjC,MAAAk2G,OAAAj0G,GACAH,EAAA62C,KAAA72C,EAAAsmB,KAAApoB,KAAAm2G,KAAAl0G,IAAAg2G,SACAj4G,MAAAm2G,KAAAl0G,SACAjC,MAAAo2G,MAAAn0G,KACAjC,KAAAk3G,WAEA,MAAAl3G,OAGAi1G,EAAA1zG,UAAA42G,UAAA,SAAAl2G,EAAAwrB,GACA,IAAAztB,KAAAw1G,YACA,SAAAnsE,OAAA,4CAGA,IAAAvnC,EAAA6nC,YAAAlc,GACAA,EAAAuoF,MACG,CAEHvoF,GAAA,EACA,QAAAwsD,GAAAxsD,GACA3rB,EAAA6nC,YAAAswC,GACAA,EAAAj6E,KAAAytB,OAAAwsD,GACA,GAAAA,IAAAh4E,EACA,SAAAonC,OAAA,WAAA5b,EAAA,iBAAAxrB,EACA,+BAIAjC,MAAA83G,QAAArqF,GAOA,MAJAztB,MAAA83G,QAAA71G,GACAjC,KAAAk4G,4BAAAj2G,GACAjC,KAAA81G,QAAA7zG,GAAAwrB,EACAztB,KAAA+1G,UAAAtoF,GAAAxrB,IAAA,EACAjC,MAGAi1G,EAAA1zG,UAAA22G,4BAAA,SAAAj2G,SACAjC,MAAA+1G,UAAA/1G,KAAA81G,QAAA7zG,QAGAgzG,EAAA1zG,UAAAksB,OAAA,SAAAxrB,GACA,GAAAjC,KAAAw1G,YAAA,CACA,GAAA/nF,GAAAztB,KAAA81G,QAAA7zG,EACA,IAAAwrB,IAAAuoF,EACA,MAAAvoF,KAKAwnF,EAAA1zG,UAAAW,SAAA,SAAAD,GAKA,GAJAH,EAAA6nC,YAAA1nC,KACAA,EAAA+zG,GAGAh2G,KAAAw1G,YAAA,CACA,GAAAtzG,GAAAlC,KAAA+1G,UAAA9zG,EACA,IAAAC,EACA,MAAAJ,GAAAsmB,KAAAlmB,OAEG,IAAAD,IAAA+zG,EACH,MAAAh2G,MAAAyvE,OACG,IAAAzvE,KAAA+3G,QAAA91G,GACH,WAIAgzG,EAAA1zG,UAAA62G,aAAA,SAAAn2G,GACA,GAAAo2G,GAAAr4G,KAAAk2G,OAAAj0G,EACA,IAAAo2G,EACA,MAAAv2G,GAAAsmB,KAAAiwF,IAIApD,EAAA1zG,UAAA+2G,WAAA,SAAAr2G,GACA,GAAAs2G,GAAAv4G,KAAAo2G,MAAAn0G,EACA,IAAAs2G,EACA,MAAAz2G,GAAAsmB,KAAAmwF,IAIAtD,EAAA1zG,UAAAomG,UAAA,SAAA1lG,GACA,GAAAu2G,GAAAx4G,KAAAo4G,aAAAn2G,EACA,IAAAu2G,EACA,MAAA12G,GAAAiyC,MAAAykE,EAAAx4G,KAAAs4G,WAAAr2G,KAIAgzG,EAAA1zG,UAAAk3G,YAAA,SAAAj0E,GAuBA,QAAAk0E,GAAAz2G,GACA,GAAAwrB,GAAA1tB,EAAA0tB,OAAAxrB,EACA,YAAAsF,KAAAkmB,GAAAsI,EAAAgiF,QAAAtqF,IACAkrF,EAAA12G,GAAAwrB,EACAA,GACKA,IAAAkrF,GACLA,EAAAlrF,GAEAirF,EAAAjrF,GA9BA,GAAAsI,GAAA,GAAA/1B,MAAA81B,aACAu/E,SAAAr1G,KAAAo1G,YACAG,WAAAv1G,KAAAs1G,cACAG,SAAAz1G,KAAAw1G,aAGAz/E,GAAAuhF,SAAAt3G,KAAAoD,SAEAtB,EAAA62C,KAAA34C,KAAA61G,OAAA/zG,EAAAmzC,KAAA,SAAAvxC,EAAAzB,GACAuiC,EAAAviC,IACA8zB,EAAA+hF,QAAA71G,EAAAyB,IAEG1D,OAEH8B,EAAA62C,KAAA34C,KAAAq2G,UAAAv0G,EAAAmzC,KAAA,SAAArzC,GACAm0B,EAAAgiF,QAAAn2G,EAAAK,IAAA8zB,EAAAgiF,QAAAn2G,EAAAU,IACAyzB,EAAA6iF,QAAAh3G,EAAA5B,KAAA2pE,KAAA/nE,KAEG5B,MAEH,IAAAD,GAAAC,KACA24G,IAmBA,OANA34G,MAAAw1G,aACA1zG,EAAA62C,KAAA5iB,EAAA05C,QAAA,SAAAxtE,GACA8zB,EAAAoiF,UAAAl2G,EAAAy2G,EAAAz2G,MAIA8zB,GAKAk/E,EAAA1zG,UAAAs3G,oBAAA,SAAApB,GAKA,MAJA31G,GAAA2B,WAAAg0G,KACAA,EAAA31G,EAAAktC,SAAAyoE,IAEAz3G,KAAA41G,oBAAA6B,EACAz3G,MAGAi1G,EAAA1zG,UAAAu3G,UAAA,WACA,MAAA94G,MAAAm3G,YAGAlC,EAAA1zG,UAAAgrE,MAAA,WACA,MAAAzqE,GAAA+D,OAAA7F,KAAAq2G,YAGApB,EAAA1zG,UAAAw3G,QAAA,SAAAlB,EAAAn0G,GACA,GAAA3D,GAAAC,KACAwE,EAAA+0B,SASA,OARAz3B,GAAAkjC,OAAA6yE,EAAA,SAAA51G,EAAAK,GAMA,MALAkC,GAAArC,OAAA,EACApC,EAAA64G,QAAA32G,EAAAK,EAAAoB,GAEA3D,EAAA64G,QAAA32G,EAAAK,GAEAA,IAEAtC,MAOAi1G,EAAA1zG,UAAAq3G,QAAA,WACA,GAAA32G,GAAAK,EAAA3B,EAAA+C,EACAs1G,GAAA,EACAC,EAAA1/E,UAAA,EAEA,iBAAA0/E,IAAA,OAAAA,GAAA,KAAAA,IACAh3G,EAAAg3G,EAAAh3G,EACAK,EAAA22G,EAAA32G,EACA3B,EAAAs4G,EAAAt4G,KACA,IAAA44B,UAAAp3B,SACAuB,EAAA61B,UAAA,GACAy/E,GAAA,KAGA/2G,EAAAg3G,EACA32G,EAAAi3B,UAAA,GACA54B,EAAA44B,UAAA,GACAA,UAAAp3B,OAAA,IACAuB,EAAA61B,UAAA,GACAy/E,GAAA,IAIA/2G,EAAA,GAAAA,EACAK,EAAA,GAAAA,EACAR,EAAA6nC,YAAAhpC,KACAA,EAAA,GAAAA,EAGA,IAAAiB,GAAA60G,EAAAz2G,KAAAo1G,YAAAnzG,EAAAK,EAAA3B,EACA,IAAAmB,EAAAuG,IAAArI,KAAAs2G,YAAA10G,GAIA,MAHAo3G,KACAh5G,KAAAs2G,YAAA10G,GAAA8B,GAEA1D,IAGA,KAAA8B,EAAA6nC,YAAAhpC,KAAAX,KAAAs1G,cACA,SAAAjsE,OAAA,oDAKArpC,MAAA83G,QAAA71G,GACAjC,KAAA83G,QAAAx1G,GAEAtC,KAAAs2G,YAAA10G,GAAAo3G,EAAAt1G,EAAA1D,KAAA41G,oBAAA3zG,EAAAK,EAAA3B,EAEA,IAAAq2G,GAAAD,EAAA/2G,KAAAo1G,YAAAnzG,EAAAK,EAAA3B,EAYA,OAVAsB,GAAA+0G,EAAA/0G,EACAK,EAAA00G,EAAA10G,EAEAxB,OAAAo4G,OAAAlC,GACAh3G,KAAAq2G,UAAAz0G,GAAAo1G,EACAT,EAAAv2G,KAAAk2G,OAAA5zG,GAAAL,GACAs0G,EAAAv2G,KAAAo2G,MAAAn0G,GAAAK,GACAtC,KAAAi2G,IAAA3zG,GAAAV,GAAAo1G,EACAh3G,KAAAm2G,KAAAl0G,GAAAL,GAAAo1G,EACAh3G,KAAAm3G,aACAn3G,MAGAi1G,EAAA1zG,UAAAooE,KAAA,SAAA1nE,EAAAK,EAAA3B,GACA,GAAAiB,GAAA,IAAA23B,UAAAp3B,OACA80G,EAAAj3G,KAAAo1G,YAAA77E,UAAA,IACAk9E,EAAAz2G,KAAAo1G,YAAAnzG,EAAAK,EAAA3B,EACA,OAAAX,MAAAs2G,YAAA10G,IAGAqzG,EAAA1zG,UAAA43G,QAAA,SAAAl3G,EAAAK,EAAA3B,GACA,GAAAiB,GAAA,IAAA23B,UAAAp3B,OACA80G,EAAAj3G,KAAAo1G,YAAA77E,UAAA,IACAk9E,EAAAz2G,KAAAo1G,YAAAnzG,EAAAK,EAAA3B,EACA,OAAAmB,GAAAuG,IAAArI,KAAAs2G,YAAA10G,IAGAqzG,EAAA1zG,UAAA02G,WAAA,SAAAh2G,EAAAK,EAAA3B,GACA,GAAAiB,GAAA,IAAA23B,UAAAp3B,OACA80G,EAAAj3G,KAAAo1G,YAAA77E,UAAA,IACAk9E,EAAAz2G,KAAAo1G,YAAAnzG,EAAAK,EAAA3B,GACAgpE,EAAA3pE,KAAAq2G,UAAAz0G,EAYA,OAXA+nE,KACA1nE,EAAA0nE,EAAA1nE,EACAK,EAAAqnE,EAAArnE,QACAtC,MAAAs2G,YAAA10G,SACA5B,MAAAq2G,UAAAz0G,GACA40G,EAAAx2G,KAAAk2G,OAAA5zG,GAAAL,GACAu0G,EAAAx2G,KAAAo2G,MAAAn0G,GAAAK,SACAtC,MAAAi2G,IAAA3zG,GAAAV,SACA5B,MAAAm2G,KAAAl0G,GAAAL,GACA5B,KAAAm3G,cAEAn3G,MAGAi1G,EAAA1zG,UAAA63G,QAAA,SAAAn3G,EAAAk0D,GACA,GAAAkjD,GAAAr5G,KAAAi2G,IAAAh0G,EACA,IAAAo3G,EAAA,CACA,GAAA9sC,GAAAzqE,EAAA+D,OAAAwzG,EACA,OAAAljD,GAGAr0D,EAAA0iC,OAAA+nC,EAAA,SAAA5C,GAA2C,MAAAA,GAAA1nE,IAAAk0D,IAF3CoW,IAMA0oC,EAAA1zG,UAAA+3G,SAAA,SAAAr3G,EAAAK,GACA,GAAAi3G,GAAAv5G,KAAAm2G,KAAAl0G,EACA,IAAAs3G,EAAA,CACA,GAAAhtC,GAAAzqE,EAAA+D,OAAA0zG,EACA,OAAAj3G,GAGAR,EAAA0iC,OAAA+nC,EAAA,SAAA5C,GAA2C,MAAAA,GAAArnE,QAF3CiqE,IAMA0oC,EAAA1zG,UAAAi4G,UAAA,SAAAv3G,EAAAK,GACA,GAAA82G,GAAAp5G,KAAAo5G,QAAAn3G,EAAAK,EACA,IAAA82G,EACA,MAAAA,GAAAp4E,OAAAhhC,KAAAs5G,SAAAr3G,EAAAK,MPsy0BM,SAAU1C,EAAQD,EAASO,GAEjC,YQjw1BA,SAASu5G,GAAkBz/D,EAAMq0B,EAAIC,EAAIxqB,GAGvC,GAAMwU,GAAKte,EAAKW,EACV4d,EAAKve,EAAK2K,EAEVqxB,EAAK1d,EAAKxU,EAAMnJ,EAChBs7B,EAAK1d,EAAKzU,EAAMa,EAEhB+0D,EAAMl8E,KAAKwqB,KAAKqmB,EAAKA,EAAK4H,EAAKA,EAAK3H,EAAKA,EAAK0H,EAAKA,GAErD7W,EAAK3hC,KAAKuuB,IAAIsiB,EAAKC,EAAK0H,EAAK0jC,EAC7B51D,GAAMnJ,EAAI2d,IACZ6G,GAAMA,EAER,IAAIC,GAAK5hC,KAAKuuB,IAAIsiB,EAAKC,EAAK2H,EAAKyjC,EAKjC,OAJI51D,GAAMa,EAAI4T,IACZ6G,GAAMA,IAGAzkB,EAAG2d,EAAK6G,EAAIxa,EAAG4T,EAAK6G,GRgv1B9Bt+D,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,IAyBT/D,EAAQ2D,QQvw1BOm2G,GR2w1BT,SAAU75G,EAAQD,EAASO,GAEjC,YAmBA,SAASy5G,GAAuB/1G,GAAO,MAAOA,IAAOA,EAAIxC,WAAawC,GAAQN,QAASM,GSnz1BvF,QAASg2G,GAAUn6G,EAAMu6C,EAAM2yC,GAC7B,GAAM4qB,GAAQv9D,EAAKu9D,MACbsC,EAAWp6G,EAAKykD,OAAO,IAIN,SAAnBlK,EAAK8/D,WACP,EAAAC,EAAAz2G,SAAYu2G,EAAU7/D,GACI,gBAAVu9D,IAAyC,SAAnBv9D,EAAK8/D,WAC3C,EAAAE,EAAA12G,SAAau2G,EAAU7/D,IAEvB,EAAAigE,EAAA32G,SAAau2G,EAAU7/D,EAGzB,IAAMkgE,GAAYL,EAAS7/D,OAAOmgE,UAC9Bx1D,QACJ,QAAQgoC,GACN,IAAK,MACHhoC,GAAM3K,EAAKogE,OAAS,CACpB,MACF,KAAK,SACHz1D,EAAK3K,EAAKogE,OAAS,EAAKF,EAAUE,MAClC,MACF,SACEz1D,GAAMu1D,EAAUE,OAAS,EAK7B,MAHAP,GAAS/2G,KAAK,YACA,cAAiBo3G,EAAUttD,MAAQ,EAAK,IAAMjI,EAAI,KAEzDk1D,ETsw1BT/4G,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,GSxy1BT,IAAA22G,GAAAn6G,EAAA,IT6y1BI+5G,EAAiBN,EAAuBU,GS5y1B5CC,EAAAp6G,EAAA,ITgz1BI85G,EAAiBL,EAAuBW,GS/y1B5CC,EAAAr6G,EAAA,ITmz1BI65G,EAAgBJ,EAAuBY,EAmC3C56G,GAAQ2D,QSpz1BOs2G,GTwz1BT,SAAUh6G,EAAQD,EAASO,GUr11BjC,QAAAs6G,GAAAx4G,EAAAuN,EAAAkrG,EAAAC,GACA,MAAAC,GAAA34G,EAAAQ,OAAA+M,GACAkrG,GAAAG,EACAF,GAAA,SAAAz4G,GAA4C,MAAAD,GAAAs3G,SAAAr3G,KAG5C,QAAA04G,GAAA34G,EAAAuN,EAAAkrG,EAAAC,GACA,GAEAz4G,GAAA44G,EAFAC,KACAC,EAAA,GAAAC,GAGAC,EAAA,SAAAtxC,GACA,GAAArnE,GAAAqnE,EAAA1nE,MAAA0nE,EAAA1nE,EAAA0nE,EAAArnE,EACA44G,EAAAJ,EAAAx4G,GACAilG,EAAAkT,EAAA9wC,GACArC,EAAAuzC,EAAAvzC,SAAAigC,CAEA,IAAAA,EAAA,EACA,SAAAl+D,OAAA,4DACAsgC,EAAA,YAAA49B,EAGAjgC,GAAA4zC,EAAA5zC,WACA4zC,EAAA5zC,WACA4zC,EAAAC,YAAAl5G,EACA84G,EAAAK,SAAA94G,EAAAglE,IAUA,KANAtlE,EAAAytE,QAAA5lE,QAAA,SAAA5H,GACA,GAAAqlE,GAAArlE,IAAAsN,EAAA,EAAAksE,OAAA4/B,iBACAP,GAAA74G,IAAkBqlE,YAClByzC,EAAA32G,IAAAnC,EAAAqlE,KAGAyzC,EAAAnxG,OAAA,IACA3H,EAAA84G,EAAAO,YACAT,EAAAC,EAAA74G,GACA44G,EAAAvzC,WAAAmU,OAAA4/B,oBAIAX,EAAAz4G,GAAA4H,QAAAoxG,EAGA,OAAAH,GApDA,GAAAh5G,GAAA5B,EAAA,GACA86G,EAAA96G,EAAA,EAEAN,GAAAD,QAAA66G,CAEA,IAAAI,GAAA94G,EAAAktC,SAAA,IVm51BM,SAAUpvC,EAAQD,EAASO,GW741BjC,QAAA86G,KACAh7G,KAAAu7G,QACAv7G,KAAAw7G,eAbA,GAAA15G,GAAA5B,EAAA,EAEAN,GAAAD,QAAAq7G,EAiBAA,EAAAz5G,UAAAqI,KAAA,WACA,MAAA5J,MAAAu7G,KAAAp5G,QAMA64G,EAAAz5G,UAAA6mB,KAAA,WACA,MAAApoB,MAAAu7G,KAAAv3G,IAAA,SAAA22C,GAAoC,MAAAA,GAAA/zC,OAMpCo0G,EAAAz5G,UAAA8G,IAAA,SAAAzB,GACA,MAAA9E,GAAAuG,IAAArI,KAAAw7G,YAAA50G,IASAo0G,EAAAz5G,UAAA0+C,SAAA,SAAAr5C,GACA,GAAA9B,GAAA9E,KAAAw7G,YAAA50G,EACA,QAAAW,KAAAzC,EACA,MAAA9E,MAAAu7G,KAAAz2G,GAAAm7C,UAQA+6D,EAAAz5G,UAAAmvC,IAAA,WACA,OAAA1wC,KAAA4J,OACA,SAAAy/B,OAAA,kBAEA,OAAArpC,MAAAu7G,KAAA,GAAA30G,KAWAo0G,EAAAz5G,UAAA6C,IAAA,SAAAwC,EAAAq5C,GACA,GAAAw7D,GAAAz7G,KAAAw7G,WAEA,IADA50G,EAAApE,OAAAoE,IACA9E,EAAAuG,IAAAozG,EAAA70G,GAAA,CACA,GAAA80G,GAAA17G,KAAAu7G,KACAz2G,EAAA42G,EAAAv5G,MAIA,OAHAs5G,GAAA70G,GAAA9B,EACA42G,EAAAhyG,MAAc9C,MAAAq5C,aACdjgD,KAAA27G,UAAA72G,IACA,EAEA,UAMAk2G,EAAAz5G,UAAA+5G,UAAA,WACAt7G,KAAA47G,MAAA,EAAA57G,KAAAu7G,KAAAp5G,OAAA,EACA,IAAAuuC,GAAA1wC,KAAAu7G,KAAAn2F,KAGA,cAFAplB,MAAAw7G,YAAA9qE,EAAA9pC,KACA5G,KAAA67G,SAAA,GACAnrE,EAAA9pC,KAUAo0G,EAAAz5G,UAAA65G,SAAA,SAAAx0G,EAAAq5C,GACA,GAAAn7C,GAAA9E,KAAAw7G,YAAA50G,EACA,IAAAq5C,EAAAjgD,KAAAu7G,KAAAz2G,GAAAm7C,SACA,SAAA5W,OAAA,uDACAziC,EAAA,SAAA5G,KAAAu7G,KAAAz2G,GAAAm7C,SAAA,SAAAA,EAEAjgD,MAAAu7G,KAAAz2G,GAAAm7C,WACAjgD,KAAA27G,UAAA72G,IAGAk2G,EAAAz5G,UAAAs6G,SAAA,SAAAx7G,GACA,GAAAq7G,GAAA17G,KAAAu7G,KACAj7G,EAAA,EAAAD,EACA+mD,EAAA9mD,EAAA,EACAw7G,EAAAz7G,CACAC,GAAAo7G,EAAAv5G,SACA25G,EAAAJ,EAAAp7G,GAAA2/C,SAAAy7D,EAAAI,GAAA77D,SAAA3/C,EAAAw7G,EACA10D,EAAAs0D,EAAAv5G,SACA25G,EAAAJ,EAAAt0D,GAAAnH,SAAAy7D,EAAAI,GAAA77D,SAAAmH,EAAA00D,GAEAA,IAAAz7G,IACAL,KAAA47G,MAAAv7G,EAAAy7G,GACA97G,KAAA67G,SAAAC,MAKAd,EAAAz5G,UAAAo6G,UAAA,SAAA72G,GAIA,IAHA,GAEA2oB,GAFAiuF,EAAA17G,KAAAu7G,KACAt7D,EAAAy7D,EAAA52G,GAAAm7C,SAEA,IAAAn7C,IACA2oB,EAAA3oB,GAAA,IACA42G,EAAAjuF,GAAAwyB,cAGAjgD,KAAA47G,MAAA92G,EAAA2oB,GACA3oB,EAAA2oB,GAIAutF,EAAAz5G,UAAAq6G,MAAA,SAAAv7G,EAAAshD,GACA,GAAA+5D,GAAA17G,KAAAu7G,KACAE,EAAAz7G,KAAAw7G,YACAO,EAAAL,EAAAr7G,GACA27G,EAAAN,EAAA/5D,EACA+5D,GAAAr7G,GAAA27G,EACAN,EAAA/5D,GAAAo6D,EACAN,EAAAO,EAAAp1G,KAAAvG,EACAo7G,EAAAM,EAAAn1G,KAAA+6C,IXg61BM,SAAU/hD,EAAQD,EAASO,GYlj2BjC,QAAA+7G,GAAAj6G,GAMA,QAAAk6G,GAAAj6G,GACA,GAAAuiB,GAAA23F,EAAAl6G,IACAm6G,SAAA,EACAC,QAAAv3G,EACAA,UAaA,IAXAmkB,EAAAvf,KAAAzH,GAEAD,EAAAs2G,WAAAr2G,GAAA4H,QAAA,SAAAvH,GACAR,EAAAuG,IAAA8zG,EAAA75G,GAGO65G,EAAA75G,GAAA85G,UACP53F,EAAA63F,QAAA7+E,KAAAkT,IAAAlsB,EAAA63F,QAAAF,EAAA75G,GAAAwC,SAHAo3G,EAAA55G,GACAkiB,EAAA63F,QAAA7+E,KAAAkT,IAAAlsB,EAAA63F,QAAAF,EAAA75G,GAAA+5G,YAMA73F,EAAA63F,UAAA73F,EAAA1f,MAAA,CACA,GACAxC,GADAg6G,IAEA,IACAh6G,EAAA2mB,EAAA7D,MACA+2F,EAAA75G,GAAA85G,SAAA,EACAE,EAAA5yG,KAAApH,SACOL,IAAAK,EACPw4G,GAAApxG,KAAA4yG,IA9BA,GAAAx3G,GAAA,EACAmkB,KACAkzF,KACArB,IAqCA,OANA94G,GAAAytE,QAAA5lE,QAAA,SAAA5H,GACAH,EAAAuG,IAAA8zG,EAAAl6G,IACAi6G,EAAAj6G,KAIA64G,EA7CA,GAAAh5G,GAAA5B,EAAA,EAEAN,GAAAD,QAAAs8G,GZym2BM,SAAUr8G,EAAQD,EAASO,Gatm2BjC,QAAAq8G,GAAAv6G,GAKA,QAAA6hG,GAAA7pD,GACA,GAAAl4C,EAAAuG,IAAA4gB,EAAA+wB,GACA,SAAAwiE,EAGA16G,GAAAuG,IAAA8zG,EAAAniE,KACA/wB,EAAA+wB,IAAA,EACAmiE,EAAAniE,IAAA,EACAl4C,EAAA62C,KAAA32C,EAAAo2G,aAAAp+D,GAAA6pD,SACA56E,GAAA+wB,GACA8gE,EAAApxG,KAAAswC,IAdA,GAAAmiE,MACAlzF,KACA6xF,IAkBA,IAFAh5G,EAAA62C,KAAA32C,EAAA21G,QAAA9T,GAEA/hG,EAAA8H,KAAAuyG,KAAAn6G,EAAA01G,YACA,SAAA8E,EAGA,OAAA1B,GAGA,QAAA0B,MAjCA,GAAA16G,GAAA5B,EAAA,EAEAN,GAAAD,QAAA48G,EACAA,EAAAC,kBbgp2BM,SAAU58G,EAAQD,EAASO,Gcvo2BjC,QAAAg8G,GAAAl6G,EAAA61G,EAAAlwB,GACA7lF,EAAAigB,QAAA81F,KACAA,MAGA,IAAA4E,IAAAz6G,EAAA00G,aAAA10G,EAAAs2G,WAAAt2G,EAAA2lG,WAAA1yD,KAAAjzC,GAEA06G,KACAP,IAQA,OAPAr6G,GAAA62C,KAAAk/D,EAAA,SAAA51G,GACA,IAAAD,EAAA+1G,QAAA91G,GACA,SAAAonC,OAAA,6BAAApnC,EAGA06G,GAAA36G,EAAAC,EAAA,SAAA0lF,EAAAw0B,EAAAM,EAAAC,KAEAA,EAGA,QAAAC,GAAA36G,EAAAC,EAAA26G,EAAAT,EAAAM,EAAAC,GACA56G,EAAAuG,IAAA8zG,EAAAl6G,KACAk6G,EAAAl6G,IAAA,EAEA26G,GAAqBF,EAAAhzG,KAAAzH,GACrBH,EAAA62C,KAAA8jE,EAAAx6G,GAAA,SAAAK,GACAq6G,EAAA36G,EAAAM,EAAAs6G,EAAAT,EAAAM,EAAAC,KAEAE,GAAoBF,EAAAhzG,KAAAzH,IAvCpB,GAAAH,GAAA5B,EAAA,EAEAN,GAAAD,QAAAu8G,Gdis2BM,SAAUt8G,EAAQD,EAASO,Iens2BjC,SAAAT,EAAAC,GAEAE,EAAAD,QAAAD,EAAAQ,EAAA,GAAAA,EAAA,KAOCF,EAAA,SAAA68G,EAAAC,GACD,gBAAA78G,GAKA,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAR,OAGA,IAAAC,GAAAQ,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAX,WAUA,OANAM,GAAAE,GAAAI,KAAAX,EAAAD,QAAAC,IAAAD,QAAAO,GAGAN,EAAAU,GAAA,EAGAV,EAAAD,QAvBA,GAAAS,KA4DA,OAhCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,SAAAf,EAAAgB,EAAAC,GACAV,EAAAW,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACA,GAAAgB,GAAAhB,KAAAwB,WACA,WAAmC,MAAAxB,GAAA,SACnC,WAAyC,MAAAA,GAEzC,OADAM,GAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAQ,EAAAC,GAA8D,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAG9DpB,EAAAuB,EAAA,GAGAvB,IAAAwB,EAAA,KAKA,SAAA9B,EAAAD,GAEAC,EAAAD,QAAAO,EAAA,IAIA,SAAAN,EAAAD,EAAAO,GAEA,YAgCA,SAAA68G,GAAA/6G,EAAAmiB,EAAA64F,EAAAr8G,GACA,GAAAsB,OAAA,EACA,IACAA,EAAAoB,EAAAC,QAAA4sC,SAAAvvC,SACGqB,EAAA+1G,QAAA91G,GAIH,OAFA+6G,GAAAC,MAAA94F,EACAniB,EAAA81G,QAAA71G,EAAA+6G,GACA/6G,EAOA,QAAAi7G,GAAAl7G,GACA,GAAAm7G,IAAA,GAAAC,GAAAnI,OAAAqC,SAAAt1G,EAAAoB,QAYA,OAXAC,GAAAC,QAAAq1C,KAAA32C,EAAAytE,QAAA,SAAAxtE,GACAk7G,EAAArF,QAAA71G,EAAAD,EAAAg4C,KAAA/3C,MAEAoB,EAAAC,QAAAq1C,KAAA32C,EAAAuqE,QAAA,SAAA3qE,GACA,GAAAy7G,GAAAF,EAAAxzC,KAAA/nE,EAAAK,EAAAL,EAAAU,KAAoDilG,OAAA,EAAA+V,OAAA,GACpD/F,EAAAv1G,EAAA2nE,KAAA/nE,EACAu7G,GAAAvE,QAAAh3G,EAAAK,EAAAL,EAAAU,GACAilG,OAAA8V,EAAA9V,OAAAgQ,EAAAhQ,OACA+V,OAAA9/E,KAAA8S,IAAA+sE,EAAAC,OAAA/F,EAAA+F,YAGAH,EAGA,QAAAI,GAAAv7G,GACA,GAAAm7G,GAAA,GAAAC,GAAAnI,OAAwCM,WAAAvzG,EAAAo1G,iBAA+BE,SAAAt1G,EAAAoB,QASvE,OARAC,GAAAC,QAAAq1C,KAAA32C,EAAAytE,QAAA,SAAAxtE,GACAD,EAAAE,SAAAD,GAAAE,QACAg7G,EAAArF,QAAA71G,EAAAD,EAAAg4C,KAAA/3C,MAGAoB,EAAAC,QAAAq1C,KAAA32C,EAAAuqE,QAAA,SAAA3qE,GACAu7G,EAAAvE,QAAAh3G,EAAAI,EAAA2nE,KAAA/nE,MAEAu7G,EAGA,QAAAK,GAAAx7G,GACA,GAAAy7G,GAAAp6G,EAAAC,QAAAU,IAAAhC,EAAAytE,QAAA,SAAAxtE,GACA,GAAAy7G,KAIA,OAHAr6G,GAAAC,QAAAq1C,KAAA32C,EAAAs3G,SAAAr3G,GAAA,SAAAL,GACA87G,EAAA97G,EAAAU,IAAAo7G,EAAA97G,EAAAU,IAAA,GAAAN,EAAA2nE,KAAA/nE,GAAA2lG,SAEAmW,GAEA,OAAAr6G,GAAAC,QAAAmgC,UAAAzhC,EAAAytE,QAAAguC,GAGA,QAAAE,GAAA37G,GACA,GAAAy7G,GAAAp6G,EAAAC,QAAAU,IAAAhC,EAAAytE,QAAA,SAAAxtE,GACA,GAAAu2G,KAIA,OAHAn1G,GAAAC,QAAAq1C,KAAA32C,EAAAo3G,QAAAn3G,GAAA,SAAAL,GACA42G,EAAA52G,EAAAK,IAAAu2G,EAAA52G,EAAAK,IAAA,GAAAD,EAAA2nE,KAAA/nE,GAAA2lG,SAEAiR,GAEA,OAAAn1G,GAAAC,QAAAmgC,UAAAzhC,EAAAytE,QAAAguC,GAOA,QAAAG,GAAA34D,EAAAnB,GACA,GAAAnJ,GAAAsK,EAAAtK,EACAgK,EAAAM,EAAAN,EAIAwa,EAAArb,EAAAnJ,IACAykB,EAAAtb,EAAAa,IACAriD,EAAA2iD,EAAA2H,MAAA,EACArG,EAAAtB,EAAAm1D,OAAA,CAEA,KAAAj7C,IAAAC,EACA,SAAA/1B,OAAA,4DAGA,IAAAsmC,OAAA,GACAC,MAAA,EAiBA,OAhBApyC,MAAAuuB,IAAAqT,GAAA98D,EAAAk7B,KAAAuuB,IAAAoT,GAAA5Y,GAEA6Y,EAAA,IACA7Y,MAEAopB,EAAAppB,EAAA4Y,EAAAC,EACAwQ,EAAArpB,IAGA4Y,EAAA,IACA78D,MAEAqtE,EAAArtE,EACAstE,EAAAttE,EAAA88D,EAAAD,IAGUxkB,IAAAg1B,EAAAhrB,IAAAirB,GAOV,QAAAiuC,GAAA77G,GACA,GAAA87G,GAAAz6G,EAAAC,QAAAU,IAAAX,EAAAC,QAAAo0C,MAAAqmE,EAAA/7G,GAAA,cACA,UASA,OAPAqB,GAAAC,QAAAq1C,KAAA32C,EAAAytE,QAAA,SAAAxtE,GACA,GAAA+3C,GAAAh4C,EAAAg4C,KAAA/3C,GACA+7G,EAAAhkE,EAAAgkE,IACA36G,GAAAC,QAAAqmC,YAAAq0E,KACAF,EAAAE,GAAAhkE,EAAA2tC,OAAA1lF,KAGA67G,EAOA,QAAAG,GAAAj8G,GACA,GAAA0uC,GAAArtC,EAAAC,QAAAotC,IAAArtC,EAAAC,QAAAU,IAAAhC,EAAAytE,QAAA,SAAAxtE,GACA,MAAAD,GAAAg4C,KAAA/3C,GAAA+7G,OAEA36G,GAAAC,QAAAq1C,KAAA32C,EAAAytE,QAAA,SAAAxtE,GACA,GAAA+3C,GAAAh4C,EAAAg4C,KAAA/3C,EACAoB,GAAAC,QAAA+E,IAAA2xC,EAAA,UACAA,EAAAgkE,MAAAttE,KAKA,QAAAwtE,GAAAl8G,GAEA,GAAA8D,GAAAzC,EAAAC,QAAAotC,IAAArtC,EAAAC,QAAAU,IAAAhC,EAAAytE,QAAA,SAAAxtE,GACA,MAAAD,GAAAg4C,KAAA/3C,GAAA+7G,QAGAG,IACA96G,GAAAC,QAAAq1C,KAAA32C,EAAAytE,QAAA,SAAAxtE,GACA,GAAA+7G,GAAAh8G,EAAAg4C,KAAA/3C,GAAA+7G,KAAAl4G,CACAq4G,GAAAH,KACAG,EAAAH,OAEAG,EAAAH,GAAAt0G,KAAAzH,IAGA,IAAAm8G,GAAA,EACAC,EAAAr8G,EAAAoB,QAAAi7G,cACAh7G,GAAAC,QAAAq1C,KAAAwlE,EAAA,SAAAtG,EAAAx3G,GACAgD,EAAAC,QAAAqmC,YAAAkuE,IAAAx3G,EAAAg+G,GAAA,IACAD,EACKA,GACL/6G,EAAAC,QAAAq1C,KAAAk/D,EAAA,SAAA51G,GACAD,EAAAg4C,KAAA/3C,GAAA+7G,MAAAI,MAMA,QAAAE,GAAAt8G,EAAAmuC,EAAA6tE,EAAAr2B,GACA,GAAA3tC,IACA4S,MAAA,EACAwtD,OAAA,EAMA,OAJA7gF,WAAAp3B,QAAA,IACA63C,EAAAgkE,OACAhkE,EAAA2tC,SAEAo1B,EAAA/6G,EAAA,SAAAg4C,EAAA7J,GAGA,QAAA4tE,GAAA/7G,GACA,MAAAqB,GAAAC,QAAAgtC,IAAAjtC,EAAAC,QAAAU,IAAAhC,EAAAytE,QAAA,SAAAxtE,GACA,GAAA+7G,GAAAh8G,EAAAg4C,KAAA/3C,GAAA+7G,IACA,KAAA36G,EAAAC,QAAAqmC,YAAAq0E,GACA,MAAAA,MAUA,QAAAjpE,GAAAruC,EAAAi1B,GACA,GAAAt2B,IAAgBk5G,OAAAC,OAQhB,OAPAn7G,GAAAC,QAAAq1C,KAAAjyC,EAAA,SAAAhD,GACAi4B,EAAAj4B,GACA2B,EAAAk5G,IAAA70G,KAAAhG,GAEA2B,EAAAm5G,IAAA90G,KAAAhG,KAGA2B,EAOA,QAAA0gC,GAAAplC,EAAAg7B,GACA,GAAAjY,GAAArgB,EAAAC,QAAAwjC,KACA,KACA,MAAAnL,KACG,QACH8iF,QAAA7yD,IAAAjrD,EAAA,WAAA0C,EAAAC,QAAAwjC,MAAApjB,GAAA,OAIA,QAAAg7F,GAAA/9G,EAAAg7B,GACA,MAAAA,KAzPA76B,OAAAC,eAAApB,EAAA,cACA+D,OAAA,IAEA/D,EAAAo9G,eACAp9G,EAAAu9G,WACAv9G,EAAA49G,qBACA59G,EAAA69G,mBACA79G,EAAAg+G,qBACAh+G,EAAAi+G,gBACAj+G,EAAAk+G,mBACAl+G,EAAAs+G,iBACAt+G,EAAAu+G,mBACAv+G,EAAA2+G,gBACA3+G,EAAAo+G,UACAp+G,EAAAo1C,YACAp1C,EAAAomC,OACApmC,EAAA++G,QAEA,IAAA/6G,GAAAzD,EAAA,GAEAmD,EAIA,SAAAO,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,IAJ7ED,GAEAy5G,EAAAl9G,EAAA,EAsOAP,GAAA2D,SACAy5G,eACAG,WACAK,qBACAC,mBACAG,qBACAC,gBACAC,mBACAI,iBACAC,mBACAI,gBACAP,UACAhpE,YACAhP,OACA24E,WAKA,SAAA9+G,EAAAD,GAEAC,EAAAD,QAAAO,EAAA,IAIA,SAAAN,EAAAD,EAAAO,GAEA,YAoCA,SAAAy+G,GAAA38G,GAGA,QAAAk6G,GAAAj6G,GACA,GAAAs1G,GAAAv1G,EAAAg4C,KAAA/3C,EACA,IAAAoB,EAAAC,QAAA+E,IAAA8zG,EAAAl6G,GACA,MAAAs1G,GAAAyG,IAEA7B,GAAAl6G,IAAA,CAEA,IAAA+7G,GAAA36G,EAAAC,QAAAotC,IAAArtC,EAAAC,QAAAU,IAAAhC,EAAAs3G,SAAAr3G,GAAA,SAAAL,GACA,MAAAs6G,GAAAt6G,EAAAU,GAAAN,EAAA2nE,KAAA/nE,GAAA07G,WACK,CAEL,OAAA/F,GAAAyG,OAbA,GAAA7B,KAgBA94G,GAAAC,QAAAq1C,KAAA32C,EAAA62B,UAAAqjF,GAOA,QAAA0C,GAAA58G,EAAAJ,GACA,MAAAI,GAAAg4C,KAAAp4C,EAAAU,GAAA07G,KAAAh8G,EAAAg4C,KAAAp4C,EAAAK,GAAA+7G,KAAAh8G,EAAA2nE,KAAA/nE,GAAA07G,OA1DAx8G,OAAAC,eAAApB,EAAA,cACA+D,OAAA,IAEA/D,EAAAg/G,cACAh/G,EAAAi/G,OAEA,IAAAj7G,GAAAzD,EAAA,GAEAmD,EAEA,SAAAO,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,IAF7ED,EAqDAhE,GAAA2D,SACAq7G,cACAC,UAKA,SAAAh/G,EAAAD,EAAAO,GAEA,YA0CA,SAAA2+G,GAAA78G,GACA,GAAAgpD,GAAA,GAAAoyD,GAAAnI,OAA+BI,UAAA,IAG/B3xF,EAAA1hB,EAAAytE,QAAA,GACA7lE,EAAA5H,EAAA01G,WACA1sD,GAAA8sD,QAAAp0F,KAIA,KAFA,GAAAimD,OAAA,GACAy0C,MAAA,GACAU,EAAA9zD,EAAAhpD,GAAA4H,GACA+/D,EAAAo1C,EAAA/zD,EAAAhpD,GACAo8G,EAAApzD,EAAA+sD,QAAApuC,EAAA1nE,IAAA,EAAA+8G,EAAAJ,OAAA58G,EAAA2nE,KAAA,EAAAq1C,EAAAJ,OAAA58G,EAAA2nE,GACAs1C,EAAAj0D,EAAAhpD,EAAAo8G,EAGA,OAAApzD,GAOA,QAAA8zD,GAAA9zD,EAAAhpD,GACA,QAAAk6G,GAAAj6G,GACAoB,EAAAC,QAAAq1C,KAAA32C,EAAAw3G,UAAAv3G,GAAA,SAAAL,GACA,GAAAs9G,GAAAt9G,EAAAK,EACAK,EAAAL,IAAAi9G,EAAAt9G,EAAAU,EAAA48G,CACAl0D,GAAA+sD,QAAAz1G,KAAA,EAAA08G,EAAAJ,OAAA58G,EAAAJ,KACAopD,EAAA8sD,QAAAx1G,MACA0oD,EAAA4tD,QAAA32G,EAAAK,MACA45G,EAAA55G,MAMA,MADAe,GAAAC,QAAAq1C,KAAAqS,EAAAykB,QAAAysC,GACAlxD,EAAA0sD,YAOA,QAAAqH,GAAA/zD,EAAAhpD,GACA,MAAAqB,GAAAC,QAAAqtC,MAAA3uC,EAAAuqE,QAAA,SAAA3qE,GACA,GAAAopD,EAAA+sD,QAAAn2G,EAAAK,KAAA+oD,EAAA+sD,QAAAn2G,EAAAU,GACA,SAAA08G,EAAAJ,OAAA58G,EAAAJ,KAKA,QAAAq9G,GAAAj0D,EAAAhpD,EAAAo8G,GACA/6G,EAAAC,QAAAq1C,KAAAqS,EAAAykB,QAAA,SAAAxtE,GACAD,EAAAg4C,KAAA/3C,GAAA+7G,MAAAI,IA7FAt9G,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAC,GAAAzD,EAAA,GAEAmD,EAMA,SAAAO,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,IAN7ED,GAEAy5G,EAAAl9G,EAAA,GAEA8+G,EAAA9+G,EAAA,EAuFAP,GAAA2D,QAAAu7G,GAIA,SAAAj/G,EAAAD,EAAAO,GAEA,YAyBA,SAAAy5G,GAAA/1G,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,GAtB7E9C,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAA05G,GAAAl9G,EAAA,GAEAi/G,EAAAxF,EAAAyD,GAEAgC,EAAAl/G,EAAA,GAEAm/G,EAAA1F,EAAAyF,GAEAE,EAAAp/G,EAAA,IAEAq/G,EAAA5F,EAAA2F,GAEAN,EAAA9+G,EAAA,GAEAs/G,EAAA7F,EAAAqF,GAEAS,EAAAv/G,EAAA,GAIAP,GAAA2D,SACAo8G,SAAAP,EAAA77G,QACAiiG,OAAA8Z,EAAA/7G,QACAq8G,MAAAJ,EAAAj8G,QACAs8G,MACA75E,KAAAy5E,EAAAl8G,QAAAyiC,KACA24E,OAAAc,EAAAl8G,QAAAo7G,QAEAp5B,QAAAm6B,EAAAn6B,UAKA,SAAA1lF,EAAAD,EAAAO,GAEA,YAqDA,SAAAy5G,GAAA/1G,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,GAE7E,QAAA2hG,GAAAvjG,EAAAmzG,GACA,GAAApvE,GAAAovE,KAAA0K,YAAAL,EAAAl8G,QAAAyiC,KAAAy5E,EAAAl8G,QAAAo7G,MACA34E,GAAA,oBACA,GAAA+5E,GAAA/5E,EAAA,gCACA,MAAAg6E,GAAA/9G,IAEA+jC,GAAA,yBACAi6E,EAAAF,EAAA/5E,KAEAA,EAAA,gCACAk6E,EAAAj+G,EAAA89G,OAKA,QAAAE,GAAAh+G,EAAA+jC,GACAA,EAAA,wCACAm6E,EAAAl+G,KAEA+jC,EAAA,iCACAo6E,EAAAn+G,KAEA+jC,EAAA,yBACAq6E,EAAA98G,QAAA+8G,IAAAr+G,KAEA+jC,EAAA,kCACAu6E,EAAAh9G,QAAA+8G,IAAAr+G,KAEA+jC,EAAA,uBACA,EAAAw6E,EAAAj9G,SAAAk8G,EAAAl8G,QAAAi6G,mBAAAv7G,MAEA+jC,EAAA,wCACAy6E,EAAAx+G,KAEA+jC,EAAA,mCACA,EAAAi5E,EAAAd,kBAAAl8G,KAEA+jC,EAAA,sCACAu6E,EAAAh9G,QAAAm9G,QAAAz+G,KAEA+jC,EAAA,iCACA,EAAAi5E,EAAAf,gBAAAj8G,KAEA+jC,EAAA,kCACA26E,EAAA1+G,KAEA+jC,EAAA,wCACA46E,EAAA3+G,KAEA+jC,EAAA,+BACA66E,EAAAt9G,QAAA+8G,IAAAr+G,KAEA+jC,EAAA,oCACA,EAAA86E,EAAAv9G,SAAAtB,KAEA+jC,EAAA,oCACA,EAAA+6E,EAAAx9G,SAAAtB,KAEA+jC,EAAA,wBACA,EAAAg7E,EAAAz9G,SAAAtB,KAEA+jC,EAAA,iCACAi7E,EAAAh/G,KAEA+jC,EAAA,wCACAk7E,EAAA39G,QAAA49G,OAAAl/G,KAEA+jC,EAAA,2BACA,EAAAo7E,EAAA79G,SAAAtB,KAEA+jC,EAAA,mCACAq7E,EAAAp/G,KAEA+jC,EAAA,mCACAs7E,EAAAr/G,KAEA+jC,EAAA,gCACA66E,EAAAt9G,QAAAg+G,KAAAt/G,KAEA+jC,EAAA,sCACAw7E,EAAAv/G,KAEA+jC,EAAA,sCACAk7E,EAAA39G,QAAAg+G,KAAAt/G,KAEA+jC,EAAA,gCACAy7E,EAAAx/G,KAEA+jC,EAAA,sCACA07E,EAAAz/G,KAEA+jC,EAAA,+BACA27E,EAAA1/G,KAEA+jC,EAAA,8BACAq6E,EAAA98G,QAAAg+G,KAAAt/G,KAUA,QAAAi+G,GAAA0B,EAAA7B,GACAz8G,EAAAC,QAAAq1C,KAAAgpE,EAAAlyC,QAAA,SAAAxtE,GACA,GAAA2/G,GAAAD,EAAA3nE,KAAA/3C,GACA4/G,EAAA/B,EAAA9lE,KAAA/3C,EAEA2/G,KACAA,EAAAjnE,EAAAknE,EAAAlnE,EACAinE,EAAAj9D,EAAAk9D,EAAAl9D,EAEAm7D,EAAA59G,SAAAD,GAAAE,SACAy/G,EAAAh1D,MAAAi1D,EAAAj1D,MACAg1D,EAAAxH,OAAAyH,EAAAzH,WAKA/2G,EAAAC,QAAAq1C,KAAAgpE,EAAAp1C,QAAA,SAAA3qE,GACA,GAAAggH,GAAAD,EAAAh4C,KAAA/nE,GACAigH,EAAA/B,EAAAn2C,KAAA/nE,EAEAggH,GAAAnoD,OAAAooD,EAAApoD,OACAp2D,EAAAC,QAAA+E,IAAAw5G,EAAA,OACAD,EAAAjnE,EAAAknE,EAAAlnE,EACAinE,EAAAj9D,EAAAk9D,EAAAl9D,KAIAg9D,EAAAv+G,QAAAwpD,MAAAkzD,EAAA18G,QAAAwpD,MACA+0D,EAAAv+G,QAAAg3G,OAAA0F,EAAA18G,QAAAg3G,OAyBA,QAAA2F,GAAA4B,GACA,GAAA3/G,GAAA,GAAAo7G,GAAAnI,OAA+BM,YAAA,EAAAE,UAAA,IAC/BryG,EAAA0+G,EAAAH,EAAAv+G,QAeA,OAbApB,GAAAs1G,SAAAj0G,EAAAC,QAAAgzC,SAAsCyrE,EAAAC,EAAA5+G,EAAA6+G,GAAA5+G,EAAAC,QAAAytC,KAAA3tC,EAAA8+G,KAEtC7+G,EAAAC,QAAAq1C,KAAAgpE,EAAAlyC,QAAA,SAAAxtE,GACA,GAAA+3C,GAAA8nE,EAAAH,EAAA3nE,KAAA/3C,GACAD,GAAA81G,QAAA71G,EAAAoB,EAAAC,QAAAwtC,SAAAkxE,EAAAhoE,EAAAmoE,GAAAC,IACApgH,EAAAm2G,UAAAl2G,EAAA0/G,EAAAl0F,OAAAxrB,MAGAoB,EAAAC,QAAAq1C,KAAAgpE,EAAAp1C,QAAA,SAAA3qE,GACA,GAAA+nE,GAAAm4C,EAAAH,EAAAh4C,KAAA/nE,GACAI,GAAA42G,QAAAh3G,EAAAyB,EAAAC,QAAAgzC,SAA0C+rE,EAAAL,EAAAr4C,EAAA24C,GAAAj/G,EAAAC,QAAAytC,KAAA44B,EAAA44C,OAG1CvgH,EAWA,QAAAk+G,GAAAl+G,GACA,GAAAoB,GAAApB,EAAAoB,OACAA,GAAAo/G,SAAA,EACAn/G,EAAAC,QAAAq1C,KAAA32C,EAAAuqE,QAAA,SAAA3qE,GACA,GAAA+nE,GAAA3nE,EAAA2nE,KAAA/nE,EACA+nE,GAAA2zC,QAAA,EACA,MAAA3zC,EAAA84C,SAAA12E,gBACA,OAAA3oC,EAAAs/G,SAAA,OAAAt/G,EAAAs/G,QACA/4C,EAAA/c,OAAA+c,EAAAg5C,YAEAh5C,EAAAywC,QAAAzwC,EAAAg5C,eAYA,QAAAnC,GAAAx+G,GACAqB,EAAAC,QAAAq1C,KAAA32C,EAAAuqE,QAAA,SAAA3qE,GACA,GAAA+nE,GAAA3nE,EAAA2nE,KAAA/nE,EACA,IAAA+nE,EAAA/c,OAAA+c,EAAAywC,OAAA,CACA,GAAAn4G,GAAAD,EAAAg4C,KAAAp4C,EAAAK,GACAK,EAAAN,EAAAg4C,KAAAp4C,EAAAU,GACAi1G,GAAmByG,MAAA17G,EAAA07G,KAAA/7G,EAAA+7G,MAAA,EAAA/7G,EAAA+7G,KAAAp8G,IACnB49G,GAAAl8G,QAAAy5G,aAAA/6G,EAAA,aAAAu1G,EAAA,UAKA,QAAAmJ,GAAA1+G,GACA,GAAA+7G,GAAA,CACA16G,GAAAC,QAAAq1C,KAAA32C,EAAAytE,QAAA,SAAAxtE,GACA,GAAA+3C,GAAAh4C,EAAAg4C,KAAA/3C,EACA+3C,GAAA4oE,YACA5oE,EAAA6oE,QAAA7gH,EAAAg4C,OAAA4oE,WAAA5E,KACAhkE,EAAA+jE,QAAA/7G,EAAAg4C,OAAA8oE,cAAA9E,KACAD,EAAAvgF,KAAA8S,IAAAytE,EAAA/jE,EAAA+jE,YAGA/7G,EAAAoB,QAAA26G,UAGA,QAAA4C,GAAA3+G,GACAqB,EAAAC,QAAAq1C,KAAA32C,EAAAytE,QAAA,SAAAxtE,GACA,GAAA+3C,GAAAh4C,EAAAg4C,KAAA/3C,EACA,gBAAA+3C,EAAAijE,QACAj7G,EAAA2nE,KAAA3vB,EAAAp4C,GAAAmhH,UAAA/oE,EAAAgkE,KACAh8G,EAAAg2G,WAAA/1G,MAKA,QAAAu/G,GAAAx/G,GASA,QAAAghH,GAAAhG,GACA,GAAAriE,GAAAqiE,EAAAriE,EACAgK,EAAAq4D,EAAAr4D,EACAriD,EAAA06G,EAAApwD,MACArG,EAAAy2D,EAAA5C,MACA6I,GAAAzlF,KAAAkT,IAAAuyE,EAAAtoE,EAAAr4C,EAAA,GACA4gH,EAAA1lF,KAAA8S,IAAA4yE,EAAAvoE,EAAAr4C,EAAA,GACA6gH,EAAA3lF,KAAAkT,IAAAyyE,EAAAx+D,EAAA4B,EAAA,GACA68D,EAAA5lF,KAAA8S,IAAA8yE,EAAAz+D,EAAA4B,EAAA,GAhBA,GAAA08D,GAAAxnC,OAAA4/B,kBACA6H,EAAA,EACAC,EAAA1nC,OAAA4/B,kBACA+H,EAAA,EACAC,EAAArhH,EAAAoB,QACAkgH,EAAAD,EAAAE,SAAA,EACAC,EAAAH,EAAAI,SAAA,CAaApgH,GAAAC,QAAAq1C,KAAA32C,EAAAytE,QAAA,SAAAxtE,GACA+gH,EAAAhhH,EAAAg4C,KAAA/3C,MAEAoB,EAAAC,QAAAq1C,KAAA32C,EAAAuqE,QAAA,SAAA3qE,GACA,GAAA+nE,GAAA3nE,EAAA2nE,KAAA/nE,EACAyB,GAAAC,QAAA+E,IAAAshE,EAAA,MACAq5C,EAAAr5C,KAIAs5C,GAAAK,EACAH,GAAAK,EAEAngH,EAAAC,QAAAq1C,KAAA32C,EAAAytE,QAAA,SAAAxtE,GACA,GAAA+3C,GAAAh4C,EAAAg4C,KAAA/3C,EACA+3C,GAAAW,GAAAsoE,EACAjpE,EAAA2K,GAAAw+D,IAGA9/G,EAAAC,QAAAq1C,KAAA32C,EAAAuqE,QAAA,SAAA3qE,GACA,GAAA+nE,GAAA3nE,EAAA2nE,KAAA/nE,EACAyB,GAAAC,QAAAq1C,KAAAgxB,EAAAlQ,OAAA,SAAAh4D,GACAA,EAAAk5C,GAAAsoE,EACAxhH,EAAAkjD,GAAAw+D,IAEA9/G,EAAAC,QAAA+E,IAAAshE,EAAA,OACAA,EAAAhvB,GAAAsoE,GAEA5/G,EAAAC,QAAA+E,IAAAshE,EAAA,OACAA,EAAAhlB,GAAAw+D,KAIAE,EAAAz2D,MAAAs2D,EAAAD,EAAAK,EACAD,EAAAjJ,OAAAgJ,EAAAD,EAAAK,EAGA,QAAA/B,GAAAz/G,GACAqB,EAAAC,QAAAq1C,KAAA32C,EAAAuqE,QAAA,SAAA3qE,GACA,GAAA+nE,GAAA3nE,EAAA2nE,KAAA/nE,GACA8hH,EAAA1hH,EAAAg4C,KAAAp4C,EAAAK,GACA0hH,EAAA3hH,EAAAg4C,KAAAp4C,EAAAU,GACAg3D,EAAA,KACAynB,EAAA,IACApX,GAAAlQ,QAKAH,EAAAqQ,EAAAlQ,OAAA,GACAsnB,EAAApX,EAAAlQ,OAAAkQ,EAAAlQ,OAAAt3D,OAAA,KALAwnE,EAAAlQ,UACAH,EAAAqqD,EACA5iC,EAAA2iC,GAKA/5C,EAAAlQ,OAAAiR,QAAA80C,EAAAl8G,QAAAs6G,cAAA8F,EAAApqD,IACAqQ,EAAAlQ,OAAA/vD,KAAA81G,EAAAl8G,QAAAs6G,cAAA+F,EAAA5iC,MAIA,QAAAwgC,GAAAv/G,GACAqB,EAAAC,QAAAq1C,KAAA32C,EAAAuqE,QAAA,SAAA3qE,GACA,GAAA+nE,GAAA3nE,EAAA2nE,KAAA/nE,EACA,IAAAyB,EAAAC,QAAA+E,IAAAshE,EAAA,KAIA,OAHA,MAAAA,EAAA84C,UAAA,MAAA94C,EAAA84C,WACA94C,EAAA/c,OAAA+c,EAAAg5C,aAEAh5C,EAAA84C,UACA,QACA94C,EAAAhvB,GAAAgvB,EAAA/c,MAAA,EAAA+c,EAAAg5C,WAAsD,MACtD,SACAh5C,EAAAhvB,GAAAgvB,EAAA/c,MAAA,EAAA+c,EAAAg5C,eAMA,QAAAjB,GAAA1/G,GACAqB,EAAAC,QAAAq1C,KAAA32C,EAAAuqE,QAAA,SAAA3qE,GACA,GAAA+nE,GAAA3nE,EAAA2nE,KAAA/nE,EACA+nE,GAAAi6C,UACAj6C,EAAAlQ,OAAA1+B,YAKA,QAAAsmF,GAAAr/G,GACAqB,EAAAC,QAAAq1C,KAAA32C,EAAAytE,QAAA,SAAAxtE,GACA,GAAAD,EAAAE,SAAAD,GAAAE,OAAA,CACA,GAAA63C,GAAAh4C,EAAAg4C,KAAA/3C,GACA+oD,EAAAhpD,EAAAg4C,OAAA4oE,WACApoE,EAAAx4C,EAAAg4C,OAAA8oE,cACAxiH,EAAA0B,EAAAg4C,KAAA32C,EAAAC,QAAAoqB,KAAAssB,EAAA6pE,aACAz8D,EAAAplD,EAAAg4C,KAAA32C,EAAAC,QAAAoqB,KAAAssB,EAAA8pE,aAEA9pE,GAAA4S,MAAApvB,KAAAuuB,IAAA3E,EAAAzM,EAAAr6C,EAAAq6C,GACAX,EAAAogE,OAAA58E,KAAAuuB,IAAAvR,EAAAmK,EAAAqG,EAAArG,GACA3K,EAAAW,EAAAr6C,EAAAq6C,EAAAX,EAAA4S,MAAA,EACA5S,EAAA2K,EAAAqG,EAAArG,EAAA3K,EAAAogE,OAAA,KAIA/2G,EAAAC,QAAAq1C,KAAA32C,EAAAytE,QAAA,SAAAxtE,GACA,WAAAD,EAAAg4C,KAAA/3C,GAAAg7G,OACAj7G,EAAAg2G,WAAA/1G,KAKA,QAAAk+G,GAAAn+G,GACAqB,EAAAC,QAAAq1C,KAAA32C,EAAAuqE,QAAA,SAAA3qE,GACA,GAAAA,EAAAK,IAAAL,EAAAU,EAAA,CACA,GAAA03C,GAAAh4C,EAAAg4C,KAAAp4C,EAAAK,EACA+3C,GAAA+pE,YACA/pE,EAAA+pE,cAEA/pE,EAAA+pE,UAAAr6G,MAA2B9H,IAAA21G,MAAAv1G,EAAA2nE,KAAA/nE,KAC3BI,EAAAi2G,WAAAr2G,MAKA,QAAAo/G,GAAAh/G,GACA,GAAAm8G,GAAAqB,EAAAl8G,QAAAu6G,iBAAA77G,EACAqB,GAAAC,QAAAq1C,KAAAwlE,EAAA,SAAA6F,GACA,GAAAC,GAAA,CACA5gH,GAAAC,QAAAq1C,KAAAqrE,EAAA,SAAA/hH,EAAA5B,GACA,GAAA25C,GAAAh4C,EAAAg4C,KAAA/3C,EACA+3C,GAAA2tC,MAAAtnF,EAAA4jH,EACA5gH,EAAAC,QAAAq1C,KAAAqB,EAAA+pE,UAAA,SAAAG,GACA1E,EAAAl8G,QAAAy5G,aAAA/6G,EAAA,YACA4qD,MAAAs3D,EAAA3M,MAAA3qD,MACAwtD,OAAA8J,EAAA3M,MAAA6C,OACA4D,KAAAhkE,EAAAgkE,KACAr2B,MAAAtnF,KAAA4jH,EACAriH,EAAAsiH,EAAAtiH,EACA21G,MAAA2M,EAAA3M,OACS,eAETv9D,GAAA+pE,cAKA,QAAA3C,GAAAp/G,GACAqB,EAAAC,QAAAq1C,KAAA32C,EAAAytE,QAAA,SAAAxtE,GACA,GAAA+3C,GAAAh4C,EAAAg4C,KAAA/3C,EACA,iBAAA+3C,EAAAijE,MAAA,CACA,GAAAkH,GAAAniH,EAAAg4C,OAAAp4C,EAAAK,GACA04C,EAAAwpE,EAAAxpE,EAAAwpE,EAAAv3D,MAAA,EACAjI,EAAAw/D,EAAAx/D,EACAwa,EAAAnlB,EAAAW,IACAykB,EAAA+kD,EAAA/J,OAAA,CACAp4G,GAAA42G,QAAA5+D,EAAAp4C,EAAAo4C,EAAAu9D,OACAv1G,EAAAg2G,WAAA/1G,GACA+3C,EAAAu9D,MAAA99C,SAA4B9e,IAAA,EAAAwkB,EAAA,EAAAxa,IAAAya,IAAkCzkB,IAAA,EAAAwkB,EAAA,EAAAxa,IAAAya,IAAkCzkB,IAAAwkB,EAAAxa,MAAqBhK,IAAA,EAAAwkB,EAAA,EAAAxa,IAAAya,IAAkCzkB,IAAA,EAAAwkB,EAAA,EAAAxa,IAAAya,IACvJplB,EAAAu9D,MAAA58D,EAAAX,EAAAW,EACAX,EAAAu9D,MAAA5yD,EAAA3K,EAAA2K,KAKA,QAAAq9D,GAAAp+G,EAAAo5G,GACA,MAAA35G,GAAAC,QAAAwnC,UAAAznC,EAAAC,QAAAytC,KAAAntC,EAAAo5G,GAAAvhC,QAGA,QAAAqmC,GAAA9E,GACA,GAAAoH,KAIA,OAHA/gH,GAAAC,QAAAq1C,KAAAqkE,EAAA,SAAA/6G,EAAAo5C,GACA+oE,EAAA/oE,EAAAtP,eAAA9pC,IAEAmiH,EAneAtjH,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAC,GAAAzD,EAAA,GAEAmD,EAAAs2G,EAAAh2G,GAEAy5G,EAAAl9G,EAAA,GAEAmkH,EAAAnkH,EAAA,GAEAkgH,EAAAzG,EAAA0K,GAEAC,EAAApkH,EAAA,IAEA0gH,EAAAjH,EAAA2K,GAEAC,EAAArkH,EAAA,IAEAqgH,EAAA5G,EAAA4K,GAEAvF,EAAA9+G,EAAA,GAEAs/G,EAAA7F,EAAAqF,GAEAwF,EAAAtkH,EAAA,IAEA2gH,EAAAlH,EAAA6K,GAEAC,EAAAvkH,EAAA,IAEAogH,EAAA3G,EAAA8K,GAEAC,EAAAxkH,EAAA,IAEA4gH,EAAAnH,EAAA+K,GAEAC,EAAAzkH,EAAA,IAEA+gH,EAAAtH,EAAAgL,GAEAC,EAAA1kH,EAAA,IAEA6gH,EAAApH,EAAAiL,GAEAC,EAAA3kH,EAAA,IAEAihH,EAAAxH,EAAAkL,GA4IA5C,GAAA,mDACAF,GAAqBS,QAAA,GAAAsC,QAAA,GAAAC,QAAA,GAAArC,QAAA,MACrBR,GAAA,wCACAC,GAAA,kBACAC,GAAoBx1D,MAAA,EAAAwtD,OAAA,GACpBkI,GAAA,kDACAD,GACA/E,OAAA,EACA/V,OAAA,EACA36C,MAAA,EACAwtD,OAAA,EACAuI,YAAA,GACAF,SAAA,KAEAF,GAAA,WA4RA5iH,GAAA2D,QAAAiiG,GAIA,SAAA3lG,EAAAD,EAAAO,GAEA,YAeA,SAAAy5G,GAAA/1G,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,GAE7E,QAAAy8G,GAAAr+G,GACA,GAAAgjH,GAAA,WAAAhjH,EAAAoB,QAAA6hH,WAAA,EAAAC,EAAA5hH,SAAAtB,EASA,SAAAA,GACA,gBAAAJ,GACA,MAAAI,GAAA2nE,KAAA/nE,GAAA2lG,SAXAvlG,IAAAmjH,EAAAnjH,EACAqB,GAAAC,QAAAq1C,KAAAqsE,EAAA,SAAApjH,GACA,GAAA21G,GAAAv1G,EAAA2nE,KAAA/nE,EACAI,GAAAi2G,WAAAr2G,GACA21G,EAAA6N,YAAAxjH,EAAAjB,KACA42G,EAAAqM,UAAA,EACA5hH,EAAA42G,QAAAh3G,EAAAU,EAAAV,EAAAK,EAAAs1G,EAAAl0G,EAAAC,QAAA4sC,SAAA,UAUA,QAAAi1E,GAAAnjH,GAKA,QAAAk6G,GAAAj6G,GACAoB,EAAAC,QAAA+E,IAAA8zG,EAAAl6G,KAGAk6G,EAAAl6G,IAAA,EACAgnB,EAAAhnB,IAAA,EACAoB,EAAAC,QAAAq1C,KAAA32C,EAAAs3G,SAAAr3G,GAAA,SAAAL,GACAyB,EAAAC,QAAA+E,IAAA4gB,EAAArnB,EAAAU,GACA0iH,EAAAt7G,KAAA9H,GAEAs6G,EAAAt6G,EAAAU,WAGA2mB,GAAAhnB,IAjBA,GAAA+iH,MACA/7F,KACAkzF,IAmBA,OADA94G,GAAAC,QAAAq1C,KAAA32C,EAAAytE,QAAAysC,GACA8I,EAGA,QAAA1D,GAAAt/G,GACAqB,EAAAC,QAAAq1C,KAAA32C,EAAAuqE,QAAA,SAAA3qE,GACA,GAAA21G,GAAAv1G,EAAA2nE,KAAA/nE,EACA,IAAA21G,EAAAqM,SAAA,CACA5hH,EAAAi2G,WAAAr2G,EAEA,IAAAwjH,GAAA7N,EAAA6N,kBACA7N,GAAAqM,eACArM,GAAA6N,YACApjH,EAAA42G,QAAAh3G,EAAAU,EAAAV,EAAAK,EAAAs1G,EAAA6N,MAjEAtkH,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAC,GAAAzD,EAAA,GAEAmD,EAAAs2G,EAAAh2G,GAEA0hH,EAAAnlH,EAAA,GAEAglH,EAAAvL,EAAA0L,EA4DA1lH,GAAA2D,SACA+8G,MACAiB,SAKA,SAAA1hH,EAAAD,EAAAO,GAEA,YAiBA,SAAAy5G,GAAA/1G,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,GAY7E,QAAA0hH,GAAAtjH,EAAAy4G,GACA,GAAAz4G,EAAA01G,aAAA,EACA,QAEA,IAAA6N,GAAAC,EAAAxjH,EAAAy4G,GAAAgL,GACA3K,EAAA4K,EAAAH,EAAAniH,MAAAmiH,EAAAI,QAAAJ,EAAAK,QAGA,OAAAviH,GAAAC,QAAAu7B,QAAAx7B,EAAAC,QAAAU,IAAA82G,EAAA,SAAAl5G,GACA,MAAAI,GAAAs3G,SAAA13G,EAAAK,EAAAL,EAAAU,MACG,GAGH,QAAAojH,GAAA1jH,EAAA2jH,EAAAC,GAMA,IALA,GAAA9K,MACAjiF,EAAA8sF,IAAAxjH,OAAA,GACAw1G,EAAAgO,EAAA,GAEAnhG,MAAA,GACAxiB,EAAA01G,aAAA,CACA,KAAAlzF,EAAAmzF,EAAAkO,WACA7N,EAAAh2G,EAAA2jH,EAAAC,EAAAphG,EAEA,MAAAA,EAAAqU,EAAAgtF,WACA7N,EAAAh2G,EAAA2jH,EAAAC,EAAAphG,EAEA,IAAAxiB,EAAA01G,YACA,OAAAr3G,GAAAslH,EAAAxjH,OAAA,EAAsC9B,EAAA,IAAOA,EAE7C,GADAmkB,EAAAmhG,EAAAtlH,GAAAwlH,UACA,CACA/K,IAAA95E,OAAAg3E,EAAAh2G,EAAA2jH,EAAAC,EAAAphG,GAAA,GACA,QAMA,MAAAs2F,GAGA,QAAA9C,GAAAh2G,EAAA2jH,EAAAC,EAAAphG,EAAAshG,GACA,GAAAhL,GAAAgL,SAAAv+G,EAwBA,OAtBAlE,GAAAC,QAAAq1C,KAAA32C,EAAAo3G,QAAA50F,EAAAviB,GAAA,SAAA0nE,GACA,GAAA49B,GAAAvlG,EAAA2nE,QACAo8C,EAAA/jH,EAAAg4C,KAAA2vB,EAAA1nE,EAEA6jH,IACAhL,EAAApxG,MAAoBzH,EAAA0nE,EAAA1nE,EAAAK,EAAAqnE,EAAArnE,IAGpByjH,EAAAnhB,KAAA2C,EACAye,EAAAL,EAAAC,EAAAG,KAGA1iH,EAAAC,QAAAq1C,KAAA32C,EAAAs3G,SAAA90F,EAAAviB,GAAA,SAAA0nE,GACA,GAAA49B,GAAAvlG,EAAA2nE,QACArnE,EAAAqnE,EAAArnE,EACA44G,EAAAl5G,EAAAg4C,KAAA13C,EACA44G,GAAA,IAAA3T,EACAye,EAAAL,EAAAC,EAAA1K,KAGAl5G,EAAAg2G,WAAAxzF,EAAAviB,GAEA64G,EAGA,QAAA0K,GAAAxjH,EAAAy4G,GACA,GAAAwL,GAAA,GAAA7I,GAAAnI,MACAiR,EAAA,EACAC,EAAA,CAEA9iH,GAAAC,QAAAq1C,KAAA32C,EAAAytE,QAAA,SAAAxtE,GACAgkH,EAAAnO,QAAA71G,GAAyBA,IAAA0iG,GAAA,EAAAC,IAAA,MAKzBvhG,EAAAC,QAAAq1C,KAAA32C,EAAAuqE,QAAA,SAAA3qE,GACA,GAAAwkH,GAAAH,EAAAt8C,KAAA/nE,EAAAK,EAAAL,EAAAU,IAAA,EACAilG,EAAAkT,EAAA74G,GACAykH,EAAAD,EAAA7e,CACA0e,GAAArN,QAAAh3G,EAAAK,EAAAL,EAAAU,EAAA+jH,GACAF,EAAA3oF,KAAA8S,IAAA61E,EAAAF,EAAAjsE,KAAAp4C,EAAAK,GAAA2iG,KAAA2C,GACA2e,EAAA1oF,KAAA8S,IAAA41E,EAAAD,EAAAjsE,KAAAp4C,EAAAU,GAAA,IAAAilG,IAGA,IAAAoe,GAAAtiH,EAAAC,QAAAo0C,MAAAyuE,EAAAD,EAAA,GAAAliH,IAAA,WACA,UAAAsiH,GAAAhjH,UAEAsiH,EAAAM,EAAA,CAMA,OAJA7iH,GAAAC,QAAAq1C,KAAAstE,EAAAx2C,QAAA,SAAAxtE,GACA+jH,EAAAL,EAAAC,EAAAK,EAAAjsE,KAAA/3C,OAGUmB,MAAA6iH,EAAAN,UAAAC,WAGV,QAAAI,GAAAL,EAAAC,EAAAphG,GACAA,EAAAogF,IAEGpgF,EAAA,GAGHmhG,EAAAnhG,EAAAogF,IAAApgF,EAAA,GAAAohG,GAAAW,QAAA/hG,GAFAmhG,IAAAxjH,OAAA,GAAAokH,QAAA/hG,GAFAmhG,EAAA,GAAAY,QAAA/hG,GAhIA1jB,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAC,GAAAzD,EAAA,GAEAmD,EAAAs2G,EAAAh2G,GAEAy5G,EAAAl9G,EAAA,GAEAsmH,EAAAtmH,EAAA,GAEAomH,EAAA3M,EAAA6M,GAYAf,EAAApiH,EAAAC,QAAA0rC,SAAA,EAgHArvC,GAAA2D,QAAAgiH,GAIA,SAAA1lH,EAAAD,EAAAO,GAEA,YAWA,SAAAumH,KACA,GAAAC,KACAA,GAAAC,MAAAD,EAAAE,MAAAF,EACA1mH,KAAA6mH,UAAAH,EAkCA,QAAAI,GAAAtiG,GACAA,EAAAoiG,MAAAD,MAAAniG,EAAAmiG,MACAniG,EAAAmiG,MAAAC,MAAApiG,EAAAoiG,YACApiG,GAAAmiG,YACAniG,GAAAoiG,MAGA,QAAAG,GAAA1rE,EAAAp5C,GACA,aAAAo5C,GAAA,UAAAA,EACA,MAAAp5C,GAtDAnB,OAAAC,eAAApB,EAAA,cACA+D,OAAA,IAaA+iH,EAAAllH,UAAAskH,QAAA,WACA,GAAAa,GAAA1mH,KAAA6mH,UACAriG,EAAAkiG,EAAAE,KACA,IAAApiG,IAAAkiG,EAEA,MADAI,GAAAtiG,GACAA,GAIAiiG,EAAAllH,UAAAglH,QAAA,SAAA/hG,GACA,GAAAkiG,GAAA1mH,KAAA6mH,SACAriG,GAAAoiG,OAAApiG,EAAAmiG,OACAG,EAAAtiG,GAEAA,EAAAmiG,MAAAD,EAAAC,MACAD,EAAAC,MAAAC,MAAApiG,EACAkiG,EAAAC,MAAAniG,EACAA,EAAAoiG,MAAAF,GAGAD,EAAAllH,UAAAk0B,SAAA,WAIA,IAHA,GAAAuxF,MACAN,EAAA1mH,KAAA6mH,UACAI,EAAAP,EAAAE,MACAK,IAAAP,GACAM,EAAAt9G,KAAAs7E,KAAAuU,UAAA0tB,EAAAF,IACAE,IAAAL,KAEA,WAAAI,EAAA70G,KAAA,WAgBAxS,EAAA2D,QAAAmjH,GAIA,SAAA7mH,EAAAD,EAAAO,GAEA,YAeA,SAAAy5G,GAAA/1G,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,GAkB7E,QAAAy8G,GAAAr+G,GACAA,EAAAoB,QAAA8jH,eACA7jH,EAAAC,QAAAq1C,KAAA32C,EAAAuqE,QAAA,SAAA5C,GACAw9C,EAAAnlH,EAAA2nE,KAIA,QAAAw9C,GAAAnlH,EAAAJ,GACA,GAAAK,GAAAL,EAAAK,EACAmlH,EAAAplH,EAAAg4C,KAAA/3C,GAAA+7G,KACA17G,EAAAV,EAAAU,EACA+kH,EAAArlH,EAAAg4C,KAAA13C,GAAA07G,KACAr9G,EAAAiB,EAAAjB,KACA2mH,EAAAtlH,EAAA2nE,KAAA/nE,GACAmhH,EAAAuE,EAAAvE,SAEA,IAAAsE,IAAAD,EAAA,GAEAplH,EAAAi2G,WAAAr2G,EAEA,IAAAq7G,OAAA,GACAD,MAAA,GACA38G,MAAA,EACA,KAAAA,EAAA,IAAA+mH,EAAsBA,EAAAC,IAAehnH,IAAA+mH,EACrCE,EAAA7tD,UACAujD,GACApwD,MAAA,EACAwtD,OAAA,EACAkN,YACAtQ,QAAAp1G,EACAo8G,KAAAoJ,GAEAnK,EAAAuC,EAAAl8G,QAAAy5G,aAAA/6G,EAAA,OAAAg7G,EAAA,MACAoK,IAAArE,IACA/F,EAAApwD,MAAA06D,EAAA16D,MACAowD,EAAA5C,OAAAkN,EAAAlN,OACA4C,EAAAC,MAAA,aACAD,EAAAyF,SAAA6E,EAAA7E,UAEAzgH,EAAA42G,QAAA32G,EAAAg7G,GAAyB1V,OAAA+f,EAAA/f,QAA2B5mG,GACpD,IAAAN,GACA2B,EAAAoB,QAAA8jH,YAAAx9G,KAAAuzG,GAEAh7G,EAAAg7G,CAGAj7G,GAAA42G,QAAA32G,EAAAK,GAAmBilG,OAAA+f,EAAA/f,QAA2B5mG,IAG9C,QAAA2gH,GAAAt/G,GACAqB,EAAAC,QAAAq1C,KAAA32C,EAAAoB,QAAA8jH,YAAA,SAAAjlH,GACA,GAAA+3C,GAAAh4C,EAAAg4C,KAAA/3C,GACAslH,EAAAvtE,EAAAstE,UACAhlH,EAAA,IAEA,KADAN,EAAA42G,QAAA5+D,EAAAg9D,QAAAuQ,GACAvtE,EAAAijE,OACA36G,EAAAN,EAAAs2G,WAAAr2G,GAAA,GACAD,EAAAg2G,WAAA/1G,GACAslH,EAAA9tD,OAAA/vD,MAA6BixC,EAAAX,EAAAW,EAAAgK,EAAA3K,EAAA2K,IAC7B,eAAA3K,EAAAijE,QACAsK,EAAA5sE,EAAAX,EAAAW,EACA4sE,EAAA5iE,EAAA3K,EAAA2K,EACA4iE,EAAA36D,MAAA5S,EAAA4S,MACA26D,EAAAnN,OAAApgE,EAAAogE,QAEAn4G,EAAAK,EACA03C,EAAAh4C,EAAAg4C,KAAA/3C,KAhGAnB,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAC,GAAAzD,EAAA,GAEAmD,EAAAs2G,EAAAh2G,GAEAq7G,EAAA9+G,EAAA,GAEAs/G,EAAA7F,EAAAqF,EA2FAr/G,GAAA2D,SACA+8G,MACAiB,SAKA,SAAA1hH,EAAAD,EAAAO,GAEA,YAiBA,SAAAy5G,GAAA/1G,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,GAqB7E,QAAAo6G,GAAAh8G,GACA,OAAAA,EAAAoB,QAAAokH,QACA,sBACAC,EAAAzlH,EAA8B,MAC9B,kBACA0lH,EAAA1lH,EAAyB,MACzB,oBACA2lH,EAAA3lH,EAA2B,MAC3B,SACAylH,EAAAzlH,IAOA,QAAA0lH,GAAA1lH,IACA,EAAAg9G,EAAAL,aAAA38G,IACA,EAAA4lH,EAAAtkH,SAAAtB,GAGA,QAAAylH,GAAAzlH,IACA,EAAA6lH,EAAAvkH,SAAAtB,GAzDAlB,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAs7G,GAAA9+G,EAAA,GAEA4nH,EAAA5nH,EAAA,GAEA0nH,EAAAjO,EAAAmO,GAEAC,EAAA7nH,EAAA,IAEA2nH,EAAAlO,EAAAoO,GAqCAJ,EAAA3I,EAAAL,WAWAh/G,GAAA2D,QAAA06G,GAIA,SAAAp+G,EAAAD,EAAAO,GAEA,YAqBA,SAAAy5G,GAAA/1G,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,GA+C7E,QAAAokH,GAAAhmH,GACAA,GAAA,EAAAw9G,EAAAtC,UAAAl7G,IACA,EAAAg9G,EAAAL,aAAA38G,EACA,IAAAgpD,IAAA,EAAA48D,EAAAtkH,SAAAtB,EACAimH,GAAAj9D,GACAk9D,EAAAl9D,EAAAhpD,EAIA,KAFA,GAAAJ,OAAA,GACA6iD,MAAA,GACA7iD,EAAAumH,EAAAn9D,IACAvG,EAAA2jE,EAAAp9D,EAAAhpD,EAAAJ,GACAymH,EAAAr9D,EAAAhpD,EAAAJ,EAAA6iD,GAOA,QAAAyjE,GAAAl9D,EAAAhpD,GACA,GAAA61G,GAAA+E,EAAA5xD,IAAAykB,QACAooC,KAAAjiF,MAAA,EAAAiiF,EAAA11G,OAAA,GACAkB,EAAAC,QAAAq1C,KAAAk/D,EAAA,SAAA51G,GACAqmH,EAAAt9D,EAAAhpD,EAAAC,KAIA,QAAAqmH,GAAAt9D,EAAAhpD,EAAAm1E,GACA,GAAAoxC,GAAAv9D,EAAAhR,KAAAm9B,GACA1pD,EAAA86F,EAAA96F,MACAu9B,GAAA2e,KAAAwN,EAAA1pD,GAAA+6F,SAAAC,EAAAz9D,EAAAhpD,EAAAm1E,GAOA,QAAAsxC,GAAAz9D,EAAAhpD,EAAAm1E,GACA,GAAAoxC,GAAAv9D,EAAAhR,KAAAm9B,GACA1pD,EAAA86F,EAAA96F,OAEAi7F,GAAA,EAEAC,EAAA3mH,EAAA2nE,KAAAwN,EAAA1pD,GAEAm7F,EAAA,CAyBA,OAvBAD,KACAD,GAAA,EACAC,EAAA3mH,EAAA2nE,KAAAl8C,EAAA0pD,IAGAyxC,EAAAD,EAAAphB,OAEAlkG,EAAAC,QAAAq1C,KAAA32C,EAAAw3G,UAAAriC,GAAA,SAAAv1E,GACA,GAAAinH,GAAAjnH,EAAAK,IAAAk1E,EACAzqD,EAAAm8F,EAAAjnH,EAAAU,EAAAV,EAAAK,CAEA,IAAAyqB,IAAAe,EAAA,CACA,GAAAq7F,GAAAD,IAAAH,EACAK,EAAA/mH,EAAA2nE,KAAA/nE,GAAA2lG,MAGA,IADAqhB,GAAAE,EAAAC,KACAC,EAAAh+D,EAAAmsB,EAAAzqD,GAAA,CACA,GAAAu8F,GAAAj+D,EAAA2e,KAAAwN,EAAAzqD,GAAA87F,QACAI,IAAAE,GAAAG,QAKAL,EAGA,QAAAX,GAAAr5C,EAAAnvE,GACA85B,UAAAp3B,OAAA,IACA1C,EAAAmvE,EAAAa,QAAA,IAEAy5C,EAAAt6C,KAA0B,EAAAnvE,GAG1B,QAAAypH,GAAAt6C,EAAAutC,EAAAgN,EAAAlnH,EAAAwrB,GACA,GAAA+F,GAAA21F,EACA5R,EAAA3oC,EAAA50B,KAAA/3C,EAkBA,OAhBAk6G,GAAAl6G,IAAA,EACAoB,EAAAC,QAAAq1C,KAAAi2B,EAAA+4B,UAAA1lG,GAAA,SAAAK,GACAe,EAAAC,QAAA+E,IAAA8zG,EAAA75G,KACA6mH,EAAAD,EAAAt6C,EAAAutC,EAAAgN,EAAA7mH,EAAAL,MAIAs1G,EAAA/jF,MACA+jF,EAAA6R,IAAAD,IACA17F,EACA8pF,EAAA9pF,eAGA8pF,GAAA9pF,OAGA07F,EAGA,QAAAhB,GAAAv5C,GACA,MAAAvrE,GAAAC,QAAAoxC,KAAAk6B,EAAArC,QAAA,SAAA3qE,GACA,MAAAgtE,GAAAjF,KAAA/nE,GAAA4mH,SAAA,IAIA,QAAAJ,GAAAp9D,EAAAhpD,EAAA2nE,GACA,GAAA1nE,GAAA0nE,EAAA1nE,EACAK,EAAAqnE,EAAArnE,CAKAN,GAAAm3G,QAAAl3G,EAAAK,KACAL,EAAA0nE,EAAArnE,EACAA,EAAAqnE,EAAA1nE,EAGA,IAAAonH,GAAAr+D,EAAAhR,KAAA/3C,GACAqnH,EAAAt+D,EAAAhR,KAAA13C,GACAinH,EAAAF,EACAhiF,GAAA,CAIAgiF,GAAAD,IAAAE,EAAAF,MACAG,EAAAD,EACAjiF,GAAA,EAGA,IAAAugE,GAAAvkG,EAAAC,QAAAkhC,OAAAxiC,EAAAuqE,QAAA,SAAA5C,GACA,MAAAtiC,KAAAmiF,EAAAx+D,IAAAhR,KAAA2vB,EAAA1nE,GAAAsnH,IAAAliF,IAAAmiF,EAAAx+D,IAAAhR,KAAA2vB,EAAArnE,GAAAinH,IAGA,OAAAlmH,GAAAC,QAAAqtC,MAAAi3D,EAAA,SAAAj+B,GACA,SAAAq1C,EAAAJ,OAAA58G,EAAA2nE,KAIA,QAAA0+C,GAAAr9D,EAAAhpD,EAAAJ,EAAA6iD,GACA,GAAAxiD,GAAAL,EAAAK,EACAK,EAAAV,EAAAU,CACA0oD,GAAAitD,WAAAh2G,EAAAK,GACA0oD,EAAA4tD,QAAAn0D,EAAAxiD,EAAAwiD,EAAAniD,MACA2lH,EAAAj9D,GACAk9D,EAAAl9D,EAAAhpD,GACAynH,EAAAz+D,EAAAhpD,GAGA,QAAAynH,GAAAz+D,EAAAhpD,GACA,GAAAvC,GAAA4D,EAAAC,QAAAoxC,KAAAsW,EAAAykB,QAAA,SAAAxtE,GACA,OAAAD,EAAAg4C,KAAA/3C,GAAAwrB,SAEAoqF,EAAA6R,EAAA1+D,EAAAvrD,EACAo4G,KAAAjiF,MAAA,GACAvyB,EAAAC,QAAAq1C,KAAAk/D,EAAA,SAAA51G,GACA,GAAAwrB,GAAAu9B,EAAAhR,KAAA/3C,GAAAwrB,OACAk8C,EAAA3nE,EAAA2nE,KAAA1nE,EAAAwrB,GACAk8F,GAAA,CAEAhgD,KACAA,EAAA3nE,EAAA2nE,KAAAl8C,EAAAxrB,GACA0nH,GAAA,GAGA3nH,EAAAg4C,KAAA/3C,GAAA+7G,KAAAh8G,EAAAg4C,KAAAvsB,GAAAuwF,MAAA2L,EAAAhgD,EAAA2zC,QAAA3zC,EAAA2zC,UAOA,QAAA0L,GAAAp6C,EAAAzY,EAAAl0D,GACA,MAAA2sE,GAAAuqC,QAAAhjD,EAAAl0D,GAOA,QAAAunH,GAAA56C,EAAAy6C,EAAAO,GACA,MAAAA,GAAAp2F,KAAA61F,EAAAD,KAAAC,EAAAD,KAAAQ,EAAAR,IAxPAtoH,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAC,GAAAzD,EAAA,GAEAmD,EAAAs2G,EAAAh2G,GAEAy5G,EAAAl9G,EAAA,GAEA4nH,EAAA5nH,EAAA,GAEA0nH,EAAAjO,EAAAmO,GAEA9I,EAAA9+G,EAAA,GAEAs/G,EAAAt/G,EAAA,GAIAwpH,EAAAtM,EAAAlI,IAAAwU,SACA9M,EAAAQ,EAAAlI,IAAA0H,SAIAoL,GAAAC,mBACAD,EAAAE,gBACAF,EAAAS,eACAT,EAAAG,YACAH,EAAAI,YACAJ,EAAAK,gBA6NA1oH,EAAA2D,QAAA0kH,GAIA,SAAApoH,EAAAD,EAAAO,GAEA,YAaA,SAAA2pH,GAAA7nH,GACA,GAAA8nH,GAAAlN,EAAA56G,EAEAqB,GAAAC,QAAAq1C,KAAA32C,EAAAoB,QAAA8jH,YAAA,SAAAjlH,GAUA,IATA,GAAA+3C,GAAAh4C,EAAAg4C,KAAA/3C,GACA+0G,EAAAh9D,EAAAg9D,QACA+S,EAAAC,EAAAhoH,EAAA8nH,EAAA9S,EAAA/0G,EAAA+0G,EAAA10G,GACA0pB,EAAA+9F,EAAA/9F,KACAmpD,EAAA40C,EAAA50C,IACA80C,EAAA,EACAC,EAAAl+F,EAAAi+F,GACAhkC,GAAA,EAEAhkF,IAAA+0G,EAAA10G,GAAA,CAGA,GAFA03C,EAAAh4C,EAAAg4C,KAAA/3C,GAEAgkF,EAAA,CACA,MAAAikC,EAAAl+F,EAAAi+F,MAAA90C,GAAAnzE,EAAAg4C,KAAAkwE,GAAAnM,QAAA/jE,EAAAgkE,MACAiM,GAGAC,KAAA/0C,IACA8Q,GAAA,GAIA,IAAAA,EAAA,CACA,KAAAgkC,EAAAj+F,EAAA7pB,OAAA,GAAAH,EAAAg4C,KAAAkwE,EAAAl+F,EAAAi+F,EAAA,IAAApH,SAAA7oE,EAAAgkE,MACAiM,GAEAC,GAAAl+F,EAAAi+F,GAGAjoH,EAAAm2G,UAAAl2G,EAAAioH,GACAjoH,EAAAD,EAAAs2G,WAAAr2G,GAAA,MAOA,QAAA+nH,GAAAhoH,EAAA8nH,EAAA7nH,EAAAK,GACA,GAAA6nH,MACAC,KACA52F,EAAAgK,KAAAkT,IAAAo5E,EAAA7nH,GAAAuxB,IAAAs2F,EAAAxnH,GAAAkxB,KACA41F,EAAA5rF,KAAA8S,IAAAw5E,EAAA7nH,GAAAmnH,IAAAU,EAAAxnH,GAAA8mH,KACA37F,MAAA,GACA0nD,MAAA,EAGA1nD,GAAAxrB,CACA,IACAwrB,EAAAzrB,EAAAyrB,UACA08F,EAAAzgH,KAAA+jB,SACGA,IAAAq8F,EAAAr8F,GAAA+F,OAAA41F,EAAAU,EAAAr8F,GAAA27F,KAKH,KAJAj0C,EAAA1nD,EAGAA,EAAAnrB,GACAmrB,EAAAzrB,EAAAyrB,aAAA0nD,GACAi1C,EAAA1gH,KAAA+jB,EAGA,QAAUzB,KAAAm+F,EAAAnpF,OAAAopF,EAAArvF,WAAAo6C,OAGV,QAAAynC,GAAA56G,GAIA,QAAAk6G,GAAAj6G,GACA,GAAAuxB,GAAA41F,CACA/lH,GAAAC,QAAAq1C,KAAA32C,EAAAE,SAAAD,GAAAi6G,GACA72G,EAAApD,IAAiBuxB,MAAA41F,SANjB,GAAA/jH,MACA+jH,EAAA,CASA,OAFA/lH,GAAAC,QAAAq1C,KAAA32C,EAAAE,WAAAg6G,GAEA72G,EAvFAvE,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAC,GAAAzD,EAAA,GAEAmD,EAEA,SAAAO,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,IAF7ED,EAoFAhE,GAAA2D,QAAAumH,GAIA,SAAAjqH,EAAAD,EAAAO,GAEA,YAeA,SAAAy5G,GAAA/1G,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,GAyB7E,QAAAy8G,GAAAr+G,GACA,GAAAvC,GAAA+/G,EAAAl8G,QAAAy5G,aAAA/6G,EAAA,UAAsD,SACtDqoH,EAAAC,EAAAtoH,GACAo4G,EAAA/2G,EAAAC,QAAAgtC,IAAAjtC,EAAAC,QAAAuC,OAAAwkH,IAAA,EACAE,EAAA,EAAAnQ,EAAA,CAEAp4G,GAAAoB,QAAAonH,YAAA/qH,EAGA4D,EAAAC,QAAAq1C,KAAA32C,EAAAuqE,QAAA,SAAA3qE,GACAI,EAAA2nE,KAAA/nE,GAAA07G,QAAAiN,GAIA,IAAAhjB,GAAAkjB,EAAAzoH,GAAA,CAGAqB,GAAAC,QAAAq1C,KAAA32C,EAAAE,WAAA,SAAAi1E,GACA+kC,EAAAl6G,EAAAvC,EAAA8qH,EAAAhjB,EAAA6S,EAAAiQ,EAAAlzC,KAKAn1E,EAAAoB,QAAAi7G,eAAAkM,EAGA,QAAArO,GAAAl6G,EAAAvC,EAAA8qH,EAAAhjB,EAAA6S,EAAAiQ,EAAApoH,GACA,GAAAC,GAAAF,EAAAE,SAAAD,EACA,KAAAC,EAAAC,OAIA,YAHAF,IAAAxC,GACAuC,EAAA42G,QAAAn5G,EAAAwC,GAA0BslG,OAAA,EAAA+V,OAAAiN,IAK1B,IAAApmE,GAAAq7D,EAAAl8G,QAAAg7G,cAAAt8G,EAAA,OACAwmG,EAAAgX,EAAAl8G,QAAAg7G,cAAAt8G,EAAA,OACAu1G,EAAAv1G,EAAAg4C,KAAA/3C,EAEAD,GAAAm2G,UAAAh0D,EAAAliD,GACAs1G,EAAAqL,UAAAz+D,EACAniD,EAAAm2G,UAAA3P,EAAAvmG,GACAs1G,EAAAuL,aAAAta,EAEAnlG,EAAAC,QAAAq1C,KAAAz2C,EAAA,SAAAi1E,GACA+kC,EAAAl6G,EAAAvC,EAAA8qH,EAAAhjB,EAAA6S,EAAAiQ,EAAAlzC,EAEA,IAAAuzC,GAAA1oH,EAAAg4C,KAAAm9B,GACAwzC,EAAAD,EAAA9H,UAAA8H,EAAA9H,UAAAzrC,EACAyzC,EAAAF,EAAA5H,aAAA4H,EAAA5H,aAAA3rC,EACA0zC,EAAAH,EAAA9H,UAAArb,EAAA,EAAAA,EACA+V,EAAAqN,IAAAC,EAAA,EAAAxQ,EAAAiQ,EAAApoH,GAAA,CAEAD,GAAA42G,QAAAz0D,EAAAwmE,GACApjB,OAAAsjB,EACAvN,SACAwN,aAAA,IAGA9oH,EAAA42G,QAAAgS,EAAApiB,GACAjB,OAAAsjB,EACAvN,SACAwN,aAAA,MAIA9oH,EAAAyrB,OAAAxrB,IACAD,EAAA42G,QAAAn5G,EAAA0kD,GAA0BojD,OAAA,EAAA+V,OAAAlD,EAAAiQ,EAAApoH,KAI1B,QAAAqoH,GAAAtoH,GAEA,QAAAk6G,GAAAj6G,EAAAspB,GACA,GAAArpB,GAAAF,EAAAE,SAAAD,EACAC,MAAAC,QACAkB,EAAAC,QAAAq1C,KAAAz2C,EAAA,SAAAi1E,GACA+kC,EAAA/kC,EAAA5rD,EAAA,KAGA8+F,EAAApoH,GAAAspB,EARA,GAAA8+F,KAaA,OAHAhnH,GAAAC,QAAAq1C,KAAA32C,EAAAE,WAAA,SAAAD,GACAi6G,EAAAj6G,EAAA,KAEAooH,EAGA,QAAAI,GAAAzoH,GACA,MAAAqB,GAAAC,QAAA0hC,OAAAhjC,EAAAuqE,QAAA,SAAAmwC,EAAA96G,GACA,MAAA86G,GAAA16G,EAAA2nE,KAAA/nE,GAAA2lG,QACG,GAGH,QAAAkZ,GAAAz+G,GACA,GAAAqhH,GAAArhH,EAAAoB,OACApB,GAAAg2G,WAAAqL,EAAAmH,mBACAnH,GAAAmH,YACAnnH,EAAAC,QAAAq1C,KAAA32C,EAAAuqE,QAAA,SAAA3qE,GACAI,EAAA2nE,KAAA/nE,GACAkpH,aACA9oH,EAAAi2G,WAAAr2G,KA1IAd,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAC,GAAAzD,EAAA,GAEAmD,EAAAs2G,EAAAh2G,GAEAq7G,EAAA9+G,EAAA,GAEAs/G,EAAA7F,EAAAqF,EAqIAr/G,GAAA2D,SACA+8G,MACAI,YAKA,SAAA7gH,EAAAD,EAAAO,GAEA,YAeA,SAAAy5G,GAAA/1G,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,GAE7E,QAAAmnH,GAAA/oH,GACA,QAAAk6G,GAAAj6G,GACA,GAAAC,GAAAF,EAAAE,SAAAD,GACA+3C,EAAAh4C,EAAAg4C,KAAA/3C,EAKA,IAJAC,EAAAC,QACAkB,EAAAC,QAAAq1C,KAAAz2C,EAAAg6G,GAGA74G,EAAAC,QAAA+E,IAAA2xC,EAAA,YACAA,EAAA6pE,cACA7pE,EAAA8pE,cACA,QAAA9F,GAAAhkE,EAAA6oE,QAAA9E,EAAA/jE,EAAA+jE,QAAA,EAA+DC,EAAAD,IAAgBC,EAC/EM,EAAAt8G,EAAA,mBAAAC,EAAA+3C,EAAAgkE,GACAM,EAAAt8G,EAAA,oBAAAC,EAAA+3C,EAAAgkE,IAKA36G,EAAAC,QAAAq1C,KAAA32C,EAAAE,WAAAg6G,GAGA,QAAAoC,GAAAt8G,EAAAipC,EAAAkF,EAAA66E,EAAAC,EAAAjN,GACA,GAAAzG,IAAe3qD,MAAA,EAAAwtD,OAAA,EAAA4D,OAAAkN,WAAAjgF,GACfkgF,EAAAF,EAAAhgF,GAAA+yE,EAAA,GACAiJ,EAAAzH,EAAAl8G,QAAAy5G,aAAA/6G,EAAA,SAAAu1G,EAAApnE,EACA86E,GAAAhgF,GAAA+yE,GAAAiJ,EACAjlH,EAAAm2G,UAAA8O,EAAA+D,GACAG,GACAnpH,EAAA42G,QAAAuS,EAAAlE,GAA2B1f,OAAA,IA1C3BzmG,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAC,GAAAzD,EAAA,GAEAmD,EAAAs2G,EAAAh2G,GAEAq7G,EAAA9+G,EAAA,GAEAs/G,EAAA7F,EAAAqF,EAoCAr/G,GAAA2D,QAAAynH,GAIA,SAAAnrH,EAAAD,EAAAO,GAEA,YAaA,SAAAghH,GAAAl/G,GACA,GAAAopH,GAAAppH,EAAAoB,QAAAs/G,QAAA32E,aACA,QAAAq/E,GAAA,OAAAA,GACAC,EAAArpH,GAIA,QAAAs/G,GAAAt/G,GACA,GAAAopH,GAAAppH,EAAAoB,QAAAs/G,QAAA32E,aACA,QAAAq/E,GAAA,OAAAA,GACAE,EAAAtpH,GAGA,OAAAopH,GAAA,OAAAA,IACAG,EAAAvpH,GACAqpH,EAAArpH,IAIA,QAAAqpH,GAAArpH,GACAqB,EAAAC,QAAAq1C,KAAA32C,EAAAytE,QAAA,SAAAxtE,GACAupH,EAAAxpH,EAAAg4C,KAAA/3C,MAEAoB,EAAAC,QAAAq1C,KAAA32C,EAAAuqE,QAAA,SAAA3qE,GACA4pH,EAAAxpH,EAAA2nE,KAAA/nE,MAIA,QAAA4pH,GAAAxO,GACA,GAAA16G,GAAA06G,EAAApwD,KACAowD,GAAApwD,MAAAowD,EAAA5C,OACA4C,EAAA5C,OAAA93G,EAGA,QAAAgpH,GAAAtpH,GACAqB,EAAAC,QAAAq1C,KAAA32C,EAAAytE,QAAA,SAAAxtE,GACAwpH,EAAAzpH,EAAAg4C,KAAA/3C,MAGAoB,EAAAC,QAAAq1C,KAAA32C,EAAAuqE,QAAA,SAAA3qE,GACA,GAAA+nE,GAAA3nE,EAAA2nE,KAAA/nE,EACAyB,GAAAC,QAAAq1C,KAAAgxB,EAAAlQ,OAAAgyD,GACApoH,EAAAC,QAAA+E,IAAAshE,EAAA,MACA8hD,EAAA9hD,KAKA,QAAA8hD,GAAAzO,GACAA,EAAAr4D,GAAAq4D,EAAAr4D,EAGA,QAAA4mE,GAAAvpH,GACAqB,EAAAC,QAAAq1C,KAAA32C,EAAAytE,QAAA,SAAAxtE,GACAypH,EAAA1pH,EAAAg4C,KAAA/3C,MAGAoB,EAAAC,QAAAq1C,KAAA32C,EAAAuqE,QAAA,SAAA3qE,GACA,GAAA+nE,GAAA3nE,EAAA2nE,KAAA/nE,EACAyB,GAAAC,QAAAq1C,KAAAgxB,EAAAlQ,OAAAiyD,GACAroH,EAAAC,QAAA+E,IAAAshE,EAAA,MACA+hD,EAAA/hD,KAKA,QAAA+hD,GAAA1O,GACA,GAAAriE,GAAAqiE,EAAAriE,CACAqiE,GAAAriE,EAAAqiE,EAAAr4D,EACAq4D,EAAAr4D,EAAAhK,EA/EA75C,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAC,GAAAzD,EAAA,GAEAmD,EAEA,SAAAO,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,IAF7ED,EA4EAhE,GAAA2D,SACA49G,SACAI,SAKA,SAAA1hH,EAAAD,EAAAO,GAEA,YAqCA,SAAAy5G,GAAA/1G,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,GAiB7E,QAAA+jF,GAAA3lF,GACA,GAAA+7G,GAAAyB,EAAAl8G,QAAAy6G,QAAA/7G,GACA2pH,EAAAC,EAAA5pH,EAAAqB,EAAAC,QAAAo0C,MAAA,EAAAqmE,EAAA,cACA8N,EAAAD,EAAA5pH,EAAAqB,EAAAC,QAAAo0C,MAAAqmE,EAAA,qBAEAD,GAAA,EAAAgO,EAAAxoH,SAAAtB,EACA+pH,GAAA/pH,EAAA87G,EAKA,QAHAkO,GAAAvwC,OAAA4/B,kBACA3c,MAAA,GAEAr+F,EAAA,EAAA4rH,EAAA,EAA+BA,EAAA,IAAc5rH,IAAA4rH,EAAA,CAC7CC,EAAA7rH,EAAA,EAAAsrH,EAAAE,EAAAxrH,EAAA,MAEAy9G,EAAA0B,EAAAl8G,QAAAu6G,iBAAA77G,EACA,IAAAmqH,IAAA,EAAAC,EAAA9oH,SAAAtB,EAAA87G,EACAqO,GAAAH,IACAC,EAAA,EACAvtB,EAAAr7F,EAAAC,QAAA6kC,UAAA21E,GACAkO,EAAAG,GAIAJ,EAAA/pH,EAAA08F,GAGA,QAAAktB,GAAA5pH,EAAAqqH,EAAAC,GACA,MAAAjpH,GAAAC,QAAAU,IAAAqoH,EAAA,SAAArO,GACA,SAAAuO,EAAAjpH,SAAAtB,EAAAg8G,EAAAsO,KAIA,QAAAJ,GAAAM,EAAAC,GACA,GAAAC,GAAA,GAAAtP,GAAAnI,KACA5xG,GAAAC,QAAAq1C,KAAA6zE,EAAA,SAAAG,GACA,GAAAltH,GAAAktH,EAAAvpH,QAAA3D,KACAmtH,GAAA,EAAAC,EAAAvpH,SAAAqpH,EAAAltH,EAAAitH,EAAAD,EACAppH,GAAAC,QAAAq1C,KAAAi0E,EAAA/U,GAAA,SAAA51G,EAAA5B,GACAssH,EAAA3yE,KAAA/3C,GAAA0lF,MAAAtnF,KAEA,EAAAysH,EAAAxpH,SAAAqpH,EAAAD,EAAAE,EAAA/U,MAIA,QAAAkU,GAAA/pH,EAAA87G,GACAz6G,EAAAC,QAAAq1C,KAAAmlE,EAAA,SAAAkG,GACA3gH,EAAAC,QAAAq1C,KAAAqrE,EAAA,SAAA/hH,EAAA5B,GACA2B,EAAAg4C,KAAA/3C,GAAA0lF,MAAAtnF,MAlGAS,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAC,GAAAzD,EAAA,GAEAmD,EAAAs2G,EAAAh2G,GAEAy5G,EAAAl9G,EAAA,GAEA6sH,EAAA7sH,EAAA,IAEA4rH,EAAAnS,EAAAoT,GAEAC,EAAA9sH,EAAA,IAEAksH,EAAAzS,EAAAqT,GAEAC,EAAA/sH,EAAA,IAEA2sH,EAAAlT,EAAAsT,GAEAC,EAAAhtH,EAAA,IAEAqsH,EAAA5S,EAAAuT,GAEAC,EAAAjtH,EAAA,IAEA4sH,EAAAnT,EAAAwT,GAEAnO,EAAA9+G,EAAA,GAEAs/G,EAAA7F,EAAAqF,EAuEAr/G,GAAA2D,QAAAqkF,GAIA,SAAA/nF,EAAAD,EAAAO,GAEA,YAwBA,SAAAktH,GAAAprH,GAYA,QAAAk6G,GAAAj6G,GACA,IAAAoB,EAAAC,QAAA+E,IAAA8zG,EAAAl6G,GAAA,CACAk6G,EAAAl6G,IAAA,CACA,IAAA+3C,GAAAh4C,EAAAg4C,KAAA/3C,EACAk8G,GAAAnkE,EAAAgkE,MAAAt0G,KAAAzH,GACAoB,EAAAC,QAAAq1C,KAAA32C,EAAAs2G,WAAAr2G,GAAAi6G,IAhBA,GAAAC,MACAkR,EAAAhqH,EAAAC,QAAAkhC,OAAAxiC,EAAAytE,QAAA,SAAAxtE,GACA,OAAAD,EAAAE,SAAAD,GAAAE,SAEA47G,EAAA16G,EAAAC,QAAAgtC,IAAAjtC,EAAAC,QAAAU,IAAAqpH,EAAA,SAAAprH,GACA,MAAAD,GAAAg4C,KAAA/3C,GAAA+7G,QAEAG,EAAA96G,EAAAC,QAAAU,IAAAX,EAAAC,QAAAo0C,MAAAqmE,EAAA,cACA,WAWAuP,EAAAjqH,EAAAC,QAAA0xC,OAAAq4E,EAAA,SAAAprH,GACA,MAAAD,GAAAg4C,KAAA/3C,GAAA+7G,MAIA,OAFA36G,GAAAC,QAAAq1C,KAAA20E,EAAApR,GAEAiC,EA9CAr9G,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAC,GAAAzD,EAAA,GAEAmD,EAEA,SAAAO,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,IAF7ED,EA2CAhE,GAAA2D,QAAA8pH,GAIA,SAAAxtH,EAAAD,EAAAO,GAEA,YA6BA,SAAAqtH,GAAAvrH,EAAA87G,GAEA,OADAqO,GAAA,EACA9rH,EAAA,EAAiBA,EAAAy9G,EAAA37G,SAAqB9B,EACtC8rH,GAAAqB,EAAAxrH,EAAA87G,EAAAz9G,EAAA,GAAAy9G,EAAAz9G,GAEA,OAAA8rH,GAGA,QAAAqB,GAAAxrH,EAAAyrH,EAAAC,GAeA,IAXA,GAAAC,GAAAtqH,EAAAC,QAAAmgC,UAAAiqF,EAAArqH,EAAAC,QAAAU,IAAA0pH,EAAA,SAAAzrH,EAAA5B,GACA,MAAAA,MAEAutH,EAAAvqH,EAAAC,QAAAu7B,QAAAx7B,EAAAC,QAAAU,IAAAypH,EAAA,SAAAxrH,GACA,MAAAoB,GAAAC,QAAAqgC,MAAA3hC,EAAAs3G,SAAAr3G,IAAA+B,IAAA,SAAApC,GACA,OAAcisH,IAAAF,EAAA/rH,EAAAU,GAAAilG,OAAAvlG,EAAA2nE,KAAA/nE,GAAA2lG,UACTvyD,OAAA,OAAAtxC,WACF,GAGHoqH,EAAA,EACAA,EAAAJ,EAAAvrH,QACA2rH,IAAA,CAEA,IAAAC,GAAA,EAAAD,EAAA,CACAA,IAAA,CACA,IAAAl/C,GAAAvrE,EAAAC,QAAAU,IAAA,GAAA2B,OAAAooH,GAAA,WACA,WAIA5B,EAAA,CAeA,OAdA9oH,GAAAC,QAAAq1C,KAAAi1E,EAAA/jH,QAAA,SAAA2a,GACA,GAAA1f,GAAA0f,EAAAqpG,IAAAC,CACAl/C,GAAA9pE,IAAA0f,EAAA+iF,MAEA,KADA,GAAAymB,GAAA,EACAlpH,EAAA,GACAA,EAAA,IACAkpH,GAAAp/C,EAAA9pE,EAAA,IAEAA,IAAA,KACA8pE,EAAA9pE,IAAA0f,EAAA+iF,MAEA4kB,IAAA3nG,EAAA+iF,OAAAymB,KAGA7B,EA1EArrH,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAC,GAAAzD,EAAA,GAEAmD,EAEA,SAAAO,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,IAF7ED,EAuEAhE,GAAA2D,QAAAiqH,GAIA,SAAA3tH,EAAAD,EAAAO,GAEA,YAuBA,SAAAy5G,GAAA/1G,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,GAE7E,QAAAqqH,GAAAjsH,EAAAC,EAAAyqH,EAAAD,GACA,GAAAyB,GAAAlsH,EAAAE,SAAAD,GACA+3C,EAAAh4C,EAAAg4C,KAAA/3C,GACA8wE,EAAA/4B,IAAA6pE,eAAAt8G,GACAipE,EAAAx2B,IAAA8pE,gBAAAv8G,GACA4mH,IAEAp7C,KACAm7C,EAAA7qH,EAAAC,QAAAkhC,OAAA0pF,EAAA,SAAA5rH,GACA,MAAAA,KAAAywE,GAAAzwE,IAAAkuE,IAIA,IAAA49C,IAAA,EAAAC,EAAA/qH,SAAAtB,EAAAksH,EACA7qH,GAAAC,QAAAq1C,KAAAy1E,EAAA,SAAA5pG,GACA,GAAAxiB,EAAAE,SAAAsiB,EAAAviB,GAAAE,OAAA,CACA,GAAAmsH,GAAAL,EAAAjsH,EAAAwiB,EAAAviB,EAAAyqH,EAAAD,EACA0B,GAAA3pG,EAAAviB,GAAAqsH,EACAjrH,EAAAC,QAAA+E,IAAAimH,EAAA,eACAC,EAAA/pG,EAAA8pG,KAKA,IAAAhqG,IAAA,EAAAkqG,EAAAlrH,SAAA8qH,EAAA1B,EACA+B,GAAAnqG,EAAA6pG,EAEA,IAAA9oH,IAAA,EAAAqpH,EAAAprH,SAAAghB,EAAAmoG,EAEA,IAAA15C,IACA1tE,EAAAwyG,GAAAx0G,EAAAC,QAAAu7B,SAAAk0C,EAAA1tE,EAAAwyG,GAAArnC,IAAA,GACAxuE,EAAAo2G,aAAArlC,GAAA5wE,QAAA,CACA,GAAAwsH,GAAA3sH,EAAAg4C,KAAAh4C,EAAAo2G,aAAArlC,GAAA,IACA67C,EAAA5sH,EAAAg4C,KAAAh4C,EAAAo2G,aAAA5nC,GAAA,GACAntE,GAAAC,QAAA+E,IAAAhD,EAAA,gBACAA,EAAAwpH,WAAA,EACAxpH,EAAAkiG,OAAA,GAEAliG,EAAAwpH,YAAAxpH,EAAAwpH,WAAAxpH,EAAAkiG,OAAAonB,EAAAhnC,MAAAinC,EAAAjnC,QAAAtiF,EAAAkiG,OAAA,GACAliG,EAAAkiG,QAAA,EAIA,MAAAliG,GAGA,QAAAopH,GAAAnqG,EAAA6pG,GACA9qH,EAAAC,QAAAq1C,KAAAr0B,EAAA,SAAAE,GACAA,EAAAqzF,GAAAx0G,EAAAC,QAAAu7B,QAAAra,EAAAqzF,GAAA7zG,IAAA,SAAA/B,GACA,MAAAksH,GAAAlsH,GACAksH,EAAAlsH,GAAA41G,GAEA51G,KACK,KAIL,QAAAssH,GAAAtiF,EAAAvf,GACArpB,EAAAC,QAAAqmC,YAAAsC,EAAA4iF,aAIA5iF,EAAA4iF,WAAAniG,EAAAmiG,WACA5iF,EAAAs7D,OAAA76E,EAAA66E,SAJAt7D,EAAA4iF,YAAA5iF,EAAA4iF,WAAA5iF,EAAAs7D,OAAA76E,EAAAmiG,WAAAniG,EAAA66E,SAAAt7D,EAAAs7D,OAAA76E,EAAA66E,QACAt7D,EAAAs7D,QAAA76E,EAAA66E,QAlFAzmG,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAC,GAAAzD,EAAA,GAEAmD,EAAAs2G,EAAAh2G,GAEAmrH,EAAA5uH,EAAA,IAEAmuH,EAAA1U,EAAAmV,GAEAC,EAAA7uH,EAAA,IAEAsuH,EAAA7U,EAAAoV,GAEAC,EAAA9uH,EAAA,IAEAwuH,EAAA/U,EAAAqV,EAuEArvH,GAAA2D,QAAA2qH,GAIA,SAAAruH,EAAAD,EAAAO,GAEA,YAaA,SAAA2uH,GAAA7sH,EAAAksH,GACA,MAAA7qH,GAAAC,QAAAU,IAAAkqH,EAAA,SAAAjsH,GACA,GAAAo3G,GAAAr3G,EAAAo3G,QAAAn3G,EACA,IAAAo3G,EAAAl3G,OAEK,CACL,GAAAkD,GAAAhC,EAAAC,QAAA0hC,OAAAq0E,EAAA,SAAAqD,EAAA96G,GACA,GAAA+nE,GAAA3nE,EAAA2nE,KAAA/nE,GACAqtH,EAAAjtH,EAAAg4C,KAAAp4C,EAAAK,EACA,QACA2uC,IAAA8rE,EAAA9rE,IAAA+4B,EAAA49B,OAAA0nB,EAAAtnC,MACA4f,OAAAmV,EAAAnV,OAAA59B,EAAA49B,UAEU32D,IAAA,EAAA22D,OAAA,GAEV,QACAtlG,IACA4sH,WAAAxpH,EAAAurC,IAAAvrC,EAAAkiG,OACAA,OAAAliG,EAAAkiG,QAdA,OAActlG,OAddnB,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAC,GAAAzD,EAAA,GAEAmD,EAEA,SAAAO,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,IAF7ED,EA4BAhE,GAAA2D,QAAAurH,GAIA,SAAAjvH,EAAAD,EAAAO,GAEA,YAsCA,SAAAgvH,GAAA5qG,EAAAooG,GACA,GAAAyC,KA4BA,OA3BA9rH,GAAAC,QAAAq1C,KAAAr0B,EAAA,SAAAE,EAAAnkB,GACA,GAAAu2G,GAAAuY,EAAA3qG,EAAAviB,IACAmtH,SAAA,EACAzqB,MACAC,OACAiT,IAAArzF,EAAAviB,GACA5B,IAEAgD,GAAAC,QAAAqmC,YAAAnlB,EAAAqqG,cACAjY,EAAAiY,WAAArqG,EAAAqqG,WACAjY,EAAArP,OAAA/iF,EAAA+iF,UAIAlkG,EAAAC,QAAAq1C,KAAA+zE,EAAAngD,QAAA,SAAA3qE,GACA,GAAAytH,GAAAF,EAAAvtH,EAAAK,GACAqtH,EAAAH,EAAAvtH,EAAAU,EACAe,GAAAC,QAAAqmC,YAAA0lF,IAAAhsH,EAAAC,QAAAqmC,YAAA2lF,KACAA,EAAAF,WACAC,EAAAzqB,IAAAl7F,KAAAylH,EAAAvtH,EAAAU,OAQAitH,EAJAlsH,EAAAC,QAAAkhC,OAAA2qF,EAAA,SAAA3qG,GACA,OAAAA,EAAA4qG,YAMA,QAAAG,GAAAC,GAuBA,IAtBA,GAAAlrG,MAsBAkrG,EAAArtH,QAAA,CACA,GAAAqiB,GAAAgrG,EAAApqG,KACAd,GAAA5a,KAAA8a,GACAnhB,EAAAC,QAAAq1C,KAAAn0B,EAAA,GAAAuW,UAvBA,SAAA8/E,GACA,gBAAAkL,GACAA,EAAA/+B,SAGA3jF,EAAAC,QAAAqmC,YAAAo8E,EAAA8I,aAAAxrH,EAAAC,QAAAqmC,YAAAkxE,EAAAgU,aAAA9I,EAAA8I,YAAAhU,EAAAgU,aACAY,EAAA5U,EAAAkL,KAiBAvhG,IACAnhB,EAAAC,QAAAq1C,KAAAn0B,EAAAogF,IAbA,SAAAiW,GACA,gBAAAK,GACAA,EAAA,GAAAxxG,KAAAmxG,GACA,KAAAK,EAAAkU,UACAI,EAAA9lH,KAAAwxG,KASA12F,IAGA,MAAAnhB,GAAAC,QAAAqgC,MAAArf,GAAAkgB,OAAA,SAAAhgB,GACA,OAAAA,EAAAwiE,SACGhjF,IAAA,SAAAwgB,GACH,MAAAnhB,GAAAC,QAAAytC,KAAAvsB,GAAA,mCACG9gB,QAGH,QAAA+rH,GAAAxjF,EAAA18B,GACA,GAAAqhC,GAAA,EACA22D,EAAA,CAEAt7D,GAAAs7D,SACA32D,GAAA3E,EAAA4iF,WAAA5iF,EAAAs7D,OACAA,GAAAt7D,EAAAs7D,QAGAh4F,EAAAg4F,SACA32D,GAAArhC,EAAAs/G,WAAAt/G,EAAAg4F,OACAA,GAAAh4F,EAAAg4F,QAGAt7D,EAAA4rE,GAAAtoG,EAAAsoG,GAAA72E,OAAAiL,EAAA4rE,IACA5rE,EAAA4iF,WAAAj+E,EAAA22D,EACAt7D,EAAAs7D,SACAt7D,EAAA5rC,EAAAm9B,KAAAkT,IAAAnhC,EAAAlP,EAAA4rC,EAAA5rC,GACAkP,EAAAy3E,QAAA,EA1HAlmF,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAC,GAAAzD,EAAA,GAEAmD,EAEA,SAAAO,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,IAF7ED,EAuHAhE,GAAA2D,QAAA4rH,GAIA,SAAAtvH,EAAAD,EAAAO,GAEA,YAeA,SAAAy5G,GAAA/1G,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,GAE7E,QAAAgE,GAAA0c,EAAAmoG,GACA,GAAAiD,GAAAlQ,EAAAl8G,QAAAyxC,UAAAzwB,EAAA,SAAAE,GACA,MAAAnhB,GAAAC,QAAA+E,IAAAmc,EAAA,gBAEAmrG,EAAAD,EAAAnR,IACAqR,EAAAvsH,EAAAC,QAAA0xC,OAAA06E,EAAAlR,IAAA,SAAAh6F,GACA,OAAAA,EAAAnkB,IAEAw3G,KACAjnE,EAAA,EACA22D,EAAA,EACAsoB,EAAA,CAEAF,GAAA/nH,KAAAkoH,IAAArD,IAEAoD,EAAAE,EAAAlY,EAAA+X,EAAAC,GAEAxsH,EAAAC,QAAAq1C,KAAAg3E,EAAA,SAAAnrG,GACAqrG,GAAArrG,EAAAqzF,GAAA11G,OACA01G,EAAAnuG,KAAA8a,EAAAqzF,IACAjnE,GAAApsB,EAAAqqG,WAAArqG,EAAA+iF,OACAA,GAAA/iF,EAAA+iF,OACAsoB,EAAAE,EAAAlY,EAAA+X,EAAAC,IAGA,IAAAxqH,IAAgBwyG,GAAAx0G,EAAAC,QAAAu7B,QAAAg5E,GAAA,GAKhB,OAJAtQ,KACAliG,EAAAwpH,WAAAj+E,EAAA22D,EACAliG,EAAAkiG,UAEAliG,EAGA,QAAA0qH,GAAAlY,EAAA+X,EAAA9qH,GAEA,IADA,GAAA4oB,OAAA,GACAkiG,EAAAztH,SAAAurB,EAAArqB,EAAAC,QAAAoqB,KAAAkiG,IAAAvvH,GAAAyE,GACA8qH,EAAAxqG,MACAyyF,EAAAnuG,KAAAgkB,EAAAmqF,IACA/yG,GAEA,OAAAA,GAGA,QAAAgrH,GAAAE,GACA,gBAAAX,EAAAC,GACA,MAAAD,GAAAR,WAAAS,EAAAT,YACA,EACKQ,EAAAR,WAAAS,EAAAT,WACL,EAGAmB,EAAAV,EAAAjvH,EAAAgvH,EAAAhvH,EAAAgvH,EAAAhvH,EAAAivH,EAAAjvH,GAjEAS,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAC,GAAAzD,EAAA,GAEAmD,EAAAs2G,EAAAh2G,GAEAq7G,EAAA9+G,EAAA,GAEAs/G,EAAA7F,EAAAqF,EA2DAr/G,GAAA2D,QAAAsE,GAIA,SAAAhI,EAAAD,EAAAO,GAEA,YA6CA,SAAA+vH,GAAAjuH,EAAAg8G,EAAAsO,GACA,GAAA7sH,GAAAywH,EAAAluH,GACAqD,EAAA,GAAA+3G,GAAAnI,OAAoCQ,UAAA,IAAiB6B,UAAY73G,SAAa+3G,oBAAA,SAAAv1G,GAC9E,MAAAD,GAAAg4C,KAAA/3C,IA4BA,OAzBAoB,GAAAC,QAAAq1C,KAAA32C,EAAAytE,QAAA,SAAAxtE,GACA,GAAA+3C,GAAAh4C,EAAAg4C,KAAA/3C,GACAwrB,EAAAzrB,EAAAyrB,OAAAxrB,IAEA+3C,EAAAgkE,UAAAhkE,EAAA6oE,SAAA7E,MAAAhkE,EAAA+jE,WACA14G,EAAAyyG,QAAA71G,GACAoD,EAAA8yG,UAAAl2G,EAAAwrB,GAAAhuB,GAGA4D,EAAAC,QAAAq1C,KAAA32C,EAAAsqH,GAAArqH,GAAA,SAAAL,GACA,GAAAu0D,GAAAv0D,EAAAK,MAAAL,EAAAU,EAAAV,EAAAK,EACA0nE,EAAAtkE,EAAAskE,KAAAxT,EAAAl0D,GACAslG,EAAAlkG,EAAAC,QAAAqmC,YAAAggC,GAAA,EAAAA,EAAA49B,MACAliG,GAAAuzG,QAAAziD,EAAAl0D,GAA8BslG,OAAAvlG,EAAA2nE,KAAA/nE,GAAA2lG,aAG9BlkG,EAAAC,QAAA+E,IAAA2xC,EAAA,YACA30C,EAAAyyG,QAAA71G,GACA4hH,WAAA7pE,EAAA6pE,WAAA7F,GACA8F,YAAA9pE,EAAA8pE,YAAA9F,QAMA34G,EAGA,QAAA6qH,GAAAluH,GAEA,IADA,GAAAC,OAAA,GACAD,EAAA+1G,QAAA91G,EAAAoB,EAAAC,QAAA4sC,SAAA,YACA,MAAAjuC,GA/EAnB,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAC,GAAAzD,EAAA,GAEAmD,EAIA,SAAAO,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,IAJ7ED,GAEAy5G,EAAAl9G,EAAA,EA0EAP,GAAA2D,QAAA2sH,GAIA,SAAArwH,EAAAD,EAAAO,GAEA,YAaA,SAAAiwH,GAAAnuH,EAAA0qH,EAAA7U,GACA,GAAAsT,MACAiF,MAAA,EAEA/sH,GAAAC,QAAAq1C,KAAAk/D,EAAA,SAAA51G,GAIA,IAHA,GAAAk1E,GAAAn1E,EAAAyrB,OAAAxrB,GACAwrB,MAAA,GACA4iG,MAAA,GACAl5C,GAAA,CASA,GARA1pD,EAAAzrB,EAAAyrB,OAAA0pD,GACA1pD,GACA4iG,EAAAlF,EAAA19F,GACA09F,EAAA19F,GAAA0pD,IAEAk5C,EAAAD,EACAA,EAAAj5C,GAEAk5C,OAAAl5C,EAEA,WADAu1C,GAAA9T,QAAAyX,EAAAl5C,EAGAA,GAAA1pD,KA/BA3sB,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAC,GAAAzD,EAAA,GAEAmD,EAEA,SAAAO,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,IAF7ED,EAsDAhE,GAAA2D,QAAA6sH,GAIA,SAAAvwH,EAAAD,EAAAO,GAEA,YAiBA,SAAAy5G,GAAA/1G,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,GAE7E,QAAAsoC,GAAAlqC,GACAA,EAAAw9G,EAAAl8G,QAAAi6G,mBAAAv7G,GAEAsuH,EAAAtuH,GACAqB,EAAAC,QAAAq1C,MAAA,EAAA43E,EAAAC,WAAAxuH,GAAA,SAAA24C,EAAA14C,GACAD,EAAAg4C,KAAA/3C,GAAA04C,MAIA,QAAA21E,GAAAtuH,GACA,GAAA87G,GAAA0B,EAAAl8G,QAAAu6G,iBAAA77G,GACAyuH,EAAAzuH,EAAAoB,QAAAo/G,QACAkO,EAAA,CACArtH,GAAAC,QAAAq1C,KAAAmlE,EAAA,SAAAkG,GACA,GAAA2M,GAAAttH,EAAAC,QAAAgtC,IAAAjtC,EAAAC,QAAAU,IAAAggH,EAAA,SAAA/hH,GACA,MAAAD,GAAAg4C,KAAA/3C,GAAAm4G,SAEA/2G,GAAAC,QAAAq1C,KAAAqrE,EAAA,SAAA/hH,GACAD,EAAAg4C,KAAA/3C,GAAA0iD,EAAA+rE,EAAAC,EAAA,IAEAD,GAAAC,EAAAF,IApCA3vH,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAC,GAAAzD,EAAA,GAEAmD,EAAAs2G,EAAAh2G,GAEAq7G,EAAA9+G,EAAA,GAEAs/G,EAAA7F,EAAAqF,GAEAuR,EAAArwH,EAAA,GA4BAP,GAAA2D,QAAA4oC,GAIA,SAAAtsC,EAAAD,EAAAO,GAEA,YAkBA,SAAAy5G,GAAA/1G,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,GAwB7E,QAAAgtH,GAAA5uH,EAAA87G,GAGA,QAAA+S,GAAAC,EAAA9M,GAGA,GAAA+M,GAAA,EAGAC,EAAA,EACAC,EAAAH,EAAA3uH,OACA+uH,EAAA7tH,EAAAC,QAAAoqB,KAAAs2F,EAqBA,OAnBA3gH,GAAAC,QAAAq1C,KAAAqrE,EAAA,SAAA/hH,EAAA5B,GACA,GAAAiC,GAAA6uH,EAAAnvH,EAAAC,GACAmvH,EAAA9uH,EAAAN,EAAAg4C,KAAA13C,GAAAqlF,MAAAspC,GAEA3uH,GAAAL,IAAAivH,KACA7tH,EAAAC,QAAAq1C,KAAAqrE,EAAApuF,MAAAo7F,EAAA3wH,EAAA,YAAAgxH,GACAhuH,EAAAC,QAAAq1C,KAAA32C,EAAAo2G,aAAAiZ,GAAA,SAAAl7D,GACA,GAAAm7D,GAAAtvH,EAAAg4C,KAAAmc,GACAo7D,EAAAD,EAAA3pC,QACA4pC,EAAAR,GAAAK,EAAAG,IAAAD,EAAArU,OAAAj7G,EAAAg4C,KAAAq3E,GAAApU,OACAuU,EAAAC,EAAAt7D,EAAAk7D,OAIAL,EAAA3wH,EAAA,EACA0wH,EAAAK,KAIApN,EA/BA,GAAAyN,KAmCA,OADApuH,GAAAC,QAAA0hC,OAAA84E,EAAA+S,GACAY,EAGA,QAAAC,GAAA1vH,EAAA87G,GAGA,QAAA6T,GAAAC,EAAAjE,EAAAkE,EAAAC,EAAAC,GACA,GAAA9vH,OAAA,EACAoB,GAAAC,QAAAq1C,KAAAt1C,EAAAC,QAAAo0C,MAAAi2E,EAAAkE,GAAA,SAAAxxH,GACA4B,EAAA2vH,EAAAvxH,GACA2B,EAAAg4C,KAAA/3C,GAAAg7G,OACA55G,EAAAC,QAAAq1C,KAAA32C,EAAAo2G,aAAAn2G,GAAA,SAAAk0D,GACA,GAAA67D,GAAAhwH,EAAAg4C,KAAAmc,EACA67D,GAAA/U,QAAA+U,EAAArqC,MAAAmqC,GAAAE,EAAArqC,MAAAoqC,IACAP,EAAAC,EAAAt7D,EAAAl0D,OAOA,QAAA4uH,GAAAoB,EAAAL,GACA,GAAAM,IAAA,EACAC,MAAA,GACAxE,EAAA,CAeA,OAbAtqH,GAAAC,QAAAq1C,KAAAi5E,EAAA,SAAA3vH,EAAAmwH,GACA,cAAApwH,EAAAg4C,KAAA/3C,GAAAg7G,MAAA,CACA,GAAA7E,GAAAp2G,EAAAo2G,aAAAn2G,EACAm2G,GAAAj2G,SACAgwH,EAAAnwH,EAAAg4C,KAAAo+D,EAAA,IAAAzwB,MACAgqC,EAAAC,EAAAjE,EAAAyE,EAAAF,EAAAC,GACAxE,EAAAyE,EACAF,EAAAC,GAGAR,EAAAC,EAAAjE,EAAAiE,EAAAzvH,OAAAgwH,EAAAF,EAAA9vH,UAGAyvH,EAnCA,GAAAH,KAuCA,OADApuH,GAAAC,QAAA0hC,OAAA84E,EAAA+S,GACAY,EAGA,QAAAN,GAAAnvH,EAAAC,GACA,GAAAD,EAAAg4C,KAAA/3C,GAAAg7G,MACA,MAAA55G,GAAAC,QAAAoxC,KAAA1yC,EAAAo2G,aAAAn2G,GAAA,SAAAk0D,GACA,MAAAn0D,GAAAg4C,KAAAmc,GAAA8mD,QAKA,QAAAuU,GAAAC,EAAAxvH,EAAAK,GACA,GAAAL,EAAAK,EAAA,CACA,GAAAs0G,GAAA30G,CACAA,GAAAK,EACAA,EAAAs0G,EAGA,GAAAyb,GAAAZ,EAAAxvH,EACAowH,KACAZ,EAAAxvH,GAAAowH,MAEAA,EAAA/vH,IAAA,EAGA,QAAAgwH,GAAAb,EAAAxvH,EAAAK,GACA,GAAAL,EAAAK,EAAA,CACA,GAAAs0G,GAAA30G,CACAA,GAAAK,EACAA,EAAAs0G,EAEA,MAAAvzG,GAAAC,QAAA+E,IAAAopH,EAAAxvH,GAAAK,GAWA,QAAAiwH,GAAAvwH,EAAA87G,EAAA2T,EAAAe,GACA,GAAA/yH,MACAstD,KACA8gE,IAkCA,OA7BAxqH,GAAAC,QAAAq1C,KAAAmlE,EAAA,SAAAkG,GACA3gH,EAAAC,QAAAq1C,KAAAqrE,EAAA,SAAA/hH,EAAA0lF,GACAloF,EAAAwC,KACA8qD,EAAA9qD,KACA4rH,EAAA5rH,GAAA0lF,MAIAtkF,EAAAC,QAAAq1C,KAAAmlE,EAAA,SAAAkG,GACA,GAAAyO,IAAA,CACApvH,GAAAC,QAAAq1C,KAAAqrE,EAAA,SAAA/hH,GACA,GAAAywH,GAAAF,EAAAvwH,EACA,IAAAywH,EAAAvwH,OAAA,CACAuwH,EAAArvH,EAAAC,QAAA0xC,OAAA09E,EAAA,SAAApwH,GACA,MAAAurH,GAAAvrH,IAGA,QADAqwH,IAAAD,EAAAvwH,OAAA,KACA9B,EAAAm9B,KAAAyU,MAAA0gF,GAAAC,EAAAp1F,KAAAwU,KAAA2gF,GAAwDtyH,GAAAuyH,IAASvyH,EAAA,CACjE,GAAAiC,GAAAowH,EAAAryH,EACA0sD,GAAA9qD,QAAAwwH,EAAA5E,EAAAvrH,KAAAgwH,EAAAb,EAAAxvH,EAAAK,KACAyqD,EAAAzqD,GAAAL,EACA8qD,EAAA9qD,GAAAxC,EAAAwC,GAAAxC,EAAA6C,GACAmwH,EAAA5E,EAAAvrH,WAOU7C,OAAAstD,SAGV,QAAA8lE,GAAA7wH,EAAA87G,EAAAr+G,EAAAstD,EAAA+lE,GAWA,QAAAC,GAAA9wH,GACAoB,EAAAC,QAAA+E,IAAA8zG,EAAAl6G,KACAk6G,EAAAl6G,IAAA,EACAqhG,EAAArhG,GAAAoB,EAAAC,QAAA0hC,OAAAguF,EAAA5Z,QAAAn3G,GAAA,SAAAquC,EAAA1uC,GAEA,MADAmxH,GAAAnxH,EAAAK,GACAu7B,KAAA8S,MAAAgzD,EAAA1hG,EAAAK,GAAA+wH,EAAArpD,KAAA/nE,KACO,IAMP,QAAAqxH,GAAAhxH,GACA,OAAAk6G,EAAAl6G,GAAA,CACAk6G,EAAAl6G,IACA,IAAA+3C,GAAAh4C,EAAAg4C,KAAA/3C,GACAyuC,EAAArtC,EAAAC,QAAA0hC,OAAAguF,EAAA1Z,SAAAr3G,GAAA,SAAAyuC,EAAA9uC,GAEA,MADAqxH,GAAArxH,EAAAU,GACAk7B,KAAAkT,MAAA4yD,EAAA1hG,EAAAU,GAAA0wH,EAAArpD,KAAA/nE,KACO65E,OAAA4/B,kBACP3qE,KAAA+qC,OAAA4/B,mBAAArhE,EAAAkxE,iBACA5nB,EAAArhG,GAAAu7B,KAAA8S,IAAAgzD,EAAArhG,GAAAyuC,KA1BA,GAAA4yD,MACA0vB,EAAAE,EAAAlxH,EAAA87G,EAAAr+G,EAAAqzH,GAGA3W,IAUA94G,GAAAC,QAAAq1C,KAAAq6E,EAAAvjD,QAAAsjD,EAEA,IAAA7H,GAAA4H,EAAA,0BAqBA,OAPAzvH,GAAAC,QAAAq1C,KAAAq6E,EAAAvjD,QAAAwjD,GAGA5vH,EAAAC,QAAAq1C,KAAAoU,EAAA,SAAA9qD,GACAqhG,EAAArhG,GAAAqhG,EAAA7jG,EAAAwC,MAGAqhG,EAGA,QAAA4vB,GAAAlxH,EAAA87G,EAAAr+G,EAAAqzH,GACA,GAAAK,GAAA,GAAA/V,GAAAnI,MACAoO,EAAArhH,EAAAoB,QACAgwH,EAAAC,EAAAhQ,EAAA0B,QAAA1B,EAAAyB,QAAAgO,EAgBA,OAdAzvH,GAAAC,QAAAq1C,KAAAmlE,EAAA,SAAAkG,GACA,GAAA7tD,OAAA,EACA9yD,GAAAC,QAAAq1C,KAAAqrE,EAAA,SAAA/hH,GACA,GAAAqxH,GAAA7zH,EAAAwC,EAEA,IADAkxH,EAAArb,QAAAwb,GACAn9D,EAAA,CACA,GAAAo9D,GAAA9zH,EAAA02D,GACAq9D,EAAAL,EAAAxpD,KAAA4pD,EAAAD,EACAH,GAAAva,QAAA2a,EAAAD,EAAA91F,KAAA8S,IAAA8iF,EAAApxH,EAAAC,EAAAk0D,GAAAq9D,GAAA,IAEAr9D,EAAAl0D,MAIAkxH,EAMA,QAAAM,GAAAzxH,EAAA0xH,GACA,MAAArwH,GAAAC,QAAAqtC,MAAAttC,EAAAC,QAAAuC,OAAA6tH,GAAA,SAAApwB,GACA,GAAA5yD,IAAArtC,EAAAC,QAAAqtC,MAAAttC,EAAAC,QAAAkzC,QAAA8sD,GAAA,SAAAr/F,GACA,MAAAA,GAAA,GAAA2oD,EAAA5qD,EAAAiC,EAAA,UACK,UAIL,QAHAZ,EAAAC,QAAAitC,MAAAltC,EAAAC,QAAAkzC,QAAA8sD,GAAA,SAAAr/F,GACA,MAAAA,GAAA,GAAA2oD,EAAA5qD,EAAAiC,EAAA,UACK,WACLysC,IAWA,QAAAijF,GAAAD,EAAAE,GACA,GAAAC,GAAAxwH,EAAAC,QAAAotC,IAAArtC,EAAAC,QAAAuC,OAAA+tH,IACAE,EAAAzwH,EAAAC,QAAAgtC,IAAAjtC,EAAAC,QAAAuC,OAAA+tH,GAEAvwH,GAAAC,QAAAq1C,MAAA,kBAAAo7E,GACA1wH,EAAAC,QAAAq1C,MAAA,kBAAAq7E,GACA,GAAAC,GAAAF,EAAAC,EACA1wB,EAAAowB,EAAAO,EACA,IAAA3wB,IAAAswB,EAAA,CAGA,GAAAxV,GAAA,MAAA4V,EAAAH,EAAAxwH,EAAAC,QAAAotC,IAAArtC,EAAAC,QAAAuC,OAAAy9F,IAAAwwB,EAAAzwH,EAAAC,QAAAgtC,IAAAjtC,EAAAC,QAAAuC,OAAAy9F,GACA8a,KACAsV,EAAAO,GAAA5wH,EAAAC,QAAAwnC,UAAAw4D,EAAA,SAAA3oD,GACA,MAAAA,GAAAyjE,UAOA,QAAA8V,GAAAR,EAAA3mE,GACA,MAAA1pD,GAAAC,QAAAwnC,UAAA4oF,EAAAS,GAAA,SAAAC,EAAAnyH,GACA,GAAA8qD,EACA,MAAA2mE,GAAA3mE,EAAAhhB,eAAA9pC,EAEA,IAAAqhG,GAAAjgG,EAAAC,QAAA0xC,OAAA3xC,EAAAC,QAAAU,IAAA0vH,EAAAzxH,GACA,QAAAqhG,EAAA,GAAAA,EAAA,QAKA,QAAAktB,GAAAxuH,GACA,GAAA87G,GAAA0B,EAAAl8G,QAAAu6G,iBAAA77G,GACAyvH,EAAApuH,EAAAC,QAAAgzC,MAAAs6E,EAAA5uH,EAAA87G,GAAA4T,EAAA1vH,EAAA87G,IAEA4V,KACAW,MAAA,EACAhxH,GAAAC,QAAAq1C,MAAA,kBAAAo7E,GACAM,EAAA,MAAAN,EAAAjW,EAAAz6G,EAAAC,QAAAuC,OAAAi4G,GAAA/iF,UACA13B,EAAAC,QAAAq1C,MAAA,kBAAAq7E,GACA,MAAAA,IACAK,EAAAhxH,EAAAC,QAAAU,IAAAqwH,EAAA,SAAAC,GACA,MAAAjxH,GAAAC,QAAAuC,OAAAyuH,GAAAv5F,YAIA,IAAAy3F,GAAAnvH,EAAAC,QAAA2xC,KAAA,MAAA8+E,EAAA/xH,EAAAo2G,aAAAp2G,EAAAs2G,WAAAt2G,GACA+qD,EAAAwlE,EAAAvwH,EAAAqyH,EAAA5C,EAAAe,GACAlvB,EAAAuvB,EAAA7wH,EAAAqyH,EAAAtnE,EAAAttD,KAAAstD,QAAA,MAAAinE,EACA,OAAAA,IACA1wB,EAAAjgG,EAAAC,QAAAwnC,UAAAw4D,EAAA,SAAA3oD,GACA,OAAAA,KAGA+4E,EAAAK,EAAAC,GAAA1wB,KAIA,IAAAixB,GAAAd,EAAAzxH,EAAA0xH,EAEA,OADAC,GAAAD,EAAAa,GACAL,EAAAR,EAAA1xH,EAAAoB,QAAA2pD,OAGA,QAAAsmE,GAAA9I,EAAAiK,EAAA1B,GACA,gBAAA9wH,EAAAC,EAAAK,GACA,GAAA+mH,GAAArnH,EAAAg4C,KAAA/3C,GACAqnH,EAAAtnH,EAAAg4C,KAAA13C,GACAsuC,EAAA,EACAwtE,MAAA,EAGA,IADAxtE,GAAAy4E,EAAAz8D,MAAA,EACAvpD,EAAAC,QAAA+E,IAAAghH,EAAA,YACA,OAAAA,EAAA5G,SAAA12E,eACA,QACAqyE,GAAAiL,EAAAz8D,MAAA,CAAoC,MACpC,SACAwxD,EAAAiL,EAAAz8D,MAAA,EAYA,GATAwxD,IACAxtE,GAAAkiF,EAAA1U,MAEAA,EAAA,EAEAxtE,IAAAy4E,EAAApM,MAAAuX,EAAAjK,GAAA,EACA35E,IAAA04E,EAAArM,MAAAuX,EAAAjK,GAAA,EAEA35E,GAAA04E,EAAA18D,MAAA,EACAvpD,EAAAC,QAAA+E,IAAAihH,EAAA,YACA,OAAAA,EAAA7G,SAAA12E,eACA,QACAqyE,EAAAkL,EAAA18D,MAAA,CAAmC,MACnC,SACAwxD,GAAAkL,EAAA18D,MAAA,EAQA,MALAwxD,KACAxtE,GAAAkiF,EAAA1U,MAEAA,EAAA,EAEAxtE,GAIA,QAAAgc,GAAA5qD,EAAAC,GACA,MAAAD,GAAAg4C,KAAA/3C,GAAA2qD,MA7YA9rD,OAAAC,eAAApB,EAAA,cACA+D,OAAA,IAEA/D,EAAA6wH,WAEA,IAAA7sH,GAAAzD,EAAA,GAEAmD,EAAAs2G,EAAAh2G,GAEAy5G,EAAAl9G,EAAA,GAEA8+G,EAAA9+G,EAAA,GAEAs/G,EAAA7F,EAAAqF,EAmYAr/G,GAAA2D,SACAktH,YACAI,qBACAc,qBACAF,cACAc,cACAC,oBACAM,uBACAc,mBACAF,6BACAS,YAKA,SAAAt0H,EAAAD,EAAAO,GAEA,YAiBA,SAAAy5G,GAAA/1G,GAAsC,MAAAA,MAAAxC,WAAAwC,GAAuCN,QAAAM,GAG7E,QAAA6wH,GAAAzyH,GACA,GAAA0yH,GAAAlV,EAAAl8G,QAAAu6G,iBAAA77G,GAEAukD,EAAA,GAAA62D,GAAAnI,OAA+BQ,UAAA,EAAAF,YAAA,IAAmC+B,YAoBlE,OAlBAj0G,GAAAC,QAAAq1C,KAAA32C,EAAAytE,QAAA,SAAAxtE,GACAskD,EAAAuxD,QAAA71G,GAAkBs1G,MAAAt1G,IAClBskD,EAAA4xD,UAAAl2G,EAAA,QAAAD,EAAAg4C,KAAA/3C,GAAA+7G,QAGA36G,EAAAC,QAAAq1C,KAAA32C,EAAAuqE,QAAA,SAAA3qE,GACA2kD,EAAAqyD,QAAAh3G,EAAAK,EAAAL,EAAAU,KAA0BV,EAAAjB,QAG1B0C,EAAAC,QAAAq1C,KAAA+7E,EAAA,SAAA1Q,EAAA3jH,GACA,GAAAs0H,GAAA,QAAAt0H,CACAkmD,GAAAuxD,QAAA6c,GAAuB3W,KAAA,SACvB36G,EAAAC,QAAA0hC,OAAAg/E,EAAA,SAAA7tD,EAAAl0D,GAEA,MADAskD,GAAAqyD,QAAAziD,EAAAl0D,GAAuBk+C,MAAA,UACvBl+C,MAIAskD,EAxCAzlD,OAAAC,eAAApB,EAAA,cACA+D,OAAA,GAGA,IAAAC,GAAAzD,EAAA,GAEAmD,EAAAs2G,EAAAh2G,GAEAy5G,EAAAl9G,EAAA,GAEA8+G,EAAA9+G,EAAA,GAEAs/G,EAAA7F,EAAAqF,EA+BAr/G,GAAA2D,SACAmxH,kBAKA,SAAA70H,EAAAD,GAEAC,EAAAD,SAAkBgB,KAAA,eAAA2kF,QAAA,QAAAsvC,YAAA,8BAAAC,OAAA,oCAAAC,KAAA,uBAAAC,UAAA,0BAAAC,SAAgNC,KAAA,WAAAC,KAAA,kBAAAC,MAAA,uDAAAjsH,KAAA,oDAAAksH,MAAA,sCAAAC,MAAA,uEAAAC,cAAA,qBAAAC,QAAA,oBAAkWC,cAAiB9V,SAAA,SAAA/9G,OAAA,WAAuC8zH,iBAAoBC,aAAA,UAAAC,eAAA,SAAAC,mBAAA,SAAAC,sBAAA,UAAAC,UAAA,SAAAC,KAAA,SAAAC,UAAA,UAAAd,KAAA,UAAAC,MAAA,SAAAc,wBAAA,SAAAC,yBAAA,SAAAC,cAAA,SAAAC,wBAAA,SAAAC,MAAA,SAAAC,QAAA,SAAAC,SAAA,UAAAC,QAAA,SAAAC,yBAAA,SAAAC,mBAAA,UAA6cC,YAAexyG,KAAA,MAAA4kC,IAAA,kDAAoE6tE,QAAA,MAAAC,OAAA,2BAAAN,UAAiEnC,QAAA,oCAA6Cc,MAAS4B,UAAA,qBAAAC,wBAAA,8BAGvyC,Wf0s2BM,SAAUn3H,EAAQD,EAASO,GAEjC,YgBzo9BA,SAAS82H,GAAeh9E,EAAM8J,GAC5B,MAAO9J,GAAKwjB,UAAU1Z,GhB2o9BxBhjD,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,IAMT/D,EAAQ2D,QgB/o9BO0zH,GhBmp9BT,SAAUp3H,EAAQD,EAASO,GAEjC,YiBvp9BA,SAAS+2H,GAAiBj9E,EAAMq0B,EAAIvqB,GAClC,OAAO,EAAAozE,EAAA5zH,SAAiB02C,EAAMq0B,EAAIA,EAAIvqB,GjByp9BxChjD,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,GiB7p9BT,IAAAyzH,GAAAj3H,EAAA,GjBkq9BIg3H,EAEJ,SAAgCtzH,GAAO,MAAOA,IAAOA,EAAIxC,WAAawC,GAAQN,QAASM,IAFvCuzH,EAQhDx3H,GAAQ2D,QiBpq9BO2zH,GjBwq9BT,SAAUr3H,EAAQD,EAASO,GAEjC,YkB1q9BA,SAASk3H,GAAkBp9E,EAAMq9E,EAAYvzE,GAC3C,GAAM+a,GAAK7kB,EAAKW,EACVmkB,EAAK9kB,EAAK2K,EAEV2yE,KAEFrU,EAAOxnC,OAAO4/B,kBACd8H,EAAO1nC,OAAO4/B,iBAClBgc,GAAWxtH,QAAQ,SAAU2a,GAC3By+F,EAAOzlF,KAAKkT,IAAIuyE,EAAMz+F,EAAMm2B,GAC5BwoE,EAAO3lF,KAAKkT,IAAIyyE,EAAM3+F,EAAMmgC,IAM9B,KAAK,GAHC5J,GAAO8jB,EAAK7kB,EAAK4S,MAAQ,EAAIq2D,EAC7B9+D,EAAM2a,EAAK9kB,EAAKogE,OAAS,EAAI+I,EAE1B9iH,EAAI,EAAGA,EAAIg3H,EAAWl1H,OAAQ9B,GAAK,EAAG,CAC7C,GAAMi5D,GAAK+9D,EAAWh3H,GAChB0gF,EAAKs2C,EAAWh3H,EAAIg3H,EAAWl1H,OAAS,EAAI9B,EAAI,EAAI,GACpDm9D,GAAY,EAAA+5D,EAAAj0H,SAAc02C,EAAM8J,GACnCnJ,EAAGI,EAAOue,EAAG3e,EAAGgK,EAAGR,EAAMmV,EAAG3U,IAAKhK,EAAGI,EAAOgmC,EAAGpmC,EAAGgK,EAAGR,EAAM48B,EAAGp8B,GAC5D6Y,IACF85D,EAAc5tH,KAAK8zD,GAIvB,MAAK85D,GAAcn1H,QAKfm1H,EAAcn1H,OAAS,GAEzBm1H,EAAc1vH,KAAK,SAAUnG,EAAG88D,GAC9B,GAAMi5D,GAAM/1H,EAAEk5C,EAAImJ,EAAMnJ,EAClB88E,EAAMh2H,EAAEkjD,EAAIb,EAAMa,EAClB+yE,EAAQl6F,KAAKwqB,KAAKwvE,EAAMA,EAAMC,EAAMA,GAEpCE,EAAMp5D,EAAE5jB,EAAImJ,EAAMnJ,EAClBi9E,EAAMr5D,EAAE5Z,EAAIb,EAAMa,EAClBkzE,EAAQr6F,KAAKwqB,KAAK2vE,EAAMA,EAAMC,EAAMA,EAE1C,OAAQF,GAAQG,GAAU,EAAKH,IAAUG,EAAQ,EAAI,IAGlDP,EAAc,KAlBnB7Y,QAAQ7yD,IAAI,4CAA6C5R,GAClDA,GlBip9BXl5C,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,GkBpr9BT,IAAAo0H,GAAA53H,EAAA,IlByr9BIq3H,EAEJ,SAAgC3zH,GAAO,MAAOA,IAAOA,EAAIxC,WAAawC,GAAQN,QAASM,IAF1Ck0H,EAuD7Cn4H,GAAQ2D,QkB1r9BO8zH,GlB8r9BT,SAAUx3H,EAAQD,EAASO,GAEjC,YmBtv9BA,SAAS09G,GAAe5jE,EAAM8J,GAC5B,GAAMnJ,GAAIX,EAAKW,EACTgK,EAAI3K,EAAK2K,EAITwa,EAAKrb,EAAMnJ,EAAIA,EACfykB,EAAKtb,EAAMa,EAAIA,EACjBriD,EAAI03C,EAAK4S,MAAQ,EACjBrG,EAAIvM,EAAKogE,OAAS,EAElBzqC,SAAIC,QAiBR,OAhBIpyC,MAAKuuB,IAAIqT,GAAM98D,EAAIk7B,KAAKuuB,IAAIoT,GAAM5Y,GAEhC6Y,EAAK,IACP7Y,GAAKA,GAEPopB,EAAY,IAAPvQ,EAAW,EAAI7Y,EAAI4Y,EAAKC,EAC7BwQ,EAAKrpB,IAGD4Y,EAAK,IACP78D,GAAKA,GAEPqtE,EAAKrtE,EACLstE,EAAY,IAAPzQ,EAAW,EAAI78D,EAAI88D,EAAKD,IAGvBxkB,EAAGA,EAAIg1B,EAAIhrB,EAAGA,EAAIirB,GnB6t9B5B9uE,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,IAkCT/D,EAAQ2D,QmB7v9BOs6G,GnBiw9BT,SAAUh+G,EAAQD,EAASO,GAEjC,YAiCA,SAASy5G,GAAuB/1G,GAAO,MAAOA,IAAOA,EAAIxC,WAAawC,GAAQN,QAASM,GA9BvF9C,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,GoBty9BT,IAAAq0H,GAAA73H,EAAA,GpB2y9BI83H,EAAMre,EAAuBoe,GoB1y9BjC3a,EAAAl9G,EAAA,GpB8y9BIi/G,EAAaxF,EAAuByD,GoB7y9BxC6a,EAAA/3H,EAAA,IpBiz9BIg4H,EAAgBve,EAAuBse,GoB/y9B3CE,EAAAj4H,EAAA,IpBmz9BIk4H,EAAcze,EAAuBwe,GoBlz9BzCE,EAAAn4H,EAAA,IpBsz9BIo4H,EAAW3e,EAAuB0e,GoBrz9BtCrZ,EAAA9+G,EAAA,GpByz9BIs/G,EAAS7F,EAAuBqF,GoBxz9BpCS,EAAAv/G,EAAA,GpB8z9BAP,GAAQ2D,SoB3z9BN65C,aACAuiE,mBACA6Y,gBACA/6D,oBACAg7D,iBACA5Y,eACAt6B,oBpBi09BI,SAAU1lF,EAAQD,EAASO,GqBh19BjCN,EAAAD,SACAs1G,MAAA/0G,EAAA,GACAolF,QAAAplF,EAAA,MrBy19BM,SAAUN,EAAQD,GsB519BxB,GAAAqC,EAGAA,GAAA,WACA,MAAAhC,QAGA,KAEAgC,KAAAoe,SAAA,qBAAAq4G,MAAA,QACC,MAAA72H,GAED,gBAAAC,UACAG,EAAAH,QAOAjC,EAAAD,QAAAqC,GtBm29BM,SAAUpC,EAAQD,GuBv39BxBC,EAAAD,QAAA,SAAAC,GAoBA,MAnBAA,GAAA84H,kBACA94H,EAAA+4H,UAAA,aACA/4H,EAAA6oB,SAEA7oB,EAAAsC,WAAAtC,EAAAsC,aACApB,OAAAC,eAAAnB,EAAA,UACAqB,YAAA,EACAC,IAAA,WACA,MAAAtB,GAAAU,KAGAQ,OAAAC,eAAAnB,EAAA,MACAqB,YAAA,EACAC,IAAA,WACA,MAAAtB,GAAAS,KAGAT,EAAA84H,gBAAA,GAEA94H,IvB+39BM,SAAUA,EAAQD,GwBn59BxBC,EAAAD,QAAA,SxB059BM,SAAUC,EAAQD,EAASO,GyBl59BjC,QAAA04H,GAAA52H,GACA,GAAA8yG,IACAjvE,SACAwvE,SAAArzG,EAAA00G,aACAnB,WAAAvzG,EAAAo1G,eACA3B,SAAAzzG,EAAAq1G,cAEA5nC,MAAAopD,EAAA72H,GACAuqE,MAAAusD,EAAA92H,GAKA,OAHAF,GAAA6nC,YAAA3nC,EAAAoB,WACA0xG,EAAApxG,MAAA5B,EAAAohB,MAAAlhB,EAAAoB,UAEA0xG,EAGA,QAAA+jB,GAAA72H,GACA,MAAAF,GAAAkC,IAAAhC,EAAAytE,QAAA,SAAAxtE,GACA,GAAA82H,GAAA/2H,EAAAg4C,KAAA/3C,GACAwrB,EAAAzrB,EAAAyrB,OAAAxrB,GACA+3C,GAAgB/3C,IAOhB,OANAH,GAAA6nC,YAAAovF,KACA/+E,EAAAt2C,MAAAq1H,GAEAj3H,EAAA6nC,YAAAlc,KACAusB,EAAAvsB,UAEAusB,IAIA,QAAA8+E,GAAA92H,GACA,MAAAF,GAAAkC,IAAAhC,EAAAuqE,QAAA,SAAA3qE,GACA,GAAAo3H,GAAAh3H,EAAA2nE,KAAA/nE,GACA+nE,GAAgB1nE,EAAAL,EAAAK,EAAAK,EAAAV,EAAAU,EAOhB,OANAR,GAAA6nC,YAAA/nC,EAAAjB,QACAgpE,EAAAhpE,KAAAiB,EAAAjB,MAEAmB,EAAA6nC,YAAAqvF,KACArvD,EAAAjmE,MAAAs1H,GAEArvD,IAIA,QAAAsvD,GAAAnkB,GACA,GAAA9yG,GAAA,GAAAizG,GAAAH,EAAAjvE,SAAAyxE,SAAAxC,EAAApxG,MAUA,OATA5B,GAAA62C,KAAAm8D,EAAArlC,MAAA,SAAAjrD,GACAxiB,EAAA81G,QAAAtzF,EAAAviB,EAAAuiB,EAAA9gB,OACA8gB,EAAAiJ,QACAzrB,EAAAm2G,UAAA3zF,EAAAviB,EAAAuiB,EAAAiJ,UAGA3rB,EAAA62C,KAAAm8D,EAAAvoC,MAAA,SAAA/nD,GACAxiB,EAAA42G,SAAe32G,EAAAuiB,EAAAviB,EAAAK,EAAAkiB,EAAAliB,EAAA3B,KAAA6jB,EAAA7jB,MAA2C6jB,EAAA9gB,SAE1D1B,EAhEA,GAAAF,GAAA5B,EAAA,GACA+0G,EAAA/0G,EAAA,EAEAN,GAAAD,SACAi5H,QACAK,SzB699BM,SAAUr5H,EAAQD,EAASO,G0Bl+9BjCN,EAAAD,SACAu5H,WAAAh5H,EAAA,IACAs6G,SAAAt6G,EAAA,GACAi5H,YAAAj5H,EAAA,IACAk5H,WAAAl5H,EAAA,IACAm5H,cAAAn5H,EAAA,IACAo5H,UAAAp5H,EAAA,IACA08G,UAAA18G,EAAA,IACAwpH,SAAAxpH,EAAA,IACAq5H,KAAAr5H,EAAA,IACA+7G,OAAA/7G,EAAA,IACAq8G,QAAAr8G,EAAA,M1B0+9BM,SAAUN,EAAQD,EAASO,G2Bj/9BjC,QAAAg5H,GAAAl3H,GAKA,QAAAk6G,GAAAj6G,GACAH,EAAAuG,IAAA8zG,EAAAl6G,KACAk6G,EAAAl6G,IAAA,EACAq6G,EAAA5yG,KAAAzH,GACAH,EAAA62C,KAAA32C,EAAAs2G,WAAAr2G,GAAAi6G,GACAp6G,EAAA62C,KAAA32C,EAAAo2G,aAAAn2G,GAAAi6G,IATA,GAEAI,GAFAH,KACAqd,IAmBA,OARA13H,GAAA62C,KAAA32C,EAAAytE,QAAA,SAAAxtE,GACAq6G,KACAJ,EAAAj6G,GACAq6G,EAAAn6G,QACAq3H,EAAA9vH,KAAA4yG,KAIAkd,EAzBA,GAAA13H,GAAA5B,EAAA,EAEAN,GAAAD,QAAAu5H,G3Boh+BM,SAAUt5H,EAAQD,EAASO,G4Bjh+BjC,QAAAi5H,GAAAn3H,EAAAy3H,EAAAC,GACA,MAAA53H,GAAAiI,UAAA/H,EAAAytE,QAAA,SAAAitC,EAAAz6G,GACAy6G,EAAAz6G,GAAAu4G,EAAAx4G,EAAAC,EAAAw3H,EAAAC,QAPA,GAAAlf,GAAAt6G,EAAA,GACA4B,EAAA5B,EAAA,EAEAN,GAAAD,QAAAw5H,G5Bmi+BM,SAAUv5H,EAAQD,EAASO,G6Bji+BjC,QAAAk5H,GAAAp3H,GACA,MAAAF,GAAA0iC,OAAAy3E,EAAAj6G,GAAA,SAAAs6G,GACA,MAAAA,GAAAn6G,OAAA,OAAAm6G,EAAAn6G,QAAAH,EAAAm3G,QAAAmD,EAAA,GAAAA,EAAA,MAPA,GAAAx6G,GAAA5B,EAAA,GACA+7G,EAAA/7G,EAAA,GAEAN,GAAAD,QAAAy5H,G7Bmj+BM,SAAUx5H,EAAQD,EAASO,G8Bhj+BjC,QAAAm5H,GAAAr3H,EAAAy4G,EAAAC,GACA,MAAAif,GAAA33H,EACAy4G,GAAAG,EACAF,GAAA,SAAAz4G,GAAiD,MAAAD,GAAAs3G,SAAAr3G,KAGjD,QAAA03H,GAAA33H,EAAAy4G,EAAAC,GACA,GAAAI,MACArrC,EAAAztE,EAAAytE,OAkCA,OAhCAA,GAAA5lE,QAAA,SAAA5H,GACA64G,EAAA74G,MACA64G,EAAA74G,OAAqBqlE,SAAA,GACrBmI,EAAA5lE,QAAA,SAAAvH,GACAL,IAAAK,IACAw4G,EAAA74G,GAAAK,IAAyBglE,SAAAmU,OAAA4/B,sBAGzBX,EAAAz4G,GAAA4H,QAAA,SAAA8/D,GACA,GAAArnE,GAAAqnE,EAAA1nE,MAAA0nE,EAAArnE,EAAAqnE,EAAA1nE,EACAvB,EAAA+5G,EAAA9wC,EACAmxC,GAAA74G,GAAAK,IAAuBglE,SAAA5mE,EAAAy6G,YAAAl5G,OAIvBwtE,EAAA5lE,QAAA,SAAAwxC,GACA,GAAAu+E,GAAA9e,EAAAz/D,EACAo0B,GAAA5lE,QAAA,SAAAxJ,GACA,GAAAw5H,GAAA/e,EAAAz6G,EACAovE,GAAA5lE,QAAA,SAAA83C,GACA,GAAAm4E,GAAAD,EAAAx+E,GACA0+E,EAAAH,EAAAj4E,GACAq4E,EAAAH,EAAAl4E,GACAs4E,EAAAH,EAAAxyD,SAAAyyD,EAAAzyD,QACA2yD,GAAAD,EAAA1yD,WACA0yD,EAAA1yD,SAAA2yD,EACAD,EAAA7e,YAAA4e,EAAA5e,mBAMAL,EAhDA,GAAAh5G,GAAA5B,EAAA,EAEAN,GAAAD,QAAA05H,CAEA,IAAAze,GAAA94G,EAAAktC,SAAA,I9B0m+BM,SAAUpvC,EAAQD,EAASO,G+B1m+BjC,QAAAo5H,GAAAt3H,GACA,IACAu6G,EAAAv6G,GACG,MAAAJ,GACH,GAAAA,YAAA26G,GAAAC,eACA,QAEA,MAAA56G,GAEA,SAbA,GAAA26G,GAAAr8G,EAAA,GAEAN,GAAAD,QAAA25H,G/Bio+BM,SAAU15H,EAAQD,EAASO,GgC/n+BjC,QAAA08G,GAAA56G,EAAA61G,GACA,MAAAqE,GAAAl6G,EAAA61G,EAAA,QALA,GAAAqE,GAAAh8G,EAAA,GAEAN,GAAAD,QAAAi9G,GhC8o+BM,SAAUh9G,EAAQD,EAASO,GiC5o+BjC,QAAAwpH,GAAA1nH,EAAA61G,GACA,MAAAqE,GAAAl6G,EAAA61G,EAAA,OALA,GAAAqE,GAAAh8G,EAAA,GAEAN,GAAAD,QAAA+pH,GjC2p+BM,SAAU9pH,EAAQD,EAASO,GkCvp+BjC,QAAAq5H,GAAAv3H,EAAAy3H,GAMA,QAAAxe,GAAAtxC,GACA,GAAArnE,GAAAqnE,EAAA1nE,MAAA0nE,EAAArnE,EAAAqnE,EAAA1nE,EACAi4H,EAAAnf,EAAA96D,SAAA39C,EACA,QAAAiF,KAAA2yH,EAAA,CACA,GAAA7T,GAAAoT,EAAA9vD,EACA08C,GAAA6T,IACAvhB,EAAAr2G,GAAAL,EACA84G,EAAAK,SAAA94G,EAAA+jH,KAZA,GAGApkH,GAHAoD,EAAA,GAAA4vG,GACA0D,KACAoC,EAAA,GAAAC,EAeA,QAAAh5G,EAAA01G,YACA,MAAAryG,EAGAvD,GAAA62C,KAAA32C,EAAAytE,QAAA,SAAAxtE,GACA84G,EAAA32G,IAAAnC,EAAAw5E,OAAA4/B,mBACAh2G,EAAAyyG,QAAA71G,KAIA84G,EAAAK,SAAAp5G,EAAAytE,QAAA,KAGA,KADA,GAAA0qD,IAAA,EACApf,EAAAnxG,OAAA,IAEA,GADA3H,EAAA84G,EAAAO,YACAx5G,EAAAuG,IAAAswG,EAAA12G,GACAoD,EAAAuzG,QAAA32G,EAAA02G,EAAA12G,QACK,IAAAk4H,EACL,SAAA9wF,OAAA,iCAAArnC,EAEAm4H,IAAA,EAGAn4H,EAAAw3G,UAAAv3G,GAAA4H,QAAAoxG,GAGA,MAAA51G,GAlDA,GAAAvD,GAAA5B,EAAA,GACA+0G,EAAA/0G,EAAA,GACA86G,EAAA96G,EAAA,EAEAN,GAAAD,QAAA45H,GlCmt+BM,SAAU35H,EAAQD,EAASO,GAEjC,YA2BA,SAASy5G,GAAuB/1G,GAAO,MAAOA,IAAOA,EAAIxC,WAAawC,GAAQN,QAASM,GAxBvF9C,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,GmC7t+BT,IAAA02H,GAAAl6H,EAAA,InCku+BIm6H,EAAkB1gB,EAAuBygB,GmCju+B7CE,EAAAp6H,EAAA,InCqu+BIq6H,EAAoB5gB,EAAuB2gB,GmCpu+B/CnD,EAAAj3H,EAAA,GnCwu+BIg3H,EAAqBvd,EAAuBwd,GmCvu+BhDqD,EAAAt6H,EAAA,InC2u+BIu6H,EAAqB9gB,EAAuB6gB,GmC1u+BhDE,EAAAx6H,EAAA,InC8u+BIy6H,EAAkBhhB,EAAuB+gB,EAI7C/6H,GAAQ2D,SmC/u+BN02C,eACA6vB,iBACA+wD,kBACAngE,kBACAxV,iBnCqv+BI,SAAUrlD,EAAQD,EAASO,GAEjC,YoC9v+BA,SAAS26H,GAAevhE,EAAIynB,EAAIriB,EAAIo8D,GAMlC,GAAMl7D,GAAKmhB,EAAGp8B,EAAI2U,EAAG3U,EACf+e,EAAKpK,EAAG3e,EAAIomC,EAAGpmC,EACfujB,EAAM6iB,EAAGpmC,EAAI2e,EAAG3U,EAAM2U,EAAG3e,EAAIomC,EAAGp8B,EAGhCo2E,EAAOn7D,EAAKlB,EAAG/jB,EAAM+oB,EAAKhF,EAAG/Z,EAAKuZ,EAClC88D,EAAOp7D,EAAKk7D,EAAGngF,EAAM+oB,EAAKo3D,EAAGn2E,EAAKuZ,CAIxC,IAAY,IAAP68D,GAAqB,IAAPC,IAAaC,EAASF,EAAIC,GAA7C,CAKA,GAAME,GAAKJ,EAAGn2E,EAAI+Z,EAAG/Z,EACfw2E,EAAKz8D,EAAG/jB,EAAImgF,EAAGngF,EACfwjB,EAAM28D,EAAGngF,EAAI+jB,EAAG/Z,EAAM+Z,EAAG/jB,EAAImgF,EAAGn2E,EAGhC8uB,EAAMynD,EAAK5hE,EAAG3e,EAAMwgF,EAAK7hE,EAAG3U,EAAKwZ,EACjCi9D,EAAMF,EAAKn6C,EAAGpmC,EAAMwgF,EAAKp6C,EAAGp8B,EAAKwZ,CAKvC,IAAY,IAAPsV,GAAqB,IAAP2nD,IAAcH,EAASxnD,EAAI2nD,GAA9C,CAKA,GAAMC,GAASz7D,EAAKu7D,EAAOD,EAAKx3D,CAChC,IAAc,IAAV23D,EAAJ,CAIA,GAAMv1H,GAAS03B,KAAKuuB,IAAIsvE,EAAQ,GAK5BC,EAAO53D,EAAKvF,EAAOg9D,EAAKj9D,EACtBvjB,EAAK2gF,EAAM,GAAOA,EAAMx1H,GAAUu1H,GAAWC,EAAMx1H,GAAUu1H,CAEnEC,GAAOJ,EAAKh9D,EAAO0B,EAAKzB,CAGxB,QAASxjB,IAAGgK,EAFD22E,EAAM,GAAOA,EAAMx1H,GAAUu1H,GAAWC,EAAMx1H,GAAUu1H,MAKrE,QAASJ,GAAUxnD,EAAI2nD,GACrB,MAAO3nD,GAAK2nD,EAAK,EpCws+BnBt6H,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,IAkET/D,EAAQ2D,QoCxw+BOu3H,GpC4w+BT,SAAUj7H,EAAQD,EAASO,GAEjC,YAiDA,SAASy5G,GAAuB/1G,GAAO,MAAOA,IAAOA,EAAIxC,WAAawC,GAAQN,QAASM,GqCj3+BvF,QAAS40H,KACP,GAAI+C,aACAC,YACAC,YACAC,YACAC,YACAC,YAEEjgG,EAAK,SAAUgoB,EAAK3hD,GACxB65H,EAAgB75H,EAEhB,IAAM85H,GAAcC,EAAoBp4E,EAAK,UACvCq4E,EAAgBD,EAAoBD,EAAa,YACjDG,EAAiBF,EAAoBD,EAAa,aAClDI,EAAaT,EAAkBM,EAAoBD,EAAa,cAAe95H,GAC/EytE,EAAQ8rD,EAAaQ,EAAoBD,EAAa,SAAU95H,EAAG25H,IAEzE,EAAA1D,EAAA1yB,QAAOvjG,IAEP,EAAAm6H,EAAA74H,SAAcmsE,EAAOztE,IACrB,EAAAo6H,EAAA94H,SAAmB44H,EAAYl6H,GAC/B05H,EAAiBO,EAAgBj6H,EAAG45H,EAEpC,IAAMS,GAAWb,EAAgBQ,EAAeh6H,IAChD,EAAAs6H,EAAAh5H,SAAiB+4H,EAAUr6H,GAE3Bu6H,EAAiBv6H,GAmDnB,OAhDA25B,GAAG6gG,YAAc,SAAU94H,GACzB,MAAK61B,WAAUp3B,QAGfo5H,EAAe73H,EACRi4B,GAHE4/F,GAMX5/F,EAAG8gG,eAAiB,SAAU/4H,GAC5B,MAAK61B,WAAUp3B,QAGfq5H,EAAkB93H,EACXi4B,GAHE6/F,GAMX7/F,EAAG+gG,iBAAmB,SAAUh5H,GAC9B,MAAK61B,WAAUp3B,QAGfs5H,EAAoB/3H,EACbi4B,GAHE8/F,GAMX9/F,EAAGghG,gBAAkB,SAAUj5H,GAC7B,MAAK61B,WAAUp3B,QAGfu5H,EAAmBh4H,EACZi4B,GAHE+/F,GAMX//F,EAAGihG,OAAS,SAAUl5H,GACpB,MAAK61B,WAAUp3B,QAGfw5H,EAAUj4H,EACHi4B,GAHEggG,GAMXhgG,EAAGkhG,OAAS,SAAUn5H,GACpB,MAAK61B,WAAUp3B,QAGfy5H,EAAUl4H,EACHi4B,GAHEigG,GAMJjgG,EAkBT,QAASkgG,GAAiB75H,GACxBA,EAAEytE,QAAQ5lE,QAAQ,SAAU5H,GAC1B,GAAM+3C,GAAOh4C,EAAEg4C,KAAK/3C,EACfoB,GAAAC,QAAE+E,IAAI2xC,EAAM,UAAah4C,EAAEE,SAASD,GAAGE,SAAU63C,EAAKu9D,MAAQt1G,GAE/DoB,EAAAC,QAAE+E,IAAI2xC,EAAM,aACd32C,EAAAC,QAAEwtC,SAASkJ,GACT8iF,YAAa9iF,EAAK+iF,SAClBC,aAAchjF,EAAK+iF,WAInB15H,EAAAC,QAAE+E,IAAI2xC,EAAM,aACd32C,EAAAC,QAAEwtC,SAASkJ,GACTijF,WAAYjjF,EAAKkjF,SACjBC,cAAenjF,EAAKkjF,WAIpB75H,EAAAC,QAAE+E,IAAI2xC,EAAM,YACd32C,EAAAC,QAAEwtC,SAASkJ,GACT8iF,YAAa9iF,EAAKqK,QAClB24E,aAAchjF,EAAKqK,QACnB44E,WAAYjjF,EAAKqK,QACjB84E,cAAenjF,EAAKqK,UAIxBhhD,EAAAC,QAAEwtC,SAASkJ,EAAMojF,GAEjB/5H,EAAAC,QAAEq1C,MAAM,cAAe,eAAgB,aAAc,iBAAkB,SAAU0C,GAC/ErB,EAAKqB,GAAKogC,OAAOzhC,EAAKqB,MAIpBh4C,EAAAC,QAAE+E,IAAI2xC,EAAM,WAAYA,EAAKqjF,WAAarjF,EAAK4S,OAC/CvpD,EAAAC,QAAE+E,IAAI2xC,EAAM,YAAaA,EAAKsjF,YAActjF,EAAKogE,UAGvDp4G,EAAEuqE,QAAQ1iE,QAAQ,SAAUjI,GAC1B,GAAM+nE,GAAO3nE,EAAE2nE,KAAK/nE,EACfyB,GAAAC,QAAE+E,IAAIshE,EAAM,WAAYA,EAAK4tC,MAAQ,IAC1Cl0G,EAAAC,QAAEwtC,SAAS64B,EAAM4zD,KAIrB,QAAShB,GAAkBv6H,GACzBqB,EAAAC,QAAEq1C,KAAK32C,EAAEytE,QAAS,SAAUxtE,GAC1B,GAAM+3C,GAAOh4C,EAAEg4C,KAAK/3C,EAGhBoB,GAAAC,QAAE+E,IAAI2xC,EAAM,cACdA,EAAK4S,MAAQ5S,EAAKqjF,iBAEXrjF,GAAK4S,MAGVvpD,EAAAC,QAAE+E,IAAI2xC,EAAM,eACdA,EAAKogE,OAASpgE,EAAKsjF,kBAEZtjF,GAAKogE,aAGPpgE,GAAKqjF,iBACLrjF,GAAKsjF,cAIhB,QAASvB,GAAqBt8H,EAAMkB,GAClC,GAAIwC,GAAY1D,EAAK2jD,OAAO,KAAOziD,EAInC,OAHIwC,GAAU8jF,UACZ9jF,EAAY1D,EAAKykD,OAAO,KAAKphD,KAAK,QAASnC,IAEtCwC,ErC2p+BTrC,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,GqCl1+BT,IAAAC,GAAAzD,EAAA,GrCu1+BImD,EAAWs2G,EAAuBh2G,GqCt1+BtCs0H,EAAA/3H,EAAA,IAEAs9H,EAAAt9H,EAAA,IrC01+BIi8H,EAAkBxiB,EAAuB6jB,GqCz1+B7CC,EAAAv9H,EAAA,IrC61+BIk8H,EAAuBziB,EAAuB8jB,GqC51+BlDC,EAAAx9H,EAAA,IrCg2+BIo8H,EAAqB3iB,EAAuB+jB,GqC/1+BhDC,EAAAz9H,EAAA,IrCm2+BI09H,EAAgBjkB,EAAuBgkB,GqCl2+B3CE,EAAA39H,EAAA,IrCs2+BI49H,EAAmBnkB,EAAuBkkB,GqCr2+B9CE,EAAA79H,EAAA,IrCy2+BI89H,EAAqBrkB,EAAuBokB,GqCx2+BhDE,EAAA/9H,EAAA,IrC42+BIg+H,EAAoBvkB,EAAuBskB,GqC32+B/CE,EAAAj+H,EAAA,IrC+2+BIk+H,EAAWzkB,EAAuBwkB,GqC92+BtCE,EAAAn+H,EAAA,IrCk3+BIo+H,EAAW3kB,EAAuB0kB,GqC/x+BhCjB,GACJN,YAAa,GACbE,aAAc,GACdC,WAAY,GACZE,cAAe,GACf9uD,GAAI,EACJC,GAAI,EACJiwD,MAAO,QAGHhB,GACJiB,UAAW,SACXC,gBAAiB,SrC28+BnB9+H,GAAQ2D,QqC53+BOk1H,GrCg4+BT,SAAU54H,EAAQD,EAASO,GAEjC,YAeA,SAASy5G,GAAuB/1G,GAAO,MAAOA,IAAOA,EAAIxC,WAAawC,GAAQN,QAASM,GsCtk/BvF,QAAS86H,GAAev7H,EAAWnB,GAGjC,QAAS0jE,GAAWzjE,GAClB,GAAM+3C,GAAOh4C,EAAEg4C,KAAK/3C,EACpB,OAAO,aAAe+3C,EAAKW,EAAI,IAAMX,EAAK2K,EAAI,IAJhCxhD,EAAUqhC,OAAO,WAAc,OAAQwzF,EAAA10H,QAAG8/C,OAAOpjD,MAAM8oF,QAAQ,YAOvEhmF,KAAK,YAAa4iE,GAE1B85C,EAAAl8G,QAAKJ,gBAAgBC,EAAWnB,GAC7Bm+C,MAAM,UAAW,GACjBr9C,KAAK,YAAa4iE,GtC8i/BvB5kE,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,GsC/j/BT,IAAAq0H,GAAA73H,EAAA,GtCok/BI83H,EAAMre,EAAuBoe,GsClk/BjC/Y,EAAA9+G,EAAA,GtCsk/BIs/G,EAAS7F,EAAuBqF,EAmBpCr/G,GAAQ2D,QsCxk/BOo7H,GtC4k/BT,SAAU9+H,EAAQD,EAASO,GAEjC,YAmBA,SAASy5G,GAAuB/1G,GAAO,MAAOA,IAAOA,EAAIxC,WAAawC,GAAQN,QAASM,GuC/m/BvF,QAAS+6H,GAAoBx7H,EAAWnB,GAGtC,QAAS0jE,GAAW9jE,GAClB,GAAM+nE,GAAO3nE,EAAE2nE,KAAK/nE,EACpB,OAAOyB,GAAAC,QAAE+E,IAAIshE,EAAM,KAAO,aAAeA,EAAKhvB,EAAI,IAAMgvB,EAAKhlB,EAAI,IAAM,GAJzDxhD,EAAUqhC,OAAO,WAAc,OAAQwzF,EAAA10H,QAAG8/C,OAAOpjD,MAAM8oF,QAAQ,YAOvEhmF,KAAK,YAAa4iE,GAE1B85C,EAAAl8G,QAAKJ,gBAAgBC,EAAWnB,GAC7Bm+C,MAAM,UAAW,GACjBr9C,KAAK,YAAa4iE,GvCml/BvB5kE,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,GuCrm/BT,IAAAq0H,GAAA73H,EAAA,GvC0m/BI83H,EAAMre,EAAuBoe,GuCzm/BjCp0H,EAAAzD,EAAA,GvC6m/BImD,EAAWs2G,EAAuBh2G,GuC3m/BtCq7G,EAAA9+G,EAAA,GvC+m/BIs/G,EAAS7F,EAAuBqF,EAmBpCr/G,GAAQ2D,QuCjn/BOq7H,GvCqn/BT,SAAU/+H,EAAQD,EAASO,GAEjC,YAeA,SAASy5G,GAAuB/1G,GAAO,MAAOA,IAAOA,EAAIxC,WAAawC,GAAQN,QAASM,GwCvp/BvF,QAASg7H,GAAkBz7H,EAAWnB,GAGpC,QAAS0jE,GAAWzjE,GAClB,GAAM+3C,GAAOh4C,EAAEg4C,KAAK/3C,EACpB,OAAO,aAAe+3C,EAAKW,EAAI,IAAMX,EAAK2K,EAAI,IAJhD,GAAMk6E,GAAU17H,EAAUqhC,OAAO,WAAc,OAAQwzF,EAAA10H,QAAG8/C,OAAOpjD,MAAM8oF,QAAQ,WAO/E+1C,GAAQ/7H,KAAK,YAAa4iE,GAE1B85C,EAAAl8G,QAAKJ,gBAAgBC,EAAWnB,GAC3Bm+C,MAAM,UAAW,GACjBr9C,KAAK,YAAa4iE,GAEvB85C,EAAAl8G,QAAKJ,gBAAgB27H,EAAQt2C,UAAU,QAASvmF,GAC3Cc,KAAK,QAAS,SAAUb,GAAK,MAAOD,GAAEg4C,KAAK/3C,GAAG2qD,QAC9C9pD,KAAK,SAAU,SAAUb,GAAK,MAAOD,GAAEg4C,KAAK/3C,GAAGm4G,SAC/Ct3G,KAAK,IAAK,SAAUb,GAEnB,OADaD,EAAEg4C,KAAK/3C,GACP2qD,MAAQ,IAEtB9pD,KAAK,IAAK,SAAUb,GAEnB,OADaD,EAAEg4C,KAAK/3C,GACPm4G,OAAS,IxCon/B9Bt5G,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,GwC/o/BT,IAAAq0H,GAAA73H,EAAA,GxCop/BI83H,EAAMre,EAAuBoe,GwCnp/BjC/Y,EAAA9+G,EAAA,GxCup/BIs/G,EAAS7F,EAAuBqF,EA+BpCr/G,GAAQ2D,QwCzp/BOs7H,GxC6p/BT,SAAUh/H,EAAQD,EAASO,GAEjC,YAuBA,SAASy5G,GAAuB/1G,GAAO,MAAOA,IAAOA,EAAIxC,WAAawC,GAAQN,QAASM,GyC9s/BvF,QAAS44H,GAAar5H,EAAWnB,EAAG46H,GAClC,GAAMvP,GAAcrrH,EAAEytE,QAAQjrC,OAAO,SAAUviC,GAAK,OAAQu9G,EAAAl8G,QAAKvB,WAAWC,EAAGC,KACzE68H,EAAW37H,EAAUolF,UAAU,UAClCh/E,KAAK8jH,EAAa,SAAUprH,GAAK,MAAOA,KACxC6mF,QAAQ,UAAU,EA2CrB,OAzCAg2C,GAASv2C,UAAU,KAAKnmD,SACxB08F,EAAS/8E,QACNmC,OAAO,KACLphD,KAAK,QAAS,QACdq9C,MAAM,UAAW,GACtB2+E,EAASnmF,KAAK,SAAU12C,GACtB,GAAM+3C,GAAOh4C,EAAEg4C,KAAK/3C,GACd88H,EAAY/G,EAAA10H,QAAG8/C,OAAOpjD,MACtBg/H,EAAaD,EAAU76E,OAAO,KAAKphD,KAAK,QAAS,SACjDm8H,GAAW,EAAAC,EAAA57H,SAAS07H,EAAYhlF,GAChCukF,EAAQ3B,EAAO5iF,EAAKukF,OACpBtvD,EAAO5rE,EAAAC,QAAEytC,KAAKkuF,EAASjlF,OAAOmgE,UAAW,QAAS,SAExDngE,GAAKmlF,KAAOn/H,KAERg6C,EAAK5J,IAAM2uF,EAAUj8H,KAAK,KAAMk3C,EAAK5J,IACrC4J,EAAKolF,SAAWJ,EAAWl8H,KAAK,KAAMk3C,EAAKolF,SAC/C5f,EAAAl8G,QAAKP,WAAWg8H,EAAW/kF,EAAA,OACxB+kF,EAAUj2C,QAAQ,UAAY,UAAY,IAAM,QAE/CzlF,EAAAC,QAAE+E,IAAI2xC,EAAM,WAAYi1B,EAAKriB,MAAQ5S,EAAK4S,OAC1CvpD,EAAAC,QAAE+E,IAAI2xC,EAAM,YAAai1B,EAAKmrC,OAASpgE,EAAKogE,QAEhDnrC,EAAKriB,OAAS5S,EAAK8iF,YAAc9iF,EAAKgjF,aACtC/tD,EAAKmrC,QAAUpgE,EAAKijF,WAAajjF,EAAKmjF,cACtC6B,EAAWl8H,KAAK,YAAa,cACzBk3C,EAAK8iF,YAAc9iF,EAAKgjF,cAAgB,EAAK,KAC7ChjF,EAAKijF,WAAajjF,EAAKmjF,eAAiB,EAAK,IAEjD,IAAMkC,GAAWd,EAAMvG,EAAA10H,QAAG8/C,OAAOpjD,MAAOivE,EAAMj1B,EAC9CwlE,GAAAl8G,QAAKX,WAAW08H,EAAUrlF,EAAKmG,MAE/B,IAAMm/E,GAAYD,EAASrlF,OAAOmgE,SAClCngE,GAAK4S,MAAQ0yE,EAAU1yE,MACvB5S,EAAKogE,OAASklB,EAAUllB,SAG1BoF,EAAAl8G,QAAKJ,gBAAgB47H,EAASh1C,OAAQ9nF,GACnCm+C,MAAM,UAAW,GACjB/d,SAEI08F,EzC2o/BTh+H,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,GyCjs/BT,IAAAC,GAAAzD,EAAA,GzCss/BImD,EAAWs2G,EAAuBh2G,GyCrs/BtCo0H,EAAA73H,EAAA,GzCys/BI83H,EAAMre,EAAuBoe,GyCvs/BjCwH,EAAAr/H,EAAA,GzC2s/BIg/H,EAAavlB,EAAuB4lB,GyC1s/BxCvgB,EAAA9+G,EAAA,GzC8s/BIs/G,EAAS7F,EAAuBqF,EAwDpCr/G,GAAQ2D,QyClt/BOk5H,GzCst/BT,SAAU58H,EAAQD,EAASO,GAEjC,Y0C3w/BA,SAASs/H,GAAc//H,EAAMu6C,GAI3B,IAAK,GAHCylF,GAAUhgI,EAAKykD,OAAO,QAEtBgX,EAAQwkE,EAAuB1lF,EAAKu9D,OAAOlxG,MAAM,MAC9ChG,EAAI,EAAGA,EAAI66D,EAAM/4D,OAAQ9B,GAAK,EACrCo/H,EACGv7E,OAAO,SACLphD,KAAK,YAAa,YAClBA,KAAK,KAAM,OACXA,KAAK,IAAK,KACVomF,KAAKhuB,EAAM76D,GAKlB,OAFAm/G,GAAAl8G,QAAKX,WAAW88H,EAASzlF,EAAK2lF,YAEvBF,EAGT,QAASC,GAAwBx2C,GAI/B,IAAK,GAHD02C,GAAU,GACVC,GAAU,EACVC,EAAK,KACAz/H,EAAI,EAAGA,EAAI6oF,EAAK/mF,OAAQ9B,GAAK,EAEpC,GADAy/H,EAAK52C,EAAK7oF,GACNw/H,EAAS,CACX,OAAQC,GACN,IAAK,IAAKF,GAAW,IAAM,MAC3B,SAASA,GAAWE,EAEtBD,GAAU,MACM,OAAPC,EACTD,GAAU,EAEVD,GAAWE,CAGf,OAAOF,G1C0u/BT9+H,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,G0Cpx/BT,IAAAs7G,GAAA9+G,EAAA,G1Cyx/BIs/G,EAEJ,SAAgC57G,GAAO,MAAOA,IAAOA,EAAIxC,WAAawC,GAAQN,QAASM,IAFnDo7G,EA2CpCr/G,GAAQ2D,Q0Cxx/BOk8H,G1C4x/BT,SAAU5/H,EAAQD,EAASO,GAEjC,Y2Cx0/BA,SAAS6/H,GAActgI,EAAMu6C,GAC3B,GAAMgmF,GAAKvgI,EACRykD,OAAO,iBACLphD,KAAK,QAAS,UAEbm9H,EAAMD,EACT97E,OAAO,YACV+7E,GAAIn9H,KAAK,QAAS,+BAElB,IAAMy0G,GAAQv9D,EAAKu9D,KACnB,iBAAeA,EAAf,YAAA2oB,EAAe3oB,IACb,IAAK,WACH0oB,EAAIx0D,OAAO8rC,EACX,MACF,KAAK,SAEH0oB,EAAIx0D,OAAO,WAAc,MAAO8rC,IAChC,MACF,SAAS0oB,EAAI92C,KAAKouB,GAGpBiI,EAAAl8G,QAAKX,WAAWs9H,EAAKjmF,EAAK2lF,YAC1BM,EAAI9/E,MAAM,UAAW,gBAErB8/E,EAAI9/E,MAAM,cAAe,SAEzB,IAAMggF,GAASF,EAAI,GAAG,GAAG/6E,uBAKzB,OAJA86E,GACGl9H,KAAK,QAASq9H,EAAOvzE,OACrB9pD,KAAK,SAAUq9H,EAAO/lB,QAElB4lB,E3C4y/BTl/H,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,GAGT,IAAIw8H,GAA4B,kBAAX3uF,SAAoD,gBAApBA,QAAOjoC,SAAwB,SAAU1F,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAX2tC,SAAyB3tC,EAAIkyB,cAAgByb,QAAU3tC,IAAQ2tC,OAAOhwC,UAAY,eAAkBqC,I2Cj1/BtQo7G,EAAA9+G,EAAA,G3Cq1/BIs/G,EAEJ,SAAgC57G,GAAO,MAAOA,IAAOA,EAAIxC,WAAawC,GAAQN,QAASM,IAFnDo7G,EAoCpCr/G,GAAQ2D,Q2Cr1/BOy8H,G3Cy1/BT,SAAUngI,EAAQD,EAASO,GAEjC,Y4C73/BA,SAASkgI,GAAa3gI,EAAMu6C,GAC1B,GAAMylF,GAAUhgI,CAMhB,OAJAggI,GAAQzlF,OAAOqvC,YAAYrvC,EAAKu9D,OAEhCiI,EAAAl8G,QAAKX,WAAW88H,EAASzlF,EAAK2lF,YAEvBF,E5Cy3/BT3+H,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,G4Cn4/BT,IAAAs7G,GAAA9+G,EAAA,G5Cw4/BIs/G,EAEJ,SAAgC57G,GAAO,MAAOA,IAAOA,EAAIxC,WAAawC,GAAQN,QAASM,IAFnDo7G,EAcpCr/G,GAAQ2D,Q4C14/BO88H,G5C84/BT,SAAUxgI,EAAQD,EAASO,GAEjC,YAmBA,SAASy5G,GAAuB/1G,GAAO,MAAOA,IAAOA,EAAIxC,WAAawC,GAAQN,QAASM,G6C16/BvF,QAAS64H,GAAgBt5H,EAAWnB,GAClC,GAAMq6H,GAAWr6H,EAAEytE,QAAQjrC,OAAO,SAAUviC,GAAK,MAAOu9G,GAAAl8G,QAAKvB,WAAWC,EAAGC,KACrEo+H,EAAcl9H,EAAUolF,UAAU,aACrCh/E,KAAK8yH,EAAU,SAAUp6H,GAAK,MAAOA,IAiCxC,OA/BAo+H,GAAY93C,UAAU,KAAKnmD,SAC3Bi+F,EAAYt+E,QACTmC,OAAO,KACLphD,KAAK,QAAS,WACdA,KAAK,KAAM,SAAUb,GAEpB,MADaD,GAAEg4C,KAAK/3C,GACRmuC,KAEb+P,MAAM,UAAW,GAEtBq/D,EAAAl8G,QAAKJ,gBAAgBm9H,EAAar+H,GAC/Bm+C,MAAM,UAAW,GAEpBkgF,EAAY1nF,KAAK,SAAU12C,GACzB,GAAM+3C,GAAOh4C,EAAEg4C,KAAK/3C,GACd88H,EAAY/G,EAAA10H,QAAG8/C,OAAOpjD,KAC5Bg4H,GAAA10H,QAAG8/C,OAAOpjD,MAAMkkD,OAAO,OACvB,IAAM86E,GAAaD,EAAU76E,OAAO,KAAKphD,KAAK,QAAS,UACvD,EAAAo8H,EAAA57H,SAAS07H,EAAYhlF,EAAMA,EAAKsmF,mBAGlCD,EAAY93C,UAAU,QAAQ5vC,KAAK,SAAUl4C,GAC3C,GAAMu5C,GAAOh4C,EAAEg4C,KAAKv5C,GACd8/H,EAAavI,EAAA10H,QAAG8/C,OAAOpjD,KAC7Bw/G,GAAAl8G,QAAKX,WAAW49H,EAAYvmF,EAAKmG,SAGnCq/D,EAAAl8G,QAAKJ,gBAAgBm9H,EAAYv2C,OAAQ9nF,GACtCm+C,MAAM,UAAW,GACjB/d,SAEIi+F,E7Cs3/BTv/H,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,G6Ch6/BT,IAAAq0H,GAAA73H,EAAA,G7Cq6/BI83H,EAAMre,EAAuBoe,G6Cn6/BjC/Y,EAAA9+G,EAAA,G7Cu6/BIs/G,EAAS7F,EAAuBqF,G6Ct6/BpCugB,EAAAr/H,EAAA,G7C06/BIg/H,EAAavlB,EAAuB4lB,EAuCxC5/H,GAAQ2D,Q6Cx6/BOm5H,G7C46/BT,SAAU78H,EAAQD,EAASO,GAEjC,YAuBA,SAASy5G,GAAuB/1G,GAAO,MAAOA,IAAOA,EAAIxC,WAAawC,GAAQN,QAASM,G8C3+/BvF,QAAS84H,GAAkBv5H,EAAWnB,GACpC,GAAMw+H,GAAgBr9H,EAAUolF,UAAU,eACvCh/E,KAAKvH,EAAEuqE,QAAS,SAAU3qE,GAAK,MAAO49G,GAAAl8G,QAAKlB,SAASR,KACpDknF,QAAQ,UAAU,EAqBrB,OAnBA03C,GAAcj4C,UAAU,KAAKnmD,SAC7Bo+F,EAAcz+E,QACXmC,OAAO,KACL4kC,QAAQ,aAAa,GACrB3oC,MAAM,UAAW,GACtBqgF,EAAc7nF,KAAK,SAAU/2C,GAC3B,GAAM+nE,GAAO3nE,EAAE2nE,KAAK/nE,GACd21G,GAAQ,EAAA2nB,EAAA57H,SAAS00H,EAAA10H,QAAG8/C,OAAOpjD,MAAOgC,EAAE2nE,KAAK/nE,GAAI,EAAG,GAAGknF,QAAQ,SAAS,GACpE7Z,EAAOsoC,EAAMv9D,OAAOmgE,SAEtBxwC,GAAKy1D,SAAW7nB,EAAMz0G,KAAK,KAAM6mE,EAAKy1D,SACrC/7H,EAAAC,QAAE+E,IAAIshE,EAAM,WAAYA,EAAK/c,MAAQqiB,EAAKriB,OAC1CvpD,EAAAC,QAAE+E,IAAIshE,EAAM,YAAaA,EAAKywC,OAASnrC,EAAKmrC,UAGnDoF,EAAAl8G,QAAKJ,gBAAgBs9H,EAAc12C,OAAQ9nF,GACxCm+C,MAAM,UAAW,GACjB/d,SAEIo+F,E9C+7/BT1/H,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,G8C99/BT,IAAAq0H,GAAA73H,EAAA,G9Cm+/BI83H,EAAMre,EAAuBoe,G8Cl+/BjCp0H,EAAAzD,EAAA,G9Cs+/BImD,EAAWs2G,EAAuBh2G,G8Cp+/BtC47H,EAAAr/H,EAAA,G9Cw+/BIg/H,EAAavlB,EAAuB4lB,G8Cv+/BxCvgB,EAAA9+G,EAAA,G9C2+/BIs/G,EAAS7F,EAAuBqF,EAgCpCr/G,GAAQ2D,Q8C9+/BOo5H,G9Ck//BT,SAAU98H,EAAQD,EAASO,GAEjC,YAuBA,SAASy5G,GAAuB/1G,GAAO,MAAOA,IAAOA,EAAIxC,WAAawC,GAAQN,QAASM,G+CtigCvF,QAAS+4H,GAAiBx5H,EAAWnB,EAAG66H,GACtC,GAAM4D,GAAWt9H,EAAUolF,UAAU,cAClCh/E,KAAKvH,EAAEuqE,QAAS,SAAU3qE,GAAK,MAAO49G,GAAAl8G,QAAKlB,SAASR,KACpDknF,QAAQ,UAAU,EA+CrB,OA7CA/mC,GAAM0+E,EAAUz+H,GAChB8nF,EAAK22C,EAAUz+H,GAEfw9G,EAAAl8G,QAAKJ,gBAAgBu9H,EAAUz+H,GAC5Bm+C,MAAM,UAAW,GAGpBsgF,EAAS9nF,KAAK,SAAU/2C,GACtB,GAAM8+H,GAAU1I,EAAA10H,QAAG8/C,OAAOpjD,MACpB2pE,EAAO3nE,EAAE2nE,KAAK/nE,EACpB+nE,GAAKw1D,KAAOn/H,KAER2pE,EAAKv5B,IACPswF,EAAQ59H,KAAK,KAAM6mE,EAAKv5B,IAG1BovE,EAAAl8G,QAAKP,WAAW29H,EAAS/2D,EAAA,OACtB+2D,EAAQ53C,QAAQ,UAAY,UAAY,IAAM,cAGnD23C,EAASl4C,UAAU,aAChB5vC,KAAK,SAAU/2C,GACd,GAAM+nE,GAAO3nE,EAAE2nE,KAAK/nE,EACpB+nE,GAAKg3D,YAAct9H,EAAAC,QAAE4sC,SAAS,YAE9B,IAAMwwF,GAAU1I,EAAA10H,QAAG8/C,OAAOpjD,MACvB8C,KAAK,aAAc,WAClB,MAAO,QAAU6mE,EAAKg3D,YAAc,MAErCxgF,MAAM,OAAQ,OAEjBq/D,GAAAl8G,QAAKJ,gBAAgBw9H,EAAS1+H,GAC3Bc,KAAK,IAAK,SAAUlB,GAAK,MAAOg/H,GAAW5+H,EAAGJ,KAEjD49G,EAAAl8G,QAAKX,WAAW+9H,EAAS/2D,EAAKxpB,SAGlCsgF,EAASl4C,UAAU,UAAUnmD,SAC7Bq+F,EAASl4C,UAAU,QAChB5vC,KAAK,SAAU/2C,GACd,GAAM+nE,GAAO3nE,EAAE2nE,KAAK/nE,IAEpB48H,EADkB3B,EAAOlzD,EAAK60D,YACpBxG,EAAA10H,QAAG8/C,OAAOpjD,MAAO2pE,EAAKg3D,YAAah3D,EAAM,eAGhD82D,EAGT,QAASG,GAAY5+H,EAAGJ,GACtB,GAAM+nE,GAAO3nE,EAAE2nE,KAAK/nE,GACdkhC,EAAO9gC,EAAEg4C,KAAKp4C,EAAEK,GAChB0/B,EAAO3/B,EAAEg4C,KAAKp4C,EAAEU,GAChBm3D,EAASkQ,EAAKlQ,OAAO7jC,MAAM,EAAG+zC,EAAKlQ,OAAOt3D,OAAS,EAIzD,OAHAs3D,GAAOiR,SAAQ,EAAA2vD,EAAA/2H,SAAcw/B,EAAM22B,EAAO,KAC1CA,EAAO/vD,MAAK,EAAA2wH,EAAA/2H,SAAcq+B,EAAM83B,EAAOA,EAAOt3D,OAAS,KAEhD0+H,EAAWl3D,EAAMlQ,GAG1B,QAASonE,GAAYl3D,EAAMlQ,GACzB,GAAMQ,GAAO+9D,EAAA10H,QAAGqgD,IAAIsW,OACjBtf,EAAE,SAAUj6C,GAAK,MAAOA,GAAEi6C,IAC1BgK,EAAE,SAAUjkD,GAAK,MAAOA,GAAEikD,GAU7B,OARIthD,GAAAC,QAAE+E,IAAIshE,EAAM,oBACd1P,EAAK1sB,YAAYo8B,EAAK80D,iBAGpBp7H,EAAAC,QAAE+E,IAAIshE,EAAM,gBACd1P,EAAK6lB,QAAQrE,OAAO9R,EAAKm3D,cAGpB7mE,EAAKR,GAGd,QAASsnE,GAAW5B,GAClB,GAAMlwD,GAAOkwD,EAAKhlB,UACZrzB,EAASq4C,EAAKv7E,gBAAgBY,eACjCQ,UACA/M,SAASknF,EAAK36E,gBACdkhB,UAAUuJ,EAAKriB,MAAQ,EAAGqiB,EAAKmrC,OAAS,EAC3C,QAASz/D,EAAGmsC,EAAOllF,EAAG+iD,EAAGmiC,EAAOriC,GAGlC,QAAS1C,GAAO0+E,EAAUz+H,GACxB,GAAMg/H,GAAgBP,EAAS1+E,QAC5BmC,OAAO,KACLphD,KAAK,QAAS,YACdq9C,MAAM,UAAW,EACtB6gF,GAAc98E,OAAO,QAClBphD,KAAK,QAAS,QACdA,KAAK,IAAK,SAAUlB,GACnB,GAAM+nE,GAAO3nE,EAAE2nE,KAAK/nE,GACdq/H,EAAaj/H,EAAEg4C,KAAKp4C,EAAEK,GAAGk9H,IAE/B,OAAO0B,GAAWl3D,EADHtmE,EAAAC,QAAEo0C,MAAMiyB,EAAKlQ,OAAOt3D,QAAQ6B,IAAI,WAAc,MAAO+8H,GAAUE,QAGlFD,EAAc98E,OAAO,QAGvB,QAAS4lC,GAAM22C,EAAUz+H,GACvB,GAAMk/H,GAAcT,EAAS32C,MAC7B01B,GAAAl8G,QAAKJ,gBAAgBg+H,EAAal/H,GAC/Bm+C,MAAM,UAAW,GACjB/d,SAEHo9E,EAAAl8G,QAAKJ,gBAAgBg+H,EAAY99E,OAAO,aAAcphD,GACnDc,KAAK,IAAK,SAAUlB,GACnB,GAAM2N,GAASvN,EAAEg4C,KAAKp4C,EAAEK,EAExB,IAAIsN,EAAQ,CAEV,MAAOsxH,MADQx9H,EAAAC,QAAEo0C,MAAM13C,KAAKmhI,kBAAkBn9H,IAAI,WAAc,MAAOuL,MAGvE,MAAOyoH,GAAA10H,QAAG8/C,OAAOpjD,MAAM8C,KAAK,O/C25/BpChC,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,G+CzhgCT,IAAAq0H,GAAA73H,EAAA,G/C8hgCI83H,EAAMre,EAAuBoe,G+C7hgCjCp0H,EAAAzD,EAAA,G/CiigCImD,EAAWs2G,EAAuBh2G,G+C/hgCtCy2H,EAAAl6H,EAAA,I/CmigCIm6H,EAAkB1gB,EAAuBygB,G+CligC7Cpb,EAAA9+G,EAAA,G/CsigCIs/G,EAAS7F,EAAuBqF,EAsHpCr/G,GAAQ2D,Q+C9hgCOq5H,G/CkigCT,SAAU/8H,EAAQD,EAASO,GAEjC,YAuBA,SAASy5G,GAAuB/1G,GAAO,MAAOA,IAAOA,EAAIxC,WAAawC,GAAQN,QAASM,GgDxrgCvF,QAASqhD,GAAMx3B,EAAQwhD,EAAMj1B,GAC3B,GAAMqlF,GAAW5xG,EAAOg+C,OAAO,OAAQ,gBAChC3oE,KAAK,KAAMk3C,EAAKq0B,IAChBvrE,KAAK,KAAMk3C,EAAKs0B,IAChBxrE,KAAK,KAAMmsE,EAAKriB,MAAQ,GACxB9pD,KAAK,KAAMmsE,EAAKmrC,OAAS,GACzBt3G,KAAK,QAASmsE,EAAKriB,OACnB9pD,KAAK,SAAUmsE,EAAKmrC,OAM3B,OAJApgE,GAAKwjB,UAAY,SAAU1Z,GACzB,OAAO,EAAA62E,EAAAr3H,SAAc02C,EAAM8J,IAGtBu7E,EAGT,QAASzE,GAASntG,EAAQwhD,EAAMj1B,GAC9B,GAAMq0B,GAAKY,EAAKriB,MAAQ,EAClB0hB,EAAKW,EAAKmrC,OAAS,EACnBilB,EAAW5xG,EAAOg+C,OAAO,UAAW,gBACnC3oE,KAAK,KAAMmsE,EAAKriB,MAAQ,GACxB9pD,KAAK,KAAMmsE,EAAKmrC,OAAS,GACzBt3G,KAAK,KAAMurE,GACXvrE,KAAK,KAAMwrE,EAMlB,OAJAt0B,GAAKwjB,UAAY,SAAU1Z,GACzB,OAAO,EAAAozE,EAAA5zH,SAAiB02C,EAAMq0B,EAAIC,EAAIxqB,IAGjCu7E,EAGT,QAASx1D,GAAQp8C,EAAQwhD,EAAMj1B,GAC7B,GAAMoN,GAAI5pB,KAAK8S,IAAI2+B,EAAKriB,MAAOqiB,EAAKmrC,QAAU,EACxCilB,EAAW5xG,EAAOg+C,OAAO,SAAU,gBAClC3oE,KAAK,KAAMmsE,EAAKriB,MAAQ,GACxB9pD,KAAK,KAAMmsE,EAAKmrC,OAAS,GACzBt3G,KAAK,IAAKskD,EAMjB,OAJApN,GAAKwjB,UAAY,SAAU1Z,GACzB,OAAO,EAAAy2E,EAAAj3H,SAAgB02C,EAAMoN,EAAGtD,IAG3Bu7E,EAMT,QAAStwB,GAASthF,EAAQwhD,EAAMj1B,GAC9B,GAAM13C,GAAK2sE,EAAKriB,MAAQpvB,KAAKouD,MAAS,EAChCrlC,EAAK0oB,EAAKmrC,OAAS58E,KAAKouD,MAAS,EACjCnyB,IACE9e,EAAG,EAAGgK,GAAI4B,IACV5L,GAAIr4C,EAAGqiD,EAAG,IACVhK,EAAG,EAAGgK,EAAG4B,IACT5L,EAAGr4C,EAAGqiD,EAAG,IAEX06E,EAAW5xG,EAAOg+C,OAAO,UAAW,gBACvC3oE,KAAK,SAAU22D,EAAOz1D,IAAI,SAAUvC,GAAK,MAAOA,GAAEk5C,EAAI,IAAMl5C,EAAEkjD,IAAKxyC,KAAK,KAM3E,OAJA6nC,GAAKwjB,UAAY,SAAU/7D,GACzB,OAAO,EAAAg5H,EAAAn3H,SAAiB02C,EAAMyf,EAAQh4D,IAGjC49H,EhDmmgCTv+H,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,GgD1qgCT,IAAAg3H,GAAAx6H,EAAA,IhD+qgCIy6H,EAAkBhhB,EAAuB+gB,GgD9qgC7CvD,EAAAj3H,EAAA,GhDkrgCIg3H,EAAqBvd,EAAuBwd,GgDjrgChDmD,EAAAp6H,EAAA,IhDqrgCIq6H,EAAoB5gB,EAAuB2gB,GgDprgC/CE,EAAAt6H,EAAA,IhDwrgCIu6H,EAAqB9gB,EAAuB6gB,EAuDhD76H,GAAQ2D,SgDxqgCN2hD,OACA21E,UACA/wD,SACAklC,YhD8qgCI,SAAUnvG,EAAQD,EAASO,GAEjC,YiD3vgCA,SAAS69F,GAAQtwE,EAAQ2iB,EAAIu5B,EAAMxlD,GACjC,GAAMi9G,GAAS3zG,EAAOy2B,OAAO,UAC1BphD,KAAK,KAAMstC,GACXttC,KAAK,UAAW,aAChBA,KAAK,OAAQ,GACbA,KAAK,OAAQ,GACbA,KAAK,cAAe,eACpBA,KAAK,cAAe,GACpBA,KAAK,eAAgB,GACrBA,KAAK,SAAU,QAEZkpB,EAAOo1G,EAAOl9E,OAAO,QACxBphD,KAAK,IAAK,yBACVq9C,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,MAC7Bq/D,GAAAl8G,QAAKX,WAAWqpB,EAAM29C,EAAKxlD,EAAO,UAC9BwlD,EAAKxlD,EAAO,UACd6H,EAAKlpB,KAAK,QAAS6mE,EAAKxlD,EAAO,UAInC,QAASk9G,GAAK5zG,EAAQ2iB,EAAIu5B,EAAMxlD,GAC9B,GAAMi9G,GAAS3zG,EAAOy2B,OAAO,UAC1BphD,KAAK,KAAMstC,GACXttC,KAAK,UAAW,aAChBA,KAAK,OAAQ,GACbA,KAAK,OAAQ,GACbA,KAAK,cAAe,eACpBA,KAAK,cAAe,GACpBA,KAAK,eAAgB,GACrBA,KAAK,SAAU,QAEZkpB,EAAOo1G,EAAOl9E,OAAO,QACxBphD,KAAK,IAAK,+BACVq9C,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,MAC7Bq/D,GAAAl8G,QAAKX,WAAWqpB,EAAM29C,EAAKxlD,EAAO,UAC9BwlD,EAAKxlD,EAAO,UACd6H,EAAKlpB,KAAK,QAAS6mE,EAAKxlD,EAAO,UAInC,QAASm9G,GAAY7zG,EAAQ2iB,EAAIu5B,EAAMxlD,GACrC,GAAMi9G,GAAS3zG,EAAOy2B,OAAO,UAC1BphD,KAAK,KAAMstC,GACXttC,KAAK,UAAW,aAChBA,KAAK,OAAQ,GACbA,KAAK,OAAQ,GACbA,KAAK,cAAe,eACpBA,KAAK,cAAe,GACpBA,KAAK,eAAgB,GACrBA,KAAK,SAAU,QAEZkpB,EAAOo1G,EAAOl9E,OAAO,QACxBphD,KAAK,IAAK,gBACVq9C,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,MAC7Bq/D,GAAAl8G,QAAKX,WAAWqpB,EAAM29C,EAAKxlD,EAAO,UAC9BwlD,EAAKxlD,EAAO,UACd6H,EAAKlpB,KAAK,QAAS6mE,EAAKxlD,EAAO,UjDmsgCnCrjB,OAAOC,eAAepB,EAAS,cAC7B+D,OAAO,GiDjwgCT,IAAAs7G,GAAA9+G,EAAA,GjDswgCIs/G,EAEJ,SAAgC57G,GAAO,MAAOA,IAAOA,EAAIxC,WAAawC,GAAQN,QAASM,IAFnDo7G,EAkCpCr/G,GAAQ2D,SiDtugCNy6F,SACAsjC,MACAC,aACAh+H,QAASy6F,IjD4ugCL,SAAUn+F,EAAQD,GkDjzgCxBC,EAAAD,SAAkBgB,KAAA,oBAAA2kF,QAAA,SAAAsvC,YAAA,gCAAAG,UAAA,4CAAAD,KAAA,wBAAAE,SAA8LC,KAAA,WAAAE,MAAA,sEAAAjsH,KAAA,yDAAAqsH,QAAA,2DAAAF,MAAA,8BAAAC,cAAA,qBAAAiM,QAAA,iBAAwU/L,cAAiBr4E,GAAA,SAAAqkF,eAAA,SAAA9hB,SAAA,SAAA/9G,OAAA,WAA6E8zH,iBAAoBC,aAAA,UAAAC,eAAA,SAAAC,mBAAA,SAAAG,KAAA,SAAAZ,MAAA,SAAAc,wBAAA,SAAAC,yBAAA,SAAAC,cAAA,SAAAC,wBAAA,SAAAC,MAAA,SAAAoL,qBAAA,UAAAlL,SAAA,UAAAC,QAAA,UAAAC,yBAAA,SAAAC,mBAAA,UAA8XC,YAAexyG,KAAA,MAAA4kC,IAAA,uDAAyE6tE,QAAA,MAAAL,UAA6BnC,QAAA,qBlDszgCxmC","file":"dagre-d3.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dagreD3\"] = factory();\n\telse\n\t\troot[\"dagreD3\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dagreD3\"] = factory();\n\telse\n\t\troot[\"dagreD3\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 18);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* global window */\n\nvar lodash;\n\nif (true) {\n  try {\n    lodash = __webpack_require__(2);\n  } catch (e) {}\n}\n\nif (!lodash) {\n  lodash = window._;\n}\n\nmodule.exports = lodash;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */\nfunction isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + ':' + escapeId(e.w) + ':' + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, '\\\\:') : '';\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr('style', styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom.attr('class', classFn).attr('class', otherClasses + ' ' + dom.attr('class'));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_lodash2.default.isPlainObject(graph)) {\n    var transition = graph.transition;\n    if (_lodash2.default.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}\n\n// Public utility functions\nexports.default = {\n  isSubgraph: isSubgraph,\n  edgeToId: edgeToId,\n  applyStyle: applyStyle,\n  applyClass: applyClass,\n  applyTransition: applyTransition\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.4';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, customDefaultsAssignIn);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (true) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n      return _;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(20), __webpack_require__(21)(module)))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright (c) 2014, Chris Pettitt\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its contributors\n * may be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar lib = __webpack_require__(19);\n\nmodule.exports = {\n  Graph: lib.Graph,\n  json: __webpack_require__(23),\n  alg: __webpack_require__(24),\n  version: lib.version\n};\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ = __webpack_require__(0);\n\nmodule.exports = Graph;\n\nvar DEFAULT_EDGE_NAME = \"\\x00\",\n    GRAPH_NODE = \"\\x00\",\n    EDGE_KEY_DELIM = \"\\x01\";\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\n\nfunction Graph(opts) {\n  this._isDirected = _.has(opts, \"directed\") ? opts.directed : true;\n  this._isMultigraph = _.has(opts, \"multigraph\") ? opts.multigraph : false;\n  this._isCompound = _.has(opts, \"compound\") ? opts.compound : false;\n\n  // Label for the graph itself\n  this._label = undefined;\n\n  // Defaults to be set when creating a new node\n  this._defaultNodeLabelFn = _.constant(undefined);\n\n  // Defaults to be set when creating a new edge\n  this._defaultEdgeLabelFn = _.constant(undefined);\n\n  // v -> label\n  this._nodes = {};\n\n  if (this._isCompound) {\n    // v -> parent\n    this._parent = {};\n\n    // v -> children\n    this._children = {};\n    this._children[GRAPH_NODE] = {};\n  }\n\n  // v -> edgeObj\n  this._in = {};\n\n  // u -> v -> Number\n  this._preds = {};\n\n  // v -> edgeObj\n  this._out = {};\n\n  // v -> w -> Number\n  this._sucs = {};\n\n  // e -> edgeObj\n  this._edgeObjs = {};\n\n  // e -> label\n  this._edgeLabels = {};\n}\n\n/* Number of nodes in the graph. Should only be changed by the implementation. */\nGraph.prototype._nodeCount = 0;\n\n/* Number of edges in the graph. Should only be changed by the implementation. */\nGraph.prototype._edgeCount = 0;\n\n\n/* === Graph functions ========= */\n\nGraph.prototype.isDirected = function() {\n  return this._isDirected;\n};\n\nGraph.prototype.isMultigraph = function() {\n  return this._isMultigraph;\n};\n\nGraph.prototype.isCompound = function() {\n  return this._isCompound;\n};\n\nGraph.prototype.setGraph = function(label) {\n  this._label = label;\n  return this;\n};\n\nGraph.prototype.graph = function() {\n  return this._label;\n};\n\n\n/* === Node functions ========== */\n\nGraph.prototype.setDefaultNodeLabel = function(newDefault) {\n  if (!_.isFunction(newDefault)) {\n    newDefault = _.constant(newDefault);\n  }\n  this._defaultNodeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.nodeCount = function() {\n  return this._nodeCount;\n};\n\nGraph.prototype.nodes = function() {\n  return _.keys(this._nodes);\n};\n\nGraph.prototype.sources = function() {\n  return _.filter(this.nodes(), _.bind(function(v) {\n    return _.isEmpty(this._in[v]);\n  }, this));\n};\n\nGraph.prototype.sinks = function() {\n  return _.filter(this.nodes(), _.bind(function(v) {\n    return _.isEmpty(this._out[v]);\n  }, this));\n};\n\nGraph.prototype.setNodes = function(vs, value) {\n  var args = arguments;\n  _.each(vs, _.bind(function(v) {\n    if (args.length > 1) {\n      this.setNode(v, value);\n    } else {\n      this.setNode(v);\n    }\n  }, this));\n  return this;\n};\n\nGraph.prototype.setNode = function(v, value) {\n  if (_.has(this._nodes, v)) {\n    if (arguments.length > 1) {\n      this._nodes[v] = value;\n    }\n    return this;\n  }\n\n  this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n  if (this._isCompound) {\n    this._parent[v] = GRAPH_NODE;\n    this._children[v] = {};\n    this._children[GRAPH_NODE][v] = true;\n  }\n  this._in[v] = {};\n  this._preds[v] = {};\n  this._out[v] = {};\n  this._sucs[v] = {};\n  ++this._nodeCount;\n  return this;\n};\n\nGraph.prototype.node = function(v) {\n  return this._nodes[v];\n};\n\nGraph.prototype.hasNode = function(v) {\n  return _.has(this._nodes, v);\n};\n\nGraph.prototype.removeNode =  function(v) {\n  var self = this;\n  if (_.has(this._nodes, v)) {\n    var removeEdge = function(e) { self.removeEdge(self._edgeObjs[e]); };\n    delete this._nodes[v];\n    if (this._isCompound) {\n      this._removeFromParentsChildList(v);\n      delete this._parent[v];\n      _.each(this.children(v), _.bind(function(child) {\n        this.setParent(child);\n      }, this));\n      delete this._children[v];\n    }\n    _.each(_.keys(this._in[v]), removeEdge);\n    delete this._in[v];\n    delete this._preds[v];\n    _.each(_.keys(this._out[v]), removeEdge);\n    delete this._out[v];\n    delete this._sucs[v];\n    --this._nodeCount;\n  }\n  return this;\n};\n\nGraph.prototype.setParent = function(v, parent) {\n  if (!this._isCompound) {\n    throw new Error(\"Cannot set parent in a non-compound graph\");\n  }\n\n  if (_.isUndefined(parent)) {\n    parent = GRAPH_NODE;\n  } else {\n    // Coerce parent to string\n    parent += \"\";\n    for (var ancestor = parent;\n         !_.isUndefined(ancestor);\n         ancestor = this.parent(ancestor)) {\n      if (ancestor === v) {\n        throw new Error(\"Setting \" + parent+ \" as parent of \" + v +\n                        \" would create create a cycle\");\n      }\n    }\n\n    this.setNode(parent);\n  }\n\n  this.setNode(v);\n  this._removeFromParentsChildList(v);\n  this._parent[v] = parent;\n  this._children[parent][v] = true;\n  return this;\n};\n\nGraph.prototype._removeFromParentsChildList = function(v) {\n  delete this._children[this._parent[v]][v];\n};\n\nGraph.prototype.parent = function(v) {\n  if (this._isCompound) {\n    var parent = this._parent[v];\n    if (parent !== GRAPH_NODE) {\n      return parent;\n    }\n  }\n};\n\nGraph.prototype.children = function(v) {\n  if (_.isUndefined(v)) {\n    v = GRAPH_NODE;\n  }\n\n  if (this._isCompound) {\n    var children = this._children[v];\n    if (children) {\n      return _.keys(children);\n    }\n  } else if (v === GRAPH_NODE) {\n    return this.nodes();\n  } else if (this.hasNode(v)) {\n    return [];\n  }\n};\n\nGraph.prototype.predecessors = function(v) {\n  var predsV = this._preds[v];\n  if (predsV) {\n    return _.keys(predsV);\n  }\n};\n\nGraph.prototype.successors = function(v) {\n  var sucsV = this._sucs[v];\n  if (sucsV) {\n    return _.keys(sucsV);\n  }\n};\n\nGraph.prototype.neighbors = function(v) {\n  var preds = this.predecessors(v);\n  if (preds) {\n    return _.union(preds, this.successors(v));\n  }\n};\n\nGraph.prototype.filterNodes = function(filter) {\n  var copy = new this.constructor({\n    directed: this._isDirected,\n    multigraph: this._isMultigraph,\n    compound: this._isCompound\n  });\n\n  copy.setGraph(this.graph());\n\n  _.each(this._nodes, _.bind(function(value, v) {\n    if (filter(v)) {\n      copy.setNode(v, value);\n    }\n  }, this));\n\n  _.each(this._edgeObjs, _.bind(function(e) {\n    if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n      copy.setEdge(e, this.edge(e));\n    }\n  }, this));\n\n  var self = this;\n  var parents = {};\n  function findParent(v) {\n    var parent = self.parent(v);\n    if (parent === undefined || copy.hasNode(parent)) {\n      parents[v] = parent;\n      return parent;\n    } else if (parent in parents) {\n      return parents[parent];\n    } else {\n      return findParent(parent);\n    }\n  }\n\n  if (this._isCompound) {\n    _.each(copy.nodes(), function(v) {\n      copy.setParent(v, findParent(v));\n    });\n  }\n\n  return copy;\n};\n\n/* === Edge functions ========== */\n\nGraph.prototype.setDefaultEdgeLabel = function(newDefault) {\n  if (!_.isFunction(newDefault)) {\n    newDefault = _.constant(newDefault);\n  }\n  this._defaultEdgeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.edgeCount = function() {\n  return this._edgeCount;\n};\n\nGraph.prototype.edges = function() {\n  return _.values(this._edgeObjs);\n};\n\nGraph.prototype.setPath = function(vs, value) {\n  var self = this,\n      args = arguments;\n  _.reduce(vs, function(v, w) {\n    if (args.length > 1) {\n      self.setEdge(v, w, value);\n    } else {\n      self.setEdge(v, w);\n    }\n    return w;\n  });\n  return this;\n};\n\n/*\n * setEdge(v, w, [value, [name]])\n * setEdge({ v, w, [name] }, [value])\n */\nGraph.prototype.setEdge = function() {\n  var v, w, name, value,\n      valueSpecified = false,\n      arg0 = arguments[0];\n\n  if (typeof arg0 === \"object\" && arg0 !== null && \"v\" in arg0) {\n    v = arg0.v;\n    w = arg0.w;\n    name = arg0.name;\n    if (arguments.length === 2) {\n      value = arguments[1];\n      valueSpecified = true;\n    }\n  } else {\n    v = arg0;\n    w = arguments[1];\n    name = arguments[3];\n    if (arguments.length > 2) {\n      value = arguments[2];\n      valueSpecified = true;\n    }\n  }\n\n  v = \"\" + v;\n  w = \"\" + w;\n  if (!_.isUndefined(name)) {\n    name = \"\" + name;\n  }\n\n  var e = edgeArgsToId(this._isDirected, v, w, name);\n  if (_.has(this._edgeLabels, e)) {\n    if (valueSpecified) {\n      this._edgeLabels[e] = value;\n    }\n    return this;\n  }\n\n  if (!_.isUndefined(name) && !this._isMultigraph) {\n    throw new Error(\"Cannot set a named edge when isMultigraph = false\");\n  }\n\n  // It didn't exist, so we need to create it.\n  // First ensure the nodes exist.\n  this.setNode(v);\n  this.setNode(w);\n\n  this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n\n  var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);\n  // Ensure we add undirected edges in a consistent way.\n  v = edgeObj.v;\n  w = edgeObj.w;\n\n  Object.freeze(edgeObj);\n  this._edgeObjs[e] = edgeObj;\n  incrementOrInitEntry(this._preds[w], v);\n  incrementOrInitEntry(this._sucs[v], w);\n  this._in[w][e] = edgeObj;\n  this._out[v][e] = edgeObj;\n  this._edgeCount++;\n  return this;\n};\n\nGraph.prototype.edge = function(v, w, name) {\n  var e = (arguments.length === 1\n            ? edgeObjToId(this._isDirected, arguments[0])\n            : edgeArgsToId(this._isDirected, v, w, name));\n  return this._edgeLabels[e];\n};\n\nGraph.prototype.hasEdge = function(v, w, name) {\n  var e = (arguments.length === 1\n            ? edgeObjToId(this._isDirected, arguments[0])\n            : edgeArgsToId(this._isDirected, v, w, name));\n  return _.has(this._edgeLabels, e);\n};\n\nGraph.prototype.removeEdge = function(v, w, name) {\n  var e = (arguments.length === 1\n            ? edgeObjToId(this._isDirected, arguments[0])\n            : edgeArgsToId(this._isDirected, v, w, name)),\n      edge = this._edgeObjs[e];\n  if (edge) {\n    v = edge.v;\n    w = edge.w;\n    delete this._edgeLabels[e];\n    delete this._edgeObjs[e];\n    decrementOrRemoveEntry(this._preds[w], v);\n    decrementOrRemoveEntry(this._sucs[v], w);\n    delete this._in[w][e];\n    delete this._out[v][e];\n    this._edgeCount--;\n  }\n  return this;\n};\n\nGraph.prototype.inEdges = function(v, u) {\n  var inV = this._in[v];\n  if (inV) {\n    var edges = _.values(inV);\n    if (!u) {\n      return edges;\n    }\n    return _.filter(edges, function(edge) { return edge.v === u; });\n  }\n};\n\nGraph.prototype.outEdges = function(v, w) {\n  var outV = this._out[v];\n  if (outV) {\n    var edges = _.values(outV);\n    if (!w) {\n      return edges;\n    }\n    return _.filter(edges, function(edge) { return edge.w === w; });\n  }\n};\n\nGraph.prototype.nodeEdges = function(v, w) {\n  var inEdges = this.inEdges(v, w);\n  if (inEdges) {\n    return inEdges.concat(this.outEdges(v, w));\n  }\n};\n\nfunction incrementOrInitEntry(map, k) {\n  if (map[k]) {\n    map[k]++;\n  } else {\n    map[k] = 1;\n  }\n}\n\nfunction decrementOrRemoveEntry(map, k) {\n  if (!--map[k]) { delete map[k]; }\n}\n\nfunction edgeArgsToId(isDirected, v_, w_, name) {\n  var v = \"\" + v_;\n  var w = \"\" + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM +\n             (_.isUndefined(name) ? DEFAULT_EDGE_NAME : name);\n}\n\nfunction edgeArgsToObj(isDirected, v_, w_, name) {\n  var v = \"\" + v_;\n  var w = \"\" + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  var edgeObj =  { v: v, w: w };\n  if (name) {\n    edgeObj.name = name;\n  }\n  return edgeObj;\n}\n\nfunction edgeObjToId(isDirected, edgeObj) {\n  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs(rx * ry * px / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs(rx * ry * py / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return { x: cx + dx, y: cy + dy };\n}\n\nexports.default = intersectEllipse;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _addTextLabel = __webpack_require__(40);\n\nvar _addTextLabel2 = _interopRequireDefault(_addTextLabel);\n\nvar _addHtmlLabel = __webpack_require__(41);\n\nvar _addHtmlLabel2 = _interopRequireDefault(_addHtmlLabel);\n\nvar _addSvgLabel = __webpack_require__(42);\n\nvar _addSvgLabel2 = _interopRequireDefault(_addSvgLabel);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addLabel(root, node, location) {\n  var label = node.label;\n  var labelSvg = root.append('g');\n\n  // Allow the label to be a string, a function that returns a DOM element, or\n  // a DOM element itself.\n  if (node.labelType === 'svg') {\n    (0, _addSvgLabel2.default)(labelSvg, node);\n  } else if (typeof label !== 'string' || node.labelType === 'html') {\n    (0, _addHtmlLabel2.default)(labelSvg, node);\n  } else {\n    (0, _addTextLabel2.default)(labelSvg, node);\n  }\n\n  var labelBBox = labelSvg.node().getBBox();\n  var y = void 0;\n  switch (location) {\n    case 'top':\n      y = -node.height / 2;\n      break;\n    case 'bottom':\n      y = node.height / 2 - labelBBox.height;\n      break;\n    default:\n      y = -labelBBox.height / 2;\n  }\n  labelSvg.attr('transform', 'translate(' + -labelBBox.width / 2 + ',' + y + ')');\n\n  return labelSvg;\n}\n\nexports.default = addLabel;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0),\n    PriorityQueue = __webpack_require__(9);\n\nmodule.exports = dijkstra;\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction dijkstra(g, source, weightFn, edgeFn) {\n  return runDijkstra(g, String(source),\n                     weightFn || DEFAULT_WEIGHT_FUNC,\n                     edgeFn || function(v) { return g.outEdges(v); });\n}\n\nfunction runDijkstra(g, source, weightFn, edgeFn) {\n  var results = {},\n      pq = new PriorityQueue(),\n      v, vEntry;\n\n  var updateNeighbors = function(edge) {\n    var w = edge.v !== v ? edge.v : edge.w,\n        wEntry = results[w],\n        weight = weightFn(edge),\n        distance = vEntry.distance + weight;\n\n    if (weight < 0) {\n      throw new Error(\"dijkstra does not allow negative edge weights. \" +\n                      \"Bad edge: \" + edge + \" Weight: \" + weight);\n    }\n\n    if (distance < wEntry.distance) {\n      wEntry.distance = distance;\n      wEntry.predecessor = v;\n      pq.decrease(w, distance);\n    }\n  };\n\n  g.nodes().forEach(function(v) {\n    var distance = v === source ? 0 : Number.POSITIVE_INFINITY;\n    results[v] = { distance: distance };\n    pq.add(v, distance);\n  });\n\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    vEntry = results[v];\n    if (vEntry.distance === Number.POSITIVE_INFINITY) {\n      break;\n    }\n\n    edgeFn(v).forEach(updateNeighbors);\n  }\n\n  return results;\n}\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0);\n\nmodule.exports = PriorityQueue;\n\n/**\n * A min-priority queue data structure. This algorithm is derived from Cormen,\n * et al., \"Introduction to Algorithms\". The basic idea of a min-priority\n * queue is that you can efficiently (in O(1) time) get the smallest key in\n * the queue. Adding and removing elements takes O(log n) time. A key can\n * have its priority decreased in O(log n) time.\n */\nfunction PriorityQueue() {\n  this._arr = [];\n  this._keyIndices = {};\n}\n\n/**\n * Returns the number of elements in the queue. Takes `O(1)` time.\n */\nPriorityQueue.prototype.size = function() {\n  return this._arr.length;\n};\n\n/**\n * Returns the keys that are in the queue. Takes `O(n)` time.\n */\nPriorityQueue.prototype.keys = function() {\n  return this._arr.map(function(x) { return x.key; });\n};\n\n/**\n * Returns `true` if **key** is in the queue and `false` if not.\n */\nPriorityQueue.prototype.has = function(key) {\n  return _.has(this._keyIndices, key);\n};\n\n/**\n * Returns the priority for **key**. If **key** is not present in the queue\n * then this function returns `undefined`. Takes `O(1)` time.\n *\n * @param {Object} key\n */\nPriorityQueue.prototype.priority = function(key) {\n  var index = this._keyIndices[key];\n  if (index !== undefined) {\n    return this._arr[index].priority;\n  }\n};\n\n/**\n * Returns the key for the minimum element in this queue. If the queue is\n * empty this function throws an Error. Takes `O(1)` time.\n */\nPriorityQueue.prototype.min = function() {\n  if (this.size() === 0) {\n    throw new Error(\"Queue underflow\");\n  }\n  return this._arr[0].key;\n};\n\n/**\n * Inserts a new key into the priority queue. If the key already exists in\n * the queue this function returns `false`; otherwise it will return `true`.\n * Takes `O(n)` time.\n *\n * @param {Object} key the key to add\n * @param {Number} priority the initial priority for the key\n */\nPriorityQueue.prototype.add = function(key, priority) {\n  var keyIndices = this._keyIndices;\n  key = String(key);\n  if (!_.has(keyIndices, key)) {\n    var arr = this._arr;\n    var index = arr.length;\n    keyIndices[key] = index;\n    arr.push({key: key, priority: priority});\n    this._decrease(index);\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes and returns the smallest key in the queue. Takes `O(log n)` time.\n */\nPriorityQueue.prototype.removeMin = function() {\n  this._swap(0, this._arr.length - 1);\n  var min = this._arr.pop();\n  delete this._keyIndices[min.key];\n  this._heapify(0);\n  return min.key;\n};\n\n/**\n * Decreases the priority for **key** to **priority**. If the new priority is\n * greater than the previous priority, this function will throw an Error.\n *\n * @param {Object} key the key for which to raise priority\n * @param {Number} priority the new priority for the key\n */\nPriorityQueue.prototype.decrease = function(key, priority) {\n  var index = this._keyIndices[key];\n  if (priority > this._arr[index].priority) {\n    throw new Error(\"New priority is greater than current priority. \" +\n        \"Key: \" + key + \" Old: \" + this._arr[index].priority + \" New: \" + priority);\n  }\n  this._arr[index].priority = priority;\n  this._decrease(index);\n};\n\nPriorityQueue.prototype._heapify = function(i) {\n  var arr = this._arr;\n  var l = 2 * i,\n      r = l + 1,\n      largest = i;\n  if (l < arr.length) {\n    largest = arr[l].priority < arr[largest].priority ? l : largest;\n    if (r < arr.length) {\n      largest = arr[r].priority < arr[largest].priority ? r : largest;\n    }\n    if (largest !== i) {\n      this._swap(i, largest);\n      this._heapify(largest);\n    }\n  }\n};\n\nPriorityQueue.prototype._decrease = function(index) {\n  var arr = this._arr;\n  var priority = arr[index].priority;\n  var parent;\n  while (index !== 0) {\n    parent = index >> 1;\n    if (arr[parent].priority < priority) {\n      break;\n    }\n    this._swap(index, parent);\n    index = parent;\n  }\n};\n\nPriorityQueue.prototype._swap = function(i, j) {\n  var arr = this._arr;\n  var keyIndices = this._keyIndices;\n  var origArrI = arr[i];\n  var origArrJ = arr[j];\n  arr[i] = origArrJ;\n  arr[j] = origArrI;\n  keyIndices[origArrJ.key] = i;\n  keyIndices[origArrI.key] = j;\n};\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0);\n\nmodule.exports = tarjan;\n\nfunction tarjan(g) {\n  var index = 0,\n      stack = [],\n      visited = {}, // node id -> { onStack, lowlink, index }\n      results = [];\n\n  function dfs(v) {\n    var entry = visited[v] = {\n      onStack: true,\n      lowlink: index,\n      index: index++\n    };\n    stack.push(v);\n\n    g.successors(v).forEach(function(w) {\n      if (!_.has(visited, w)) {\n        dfs(w);\n        entry.lowlink = Math.min(entry.lowlink, visited[w].lowlink);\n      } else if (visited[w].onStack) {\n        entry.lowlink = Math.min(entry.lowlink, visited[w].index);\n      }\n    });\n\n    if (entry.lowlink === entry.index) {\n      var cmpt = [],\n          w;\n      do {\n        w = stack.pop();\n        visited[w].onStack = false;\n        cmpt.push(w);\n      } while (v !== w);\n      results.push(cmpt);\n    }\n  }\n\n  g.nodes().forEach(function(v) {\n    if (!_.has(visited, v)) {\n      dfs(v);\n    }\n  });\n\n  return results;\n}\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0);\n\nmodule.exports = topsort;\ntopsort.CycleException = CycleException;\n\nfunction topsort(g) {\n  var visited = {},\n      stack = {},\n      results = [];\n\n  function visit(node) {\n    if (_.has(stack, node)) {\n      throw new CycleException();\n    }\n\n    if (!_.has(visited, node)) {\n      stack[node] = true;\n      visited[node] = true;\n      _.each(g.predecessors(node), visit);\n      delete stack[node];\n      results.push(node);\n    }\n  }\n\n  _.each(g.sinks(), visit);\n\n  if (_.size(visited) !== g.nodeCount()) {\n    throw new CycleException();\n  }\n\n  return results;\n}\n\nfunction CycleException() {}\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0);\n\nmodule.exports = dfs;\n\n/*\n * A helper that preforms a pre- or post-order traversal on the input graph\n * and returns the nodes in the order they were visited. If the graph is\n * undirected then this algorithm will navigate using neighbors. If the graph\n * is directed then this algorithm will navigate using successors.\n *\n * Order must be one of \"pre\" or \"post\".\n */\nfunction dfs(g, vs, order) {\n  if (!_.isArray(vs)) {\n    vs = [vs];\n  }\n\n  var navigation = (g.isDirected() ? g.successors : g.neighbors).bind(g);\n\n  var acc = [],\n      visited = {};\n  _.each(vs, function(v) {\n    if (!g.hasNode(v)) {\n      throw new Error(\"Graph does not have node: \" + v);\n    }\n\n    doDfs(g, v, order === \"post\", visited, navigation, acc);\n  });\n  return acc;\n}\n\nfunction doDfs(g, v, postorder, visited, navigation, acc) {\n  if (!_.has(visited, v)) {\n    visited[v] = true;\n\n    if (!postorder) { acc.push(v); }\n    _.each(navigation(v), function(w) {\n      doDfs(g, w, postorder, visited, navigation, acc);\n    });\n    if (postorder) { acc.push(v); }\n  }\n}\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(4));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"lodash\", \"graphlib\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dagre\"] = factory(require(\"lodash\"), require(\"graphlib\"));\n\telse\n\t\troot[\"dagre\"] = factory(root[\"lodash\"], root[\"graphlib\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(2);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addDummyNode = addDummyNode;\nexports.simplify = simplify;\nexports.asNonCompoundGraph = asNonCompoundGraph;\nexports.successorWeights = successorWeights;\nexports.predecessorWeights = predecessorWeights;\nexports.intersectRect = intersectRect;\nexports.buildLayerMatrix = buildLayerMatrix;\nexports.normalizeRanks = normalizeRanks;\nexports.removeEmptyRanks = removeEmptyRanks;\nexports.addBorderNode = addBorderNode;\nexports.maxRank = maxRank;\nexports.partition = partition;\nexports.time = time;\nexports.notime = notime;\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graphlib = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Adds a dummy node to the graph and return v.\n */\nfunction addDummyNode(g, type, attrs, name) {\n  var v = void 0;\n  do {\n    v = _lodash2.default.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\nfunction simplify(g) {\n  var simplified = new _graphlib.Graph().setGraph(g.graph());\n  _lodash2.default.each(g.nodes(), function (v) {\n    simplified.setNode(v, g.node(v));\n  });\n  _lodash2.default.each(g.edges(), function (e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 };\n    var label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen)\n    });\n  });\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new _graphlib.Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n  _lodash2.default.each(g.nodes(), function (v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n  _lodash2.default.each(g.edges(), function (e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _lodash2.default.map(g.nodes(), function (v) {\n    var sucs = {};\n    _lodash2.default.each(g.outEdges(v), function (e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n    return sucs;\n  });\n  return _lodash2.default.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _lodash2.default.map(g.nodes(), function (v) {\n    var preds = {};\n    _lodash2.default.each(g.inEdges(v), function (e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return _lodash2.default.zipObject(g.nodes(), weightMap);\n}\n\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error('Not possible to find intersection inside of the rectangle');\n  }\n\n  var sx = void 0;\n  var sy = void 0;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = w * dy / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\nfunction buildLayerMatrix(g) {\n  var layering = _lodash2.default.map(_lodash2.default.range(maxRank(g) + 1), function () {\n    return [];\n  });\n  _lodash2.default.each(g.nodes(), function (v) {\n    var node = g.node(v);\n    var rank = node.rank;\n    if (!_lodash2.default.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n  return layering;\n}\n\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\nfunction normalizeRanks(g) {\n  var min = _lodash2.default.min(_lodash2.default.map(g.nodes(), function (v) {\n    return g.node(v).rank;\n  }));\n  _lodash2.default.each(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (_lodash2.default.has(node, 'rank')) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _lodash2.default.min(_lodash2.default.map(g.nodes(), function (v) {\n    return g.node(v).rank;\n  }));\n\n  var layers = [];\n  _lodash2.default.each(g.nodes(), function (v) {\n    var rank = g.node(v).rank - offset;\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n    layers[rank].push(v);\n  });\n\n  var delta = 0;\n  var nodeRankFactor = g.graph().nodeRankFactor;\n  _lodash2.default.each(layers, function (vs, i) {\n    if (_lodash2.default.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _lodash2.default.each(vs, function (v) {\n        g.node(v).rank += delta;\n      });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0\n  };\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n  return addDummyNode(g, 'border', node, prefix);\n}\n\nfunction maxRank(g) {\n  return _lodash2.default.max(_lodash2.default.map(g.nodes(), function (v) {\n    var rank = g.node(v).rank;\n    if (!_lodash2.default.isUndefined(rank)) {\n      return rank;\n    }\n  }));\n}\n\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\nfunction partition(collection, fn) {\n  var result = { lhs: [], rhs: [] };\n  _lodash2.default.each(collection, function (value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n}\n\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\nfunction time(name, fn) {\n  var start = _lodash2.default.now();\n  try {\n    return fn();\n  } finally {\n    console.log(name + ' time: ' + (_lodash2.default.now() - start) + 'ms');\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}\n\nexports.default = {\n  addDummyNode: addDummyNode,\n  simplify: simplify,\n  asNonCompoundGraph: asNonCompoundGraph,\n  successorWeights: successorWeights,\n  predecessorWeights: predecessorWeights,\n  intersectRect: intersectRect,\n  buildLayerMatrix: buildLayerMatrix,\n  normalizeRanks: normalizeRanks,\n  removeEmptyRanks: removeEmptyRanks,\n  addBorderNode: addBorderNode,\n  maxRank: maxRank,\n  partition: partition,\n  time: time,\n  notime: notime\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(4);\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.longestPath = longestPath;\nexports.slack = slack;\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Initializes ranks for the input graph using the longest path algorithm. This\n * algorithm scales well and is fast in practice, it yields rather poor\n * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom\n * ranks wide and leaving edges longer than necessary. However, due to its\n * speed, this algorithm is good for getting an initial ranking that can be fed\n * into other algorithms.\n *\n * This algorithm does not normalize layers because it will be used by other\n * algorithms in most cases. If using this algorithm directly, be sure to\n * run normalize at the end.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG.\n *    2. Input graph node labels can be assigned properties.\n *\n * Post-conditions:\n *\n *    1. Each node will be assign an (unnormalized) \"rank\" property.\n */\nfunction longestPath(g) {\n  var visited = {};\n\n  function dfs(v) {\n    var label = g.node(v);\n    if (_lodash2.default.has(visited, v)) {\n      return label.rank;\n    }\n    visited[v] = true;\n\n    var rank = _lodash2.default.min(_lodash2.default.map(g.outEdges(v), function (e) {\n      return dfs(e.w) - g.edge(e).minlen;\n    })) || 0;\n\n    return label.rank = rank;\n  }\n\n  _lodash2.default.each(g.sources(), dfs);\n}\n\n/*\n * Returns the amount of slack for the given edge. The slack is defined as the\n * difference between the length of the edge and its minimum length.\n */\nfunction slack(g, e) {\n  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen;\n}\n\nexports.default = {\n  longestPath: longestPath,\n  slack: slack\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graphlib = __webpack_require__(2);\n\nvar _util = __webpack_require__(3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Constructs a spanning tree with tight edges and adjusted the input node's\n * ranks to achieve this. A tight edge is one that is has a length that matches\n * its \"minlen\" attribute.\n *\n * The basic structure for this function is derived from Gansner, et al., \"A\n * Technique for Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a DAG.\n *    2. Graph must be connected.\n *    3. Graph must have at least one node.\n *    5. Graph nodes must have been previously assigned a \"rank\" property that\n *       respects the \"minlen\" property of incident edges.\n *    6. Graph edges must have a \"minlen\" property.\n *\n * Post-conditions:\n *\n *    - Graph nodes will have their rank adjusted to ensure that all edges are\n *      tight.\n *\n * Returns a tree (undirected graph) that is constructed using only \"tight\"\n * edges.\n */\nfunction feasibleTree(g) {\n  var t = new _graphlib.Graph({ directed: false });\n\n  // Choose arbitrary node from which to start our tree\n  var start = g.nodes()[0];\n  var size = g.nodeCount();\n  t.setNode(start, {});\n\n  var edge = void 0;\n  var delta = void 0;\n  while (tightTree(t, g) < size) {\n    edge = findMinSlackEdge(t, g);\n    delta = t.hasNode(edge.v) ? (0, _util.slack)(g, edge) : -(0, _util.slack)(g, edge);\n    shiftRanks(t, g, delta);\n  }\n\n  return t;\n}\n\n/*\n * Finds a maximal tree of tight edges and returns the number of nodes in the\n * tree.\n */\nfunction tightTree(t, g) {\n  function dfs(v) {\n    _lodash2.default.each(g.nodeEdges(v), function (e) {\n      var edgeV = e.v;\n      var w = v === edgeV ? e.w : edgeV;\n      if (!t.hasNode(w) && !(0, _util.slack)(g, e)) {\n        t.setNode(w, {});\n        t.setEdge(v, w, {});\n        dfs(w);\n      }\n    });\n  }\n\n  _lodash2.default.each(t.nodes(), dfs);\n  return t.nodeCount();\n}\n\n/*\n * Finds the edge with the smallest slack that is incident on tree and returns\n * it.\n */\nfunction findMinSlackEdge(t, g) {\n  return _lodash2.default.minBy(g.edges(), function (e) {\n    if (t.hasNode(e.v) !== t.hasNode(e.w)) {\n      return (0, _util.slack)(g, e);\n    }\n  });\n}\n\nfunction shiftRanks(t, g, delta) {\n  _lodash2.default.each(t.nodes(), function (v) {\n    g.node(v).rank += delta;\n  });\n}\n\nexports.default = feasibleTree;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _graphlib = __webpack_require__(2);\n\nvar _graphlib2 = _interopRequireDefault(_graphlib);\n\nvar _layout = __webpack_require__(6);\n\nvar _layout2 = _interopRequireDefault(_layout);\n\nvar _debug = __webpack_require__(28);\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _package = __webpack_require__(29);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  graphlib: _graphlib2.default,\n  layout: _layout2.default,\n  debug: _debug2.default,\n  util: {\n    time: _util2.default.time,\n    notime: _util2.default.notime\n  },\n  version: _package.version\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graphlib = __webpack_require__(2);\n\nvar _acyclic = __webpack_require__(7);\n\nvar _acyclic2 = _interopRequireDefault(_acyclic);\n\nvar _normalize = __webpack_require__(10);\n\nvar _normalize2 = _interopRequireDefault(_normalize);\n\nvar _rank = __webpack_require__(11);\n\nvar _rank2 = _interopRequireDefault(_rank);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _parentDummyChains = __webpack_require__(13);\n\nvar _parentDummyChains2 = _interopRequireDefault(_parentDummyChains);\n\nvar _nestingGraph = __webpack_require__(14);\n\nvar _nestingGraph2 = _interopRequireDefault(_nestingGraph);\n\nvar _addBorderSegments = __webpack_require__(15);\n\nvar _addBorderSegments2 = _interopRequireDefault(_addBorderSegments);\n\nvar _coordinateSystem = __webpack_require__(16);\n\nvar _coordinateSystem2 = _interopRequireDefault(_coordinateSystem);\n\nvar _order = __webpack_require__(17);\n\nvar _order2 = _interopRequireDefault(_order);\n\nvar _position = __webpack_require__(26);\n\nvar _position2 = _interopRequireDefault(_position);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? _util2.default.time : _util2.default.notime;\n  time('layout', function () {\n    var layoutGraph = time('  buildLayoutGraph', function () {\n      return buildLayoutGraph(g);\n    });\n    time('  runLayout', function () {\n      runLayout(layoutGraph, time);\n    });\n    time('  updateInputGraph', function () {\n      updateInputGraph(g, layoutGraph);\n    });\n  });\n}\n\nfunction runLayout(g, time) {\n  time('    makeSpaceForEdgeLabels', function () {\n    makeSpaceForEdgeLabels(g);\n  });\n  time('    removeSelfEdges', function () {\n    removeSelfEdges(g);\n  });\n  time('    acyclic', function () {\n    _acyclic2.default.run(g);\n  });\n  time('    nestingGraph.run', function () {\n    _nestingGraph2.default.run(g);\n  });\n  time('    rank', function () {\n    (0, _rank2.default)(_util2.default.asNonCompoundGraph(g));\n  });\n  time('    injectEdgeLabelProxies', function () {\n    injectEdgeLabelProxies(g);\n  });\n  time('    removeEmptyRanks', function () {\n    (0, _util.removeEmptyRanks)(g);\n  });\n  time('    nestingGraph.cleanup', function () {\n    _nestingGraph2.default.cleanup(g);\n  });\n  time('    normalizeRanks', function () {\n    (0, _util.normalizeRanks)(g);\n  });\n  time('    assignRankMinMax', function () {\n    assignRankMinMax(g);\n  });\n  time('    removeEdgeLabelProxies', function () {\n    removeEdgeLabelProxies(g);\n  });\n  time('    normalize.run', function () {\n    _normalize2.default.run(g);\n  });\n  time('    parentDummyChains', function () {\n    (0, _parentDummyChains2.default)(g);\n  });\n  time('    addBorderSegments', function () {\n    (0, _addBorderSegments2.default)(g);\n  });\n  time('    order', function () {\n    (0, _order2.default)(g);\n  });\n  time('    insertSelfEdges', function () {\n    insertSelfEdges(g);\n  });\n  time('    adjustCoordinateSystem', function () {\n    _coordinateSystem2.default.adjust(g);\n  });\n  time('    position', function () {\n    (0, _position2.default)(g);\n  });\n  time('    positionSelfEdges', function () {\n    positionSelfEdges(g);\n  });\n  time('    removeBorderNodes', function () {\n    removeBorderNodes(g);\n  });\n  time('    normalize.undo', function () {\n    _normalize2.default.undo(g);\n  });\n  time('    fixupEdgeLabelCoords', function () {\n    fixupEdgeLabelCoords(g);\n  });\n  time('    undoCoordinateSystem', function () {\n    _coordinateSystem2.default.undo(g);\n  });\n  time('    translateGraph', function () {\n    translateGraph(g);\n  });\n  time('    assignNodeIntersects', function () {\n    assignNodeIntersects(g);\n  });\n  time('    reversePoints', function () {\n    reversePointsForReversedEdges(g);\n  });\n  time('    acyclic.undo', function () {\n    _acyclic2.default.undo(g);\n  });\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _lodash2.default.each(inputGraph.nodes(), function (v) {\n    var inputLabel = inputGraph.node(v);\n    var layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _lodash2.default.each(inputGraph.edges(), function (e) {\n    var inputLabel = inputGraph.edge(e);\n    var layoutLabel = layoutGraph.edge(e);\n\n    inputLabel.points = layoutLabel.points;\n    if (_lodash2.default.has(layoutLabel, 'x')) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = ['nodesep', 'edgesep', 'ranksep', 'marginx', 'marginy'];\nvar graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: 'tb' };\nvar graphAttrs = ['acyclicer', 'ranker', 'rankdir', 'align'];\nvar nodeNumAttrs = ['width', 'height'];\nvar nodeDefaults = { width: 0, height: 0 };\nvar edgeNumAttrs = ['minlen', 'weight', 'width', 'height', 'labeloffset'];\nvar edgeDefaults = {\n  minlen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labeloffset: 10,\n  labelpos: 'r'\n};\nvar edgeAttrs = ['labelpos'];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new _graphlib.Graph({ multigraph: true, compound: true });\n  var graph = canonicalize(inputGraph.graph());\n\n  g.setGraph(_lodash2.default.merge({}, graphDefaults, selectNumberAttrs(graph, graphNumAttrs), _lodash2.default.pick(graph, graphAttrs)));\n\n  _lodash2.default.each(inputGraph.nodes(), function (v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _lodash2.default.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _lodash2.default.each(inputGraph.edges(), function (e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(e, _lodash2.default.merge({}, edgeDefaults, selectNumberAttrs(edge, edgeNumAttrs), _lodash2.default.pick(edge, edgeAttrs)));\n  });\n\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _lodash2.default.each(g.edges(), function (e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== 'c') {\n      if (graph.rankdir === 'TB' || graph.rankdir === 'BT') {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _lodash2.default.each(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v);\n      var w = g.node(e.w);\n      var label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n      _util2.default.addDummyNode(g, 'edge-proxy', label, '_ep');\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _lodash2.default.each(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      maxRank = Math.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _lodash2.default.each(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'edge-proxy') {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY;\n  var maxX = 0;\n  var minY = Number.POSITIVE_INFINITY;\n  var maxY = 0;\n  var graphLabel = g.graph();\n  var marginX = graphLabel.marginx || 0;\n  var marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x;\n    var y = attrs.y;\n    var w = attrs.width;\n    var h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _lodash2.default.each(g.nodes(), function (v) {\n    getExtremes(g.node(v));\n  });\n  _lodash2.default.each(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_lodash2.default.has(edge, 'x')) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _lodash2.default.each(g.nodes(), function (v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _lodash2.default.each(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _lodash2.default.each(edge.points, function (p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (_lodash2.default.has(edge, 'x')) {\n      edge.x -= minX;\n    }\n    if (_lodash2.default.has(edge, 'y')) {\n      edge.y -= minY;\n    }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _lodash2.default.each(g.edges(), function (e) {\n    var edge = g.edge(e);\n    var nodeV = g.node(e.v);\n    var nodeW = g.node(e.w);\n    var p1 = null;\n    var p2 = null;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift(_util2.default.intersectRect(nodeV, p1));\n    edge.points.push(_util2.default.intersectRect(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _lodash2.default.each(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_lodash2.default.has(edge, 'x')) {\n      if (edge.labelpos === 'l' || edge.labelpos === 'r') {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n        case 'l':\n          edge.x -= edge.width / 2 + edge.labeloffset;break;\n        case 'r':\n          edge.x += edge.width / 2 + edge.labeloffset;break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _lodash2.default.each(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _lodash2.default.each(g.nodes(), function (v) {\n    if (g.children(v).length) {\n      var node = g.node(v);\n      var t = g.node(node.borderTop);\n      var b = g.node(node.borderBottom);\n      var l = g.node(_lodash2.default.last(node.borderLeft));\n      var r = g.node(_lodash2.default.last(node.borderRight));\n\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _lodash2.default.each(g.nodes(), function (v) {\n    if (g.node(v).dummy === 'border') {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _lodash2.default.each(g.edges(), function (e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({ e: e, label: g.edge(e) });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = _util2.default.buildLayerMatrix(g);\n  _lodash2.default.each(layers, function (layer) {\n    var orderShift = 0;\n    _lodash2.default.each(layer, function (v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _lodash2.default.each(node.selfEdges, function (selfEdge) {\n        _util2.default.addDummyNode(g, 'selfedge', {\n          width: selfEdge.label.width,\n          height: selfEdge.label.height,\n          rank: node.rank,\n          order: i + ++orderShift,\n          e: selfEdge.e,\n          label: selfEdge.label\n        }, '_se');\n      });\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _lodash2.default.each(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'selfedge') {\n      var selfNode = g.node(node.e.v);\n      var x = selfNode.x + selfNode.width / 2;\n      var y = selfNode.y;\n      var dx = node.x - x;\n      var dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [{ x: x + 2 * dx / 3, y: y - dy }, { x: x + 5 * dx / 6, y: y - dy }, { x: x + dx, y: y }, { x: x + 5 * dx / 6, y: y + dy }, { x: x + 2 * dx / 3, y: y + dy }];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _lodash2.default.mapValues(_lodash2.default.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _lodash2.default.each(attrs, function (v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}\n\nexports.default = layout;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _greedyFas = __webpack_require__(8);\n\nvar _greedyFas2 = _interopRequireDefault(_greedyFas);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction run(g) {\n  var fas = g.graph().acyclicer === 'greedy' ? (0, _greedyFas2.default)(g, weightFn(g)) : dfsFAS(g);\n  _lodash2.default.each(fas, function (e) {\n    var label = g.edge(e);\n    g.removeEdge(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, _lodash2.default.uniqueId('rev'));\n  });\n\n  function weightFn(g) {\n    return function (e) {\n      return g.edge(e).weight;\n    };\n  }\n}\n\nfunction dfsFAS(g) {\n  var fas = [];\n  var stack = {};\n  var visited = {};\n\n  function dfs(v) {\n    if (_lodash2.default.has(visited, v)) {\n      return;\n    }\n    visited[v] = true;\n    stack[v] = true;\n    _lodash2.default.each(g.outEdges(v), function (e) {\n      if (_lodash2.default.has(stack, e.w)) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n    delete stack[v];\n  }\n\n  _lodash2.default.each(g.nodes(), dfs);\n  return fas;\n}\n\nfunction undo(g) {\n  _lodash2.default.each(g.edges(), function (e) {\n    var label = g.edge(e);\n    if (label.reversed) {\n      g.removeEdge(e);\n\n      var forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n}\n\nexports.default = {\n  run: run,\n  undo: undo\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graphlib = __webpack_require__(2);\n\nvar _list = __webpack_require__(9);\n\nvar _list2 = _interopRequireDefault(_list);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n */\n\nvar DEFAULT_WEIGHT_FN = _lodash2.default.constant(1);\n\nfunction greedyFAS(g, weightFn) {\n  if (g.nodeCount() <= 1) {\n    return [];\n  }\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n\n  // Expand multi-edges\n  return _lodash2.default.flatten(_lodash2.default.map(results, function (e) {\n    return g.outEdges(e.v, e.w);\n  }), true);\n}\n\nfunction doGreedyFAS(g, buckets, zeroIdx) {\n  var results = [];\n  var sources = buckets[buckets.length - 1];\n  var sinks = buckets[0];\n\n  var entry = void 0;\n  while (g.nodeCount()) {\n    while (entry = sinks.dequeue()) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    while (entry = sources.dequeue()) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    if (g.nodeCount()) {\n      for (var i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\n  var results = collectPredecessors ? [] : undefined;\n\n  _lodash2.default.each(g.inEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var uEntry = g.node(edge.v);\n\n    if (collectPredecessors) {\n      results.push({ v: edge.v, w: edge.w });\n    }\n\n    uEntry.out -= weight;\n    assignBucket(buckets, zeroIdx, uEntry);\n  });\n\n  _lodash2.default.each(g.outEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var w = edge.w;\n    var wEntry = g.node(w);\n    wEntry['in'] -= weight;\n    assignBucket(buckets, zeroIdx, wEntry);\n  });\n\n  g.removeNode(entry.v);\n\n  return results;\n}\n\nfunction buildState(g, weightFn) {\n  var fasGraph = new _graphlib.Graph();\n  var maxIn = 0;\n  var maxOut = 0;\n\n  _lodash2.default.each(g.nodes(), function (v) {\n    fasGraph.setNode(v, { v: v, 'in': 0, out: 0 });\n  });\n\n  // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n  _lodash2.default.each(g.edges(), function (e) {\n    var prevWeight = fasGraph.edge(e.v, e.w) || 0;\n    var weight = weightFn(e);\n    var edgeWeight = prevWeight + weight;\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\n    maxOut = Math.max(maxOut, fasGraph.node(e.v).out += weight);\n    maxIn = Math.max(maxIn, fasGraph.node(e.w)['in'] += weight);\n  });\n\n  var buckets = _lodash2.default.range(maxOut + maxIn + 3).map(function () {\n    return new _list2.default();\n  });\n  var zeroIdx = maxIn + 1;\n\n  _lodash2.default.each(fasGraph.nodes(), function (v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n  });\n\n  return { graph: fasGraph, buckets: buckets, zeroIdx: zeroIdx };\n}\n\nfunction assignBucket(buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry['in']) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry['in'] + zeroIdx].enqueue(entry);\n  }\n}\n\nexports.default = greedyFAS;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\n\nfunction List() {\n  var sentinel = {};\n  sentinel._next = sentinel._prev = sentinel;\n  this._sentinel = sentinel;\n}\n\nList.prototype.dequeue = function () {\n  var sentinel = this._sentinel;\n  var entry = sentinel._prev;\n  if (entry !== sentinel) {\n    unlink(entry);\n    return entry;\n  }\n};\n\nList.prototype.enqueue = function (entry) {\n  var sentinel = this._sentinel;\n  if (entry._prev && entry._next) {\n    unlink(entry);\n  }\n  entry._next = sentinel._next;\n  sentinel._next._prev = entry;\n  sentinel._next = entry;\n  entry._prev = sentinel;\n};\n\nList.prototype.toString = function () {\n  var strs = [];\n  var sentinel = this._sentinel;\n  var curr = sentinel._prev;\n  while (curr !== sentinel) {\n    strs.push(JSON.stringify(curr, filterOutLinks));\n    curr = curr._prev;\n  }\n  return '[' + strs.join(', ') + ']';\n};\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== '_next' && k !== '_prev') {\n    return v;\n  }\n}\n\nexports.default = List;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\nfunction run(g) {\n  g.graph().dummyChains = [];\n  _lodash2.default.each(g.edges(), function (edge) {\n    normalizeEdge(g, edge);\n  });\n}\n\nfunction normalizeEdge(g, e) {\n  var v = e.v;\n  var vRank = g.node(v).rank;\n  var w = e.w;\n  var wRank = g.node(w).rank;\n  var name = e.name;\n  var edgeLabel = g.edge(e);\n  var labelRank = edgeLabel.labelRank;\n\n  if (wRank === vRank + 1) return;\n\n  g.removeEdge(e);\n\n  var dummy = void 0;\n  var attrs = void 0;\n  var i = void 0;\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      width: 0,\n      height: 0,\n      edgeLabel: edgeLabel,\n      edgeObj: e,\n      rank: vRank\n    };\n    dummy = _util2.default.addDummyNode(g, 'edge', attrs, '_d');\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      attrs.dummy = 'edge-label';\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy);\n    }\n    v = dummy;\n  }\n\n  g.setEdge(v, w, { weight: edgeLabel.weight }, name);\n}\n\nfunction undo(g) {\n  _lodash2.default.each(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var origLabel = node.edgeLabel;\n    var w = null;\n    g.setEdge(node.edgeObj, origLabel);\n    while (node.dummy) {\n      w = g.successors(v)[0];\n      g.removeNode(v);\n      origLabel.points.push({ x: node.x, y: node.y });\n      if (node.dummy === 'edge-label') {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n      v = w;\n      node = g.node(v);\n    }\n  });\n}\n\nexports.default = {\n  run: run,\n  undo: undo\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _util = __webpack_require__(3);\n\nvar _feasibleTree = __webpack_require__(4);\n\nvar _feasibleTree2 = _interopRequireDefault(_feasibleTree);\n\nvar _networkSimplex = __webpack_require__(12);\n\nvar _networkSimplex2 = _interopRequireDefault(_networkSimplex);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\nfunction rank(g) {\n  switch (g.graph().ranker) {\n    case 'network-simplex':\n      networkSimplexRanker(g);break;\n    case 'tight-tree':\n      tightTreeRanker(g);break;\n    case 'longest-path':\n      longestPathRanker(g);break;\n    default:\n      networkSimplexRanker(g);\n  }\n}\n\n// A fast and simple ranker, but results are far from optimal.\nvar longestPathRanker = _util.longestPath;\n\nfunction tightTreeRanker(g) {\n  (0, _util.longestPath)(g);\n  (0, _feasibleTree2.default)(g);\n}\n\nfunction networkSimplexRanker(g) {\n  (0, _networkSimplex2.default)(g);\n}\n\nexports.default = rank;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graphlib = __webpack_require__(2);\n\nvar _feasibleTree = __webpack_require__(4);\n\nvar _feasibleTree2 = _interopRequireDefault(_feasibleTree);\n\nvar _util = __webpack_require__(3);\n\nvar _util2 = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar preorder = _graphlib.alg.preorder,\n    postorder = _graphlib.alg.postorder;\n\n// Expose some internals for testing purposes\n\nnetworkSimplex.initLowLimValues = initLowLimValues;\nnetworkSimplex.initCutValues = initCutValues;\nnetworkSimplex.calcCutValue = calcCutValue;\nnetworkSimplex.leaveEdge = leaveEdge;\nnetworkSimplex.enterEdge = enterEdge;\nnetworkSimplex.exchangeEdges = exchangeEdges;\n\n/*\n * The network simplex algorithm assigns ranks to each node in the input graph\n * and iteratively improves the ranking to reduce the length of edges.\n *\n * Preconditions:\n *\n *    1. The input graph must be a DAG.\n *    2. All nodes in the graph must have an object value.\n *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes.\n *\n * Postconditions:\n *\n *    1. All nodes in the graph will have an assigned \"rank\" attribute that has\n *       been optimized by the network simplex algorithm. Ranks start at 0.\n *\n *\n * A rough sketch of the algorithm is as follows:\n *\n *    1. Assign initial ranks to each node. We use the longest path algorithm,\n *       which assigns ranks to the lowest position possible. In general this\n *       leads to very wide bottom ranks and unnecessarily long edges.\n *    2. Construct a feasible tight tree. A tight tree is one such that all\n *       edges in the tree have no slack (difference between length of edge\n *       and minlen for the edge). This by itself greatly improves the assigned\n *       rankings by shorting edges.\n *    3. Iteratively find edges that have negative cut values. Generally a\n *       negative cut value indicates that the edge could be removed and a new\n *       tree edge could be added to produce a more compact graph.\n *\n * Much of the algorithms here are derived from Gansner, et al., \"A Technique\n * for Drawing Directed Graphs.\" The structure of the file roughly follows the\n * structure of the overall algorithm.\n */\nfunction networkSimplex(g) {\n  g = (0, _util2.simplify)(g);\n  (0, _util.longestPath)(g);\n  var t = (0, _feasibleTree2.default)(g);\n  initLowLimValues(t);\n  initCutValues(t, g);\n\n  var e = void 0;\n  var f = void 0;\n  while (e = leaveEdge(t)) {\n    f = enterEdge(t, g, e);\n    exchangeEdges(t, g, e, f);\n  }\n}\n\n/*\n * Initializes cut values for all edges in the tree.\n */\nfunction initCutValues(t, g) {\n  var vs = postorder(t, t.nodes());\n  vs = vs.slice(0, vs.length - 1);\n  _lodash2.default.each(vs, function (v) {\n    assignCutValue(t, g, v);\n  });\n}\n\nfunction assignCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  t.edge(child, parent).cutvalue = calcCutValue(t, g, child);\n}\n\n/*\n * Given the tight tree, its graph, and a child in the graph calculate and\n * return the cut value for the edge between the child and its parent.\n */\nfunction calcCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  // True if the child is on the tail end of the edge in the directed graph\n  var childIsTail = true;\n  // The graph's view of the tree edge we're inspecting\n  var graphEdge = g.edge(child, parent);\n  // The accumulated cut value for the edge between this node and its parent\n  var cutValue = 0;\n\n  if (!graphEdge) {\n    childIsTail = false;\n    graphEdge = g.edge(parent, child);\n  }\n\n  cutValue = graphEdge.weight;\n\n  _lodash2.default.each(g.nodeEdges(child), function (e) {\n    var isOutEdge = e.v === child;\n    var other = isOutEdge ? e.w : e.v;\n\n    if (other !== parent) {\n      var pointsToHead = isOutEdge === childIsTail;\n      var otherWeight = g.edge(e).weight;\n\n      cutValue += pointsToHead ? otherWeight : -otherWeight;\n      if (isTreeEdge(t, child, other)) {\n        var otherCutValue = t.edge(child, other).cutvalue;\n        cutValue += pointsToHead ? -otherCutValue : otherCutValue;\n      }\n    }\n  });\n\n  return cutValue;\n}\n\nfunction initLowLimValues(tree, root) {\n  if (arguments.length < 2) {\n    root = tree.nodes()[0];\n  }\n  dfsAssignLowLim(tree, {}, 1, root);\n}\n\nfunction dfsAssignLowLim(tree, visited, nextLim, v, parent) {\n  var low = nextLim;\n  var label = tree.node(v);\n\n  visited[v] = true;\n  _lodash2.default.each(tree.neighbors(v), function (w) {\n    if (!_lodash2.default.has(visited, w)) {\n      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v);\n    }\n  });\n\n  label.low = low;\n  label.lim = nextLim++;\n  if (parent) {\n    label.parent = parent;\n  } else {\n    // TODO should be able to remove this when we incrementally update low lim\n    delete label.parent;\n  }\n\n  return nextLim;\n}\n\nfunction leaveEdge(tree) {\n  return _lodash2.default.find(tree.edges(), function (e) {\n    return tree.edge(e).cutvalue < 0;\n  });\n}\n\nfunction enterEdge(t, g, edge) {\n  var v = edge.v;\n  var w = edge.w;\n\n  // For the rest of this function we assume that v is the tail and w is the\n  // head, so if we don't have this edge in the graph we should flip it to\n  // match the correct orientation.\n  if (!g.hasEdge(v, w)) {\n    v = edge.w;\n    w = edge.v;\n  }\n\n  var vLabel = t.node(v);\n  var wLabel = t.node(w);\n  var tailLabel = vLabel;\n  var flip = false;\n\n  // If the root is in the tail of the edge then we need to flip the logic that\n  // checks for the head and tail nodes in the candidates function below.\n  if (vLabel.lim > wLabel.lim) {\n    tailLabel = wLabel;\n    flip = true;\n  }\n\n  var candidates = _lodash2.default.filter(g.edges(), function (edge) {\n    return flip === isDescendant(t, t.node(edge.v), tailLabel) && flip !== isDescendant(t, t.node(edge.w), tailLabel);\n  });\n\n  return _lodash2.default.minBy(candidates, function (edge) {\n    return (0, _util.slack)(g, edge);\n  });\n}\n\nfunction exchangeEdges(t, g, e, f) {\n  var v = e.v;\n  var w = e.w;\n  t.removeEdge(v, w);\n  t.setEdge(f.v, f.w, {});\n  initLowLimValues(t);\n  initCutValues(t, g);\n  updateRanks(t, g);\n}\n\nfunction updateRanks(t, g) {\n  var root = _lodash2.default.find(t.nodes(), function (v) {\n    return !g.node(v).parent;\n  });\n  var vs = preorder(t, root);\n  vs = vs.slice(1);\n  _lodash2.default.each(vs, function (v) {\n    var parent = t.node(v).parent;\n    var edge = g.edge(v, parent);\n    var flipped = false;\n\n    if (!edge) {\n      edge = g.edge(parent, v);\n      flipped = true;\n    }\n\n    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen);\n  });\n}\n\n/*\n * Returns true if the edge is in the tree.\n */\nfunction isTreeEdge(tree, u, v) {\n  return tree.hasEdge(u, v);\n}\n\n/*\n * Returns true if the specified node is descendant of the root node per the\n * assigned low and lim attributes in the tree.\n */\nfunction isDescendant(tree, vLabel, rootLabel) {\n  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim;\n}\n\nexports.default = networkSimplex;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parentDummyChains(g) {\n  var postorderNums = postorder(g);\n\n  _lodash2.default.each(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var edgeObj = node.edgeObj;\n    var pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w);\n    var path = pathData.path;\n    var lca = pathData.lca;\n    var pathIdx = 0;\n    var pathV = path[pathIdx];\n    var ascending = true;\n\n    while (v !== edgeObj.w) {\n      node = g.node(v);\n\n      if (ascending) {\n        while ((pathV = path[pathIdx]) !== lca && g.node(pathV).maxRank < node.rank) {\n          pathIdx++;\n        }\n\n        if (pathV === lca) {\n          ascending = false;\n        }\n      }\n\n      if (!ascending) {\n        while (pathIdx < path.length - 1 && g.node(pathV = path[pathIdx + 1]).minRank <= node.rank) {\n          pathIdx++;\n        }\n        pathV = path[pathIdx];\n      }\n\n      g.setParent(v, pathV);\n      v = g.successors(v)[0];\n    }\n  });\n}\n\n// Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\nfunction findPath(g, postorderNums, v, w) {\n  var vPath = [];\n  var wPath = [];\n  var low = Math.min(postorderNums[v].low, postorderNums[w].low);\n  var lim = Math.max(postorderNums[v].lim, postorderNums[w].lim);\n  var parent = void 0;\n  var lca = void 0;\n\n  // Traverse up from v to find the LCA\n  parent = v;\n  do {\n    parent = g.parent(parent);\n    vPath.push(parent);\n  } while (parent && (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n  lca = parent;\n\n  // Traverse from w to LCA\n  parent = w;\n  while ((parent = g.parent(parent)) !== lca) {\n    wPath.push(parent);\n  }\n\n  return { path: vPath.concat(wPath.reverse()), lca: lca };\n}\n\nfunction postorder(g) {\n  var result = {};\n  var lim = 0;\n\n  function dfs(v) {\n    var low = lim;\n    _lodash2.default.each(g.children(v), dfs);\n    result[v] = { low: low, lim: lim++ };\n  }\n  _lodash2.default.each(g.children(), dfs);\n\n  return result;\n}\n\nexports.default = parentDummyChains;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,\n * adds appropriate edges to ensure that all cluster nodes are placed between\n * these boundries, and ensures that the graph is connected.\n *\n * In addition we ensure, through the use of the minlen property, that nodes\n * and subgraph border nodes to not end up on the same rank.\n *\n * Preconditions:\n *\n *    1. Input graph is a DAG\n *    2. Nodes in the input graph has a minlen attribute\n *\n * Postconditions:\n *\n *    1. Input graph is connected.\n *    2. Dummy nodes are added for the tops and bottoms of subgraphs.\n *    3. The minlen attribute for nodes is adjusted to ensure nodes do not\n *       get placed on the same rank as subgraph border nodes.\n *\n * The nesting graph idea comes from Sander, \"Layout of Compound Directed\n * Graphs.\"\n */\nfunction run(g) {\n  var root = _util2.default.addDummyNode(g, 'root', {}, '_root');\n  var depths = treeDepths(g);\n  var height = _lodash2.default.max(_lodash2.default.values(depths)) - 1;\n  var nodeSep = 2 * height + 1;\n\n  g.graph().nestingRoot = root;\n\n  // Multiply minlen by nodeSep to align nodes on non-border ranks.\n  _lodash2.default.each(g.edges(), function (e) {\n    g.edge(e).minlen *= nodeSep;\n  });\n\n  // Calculate a weight that is sufficient to keep subgraphs vertically compact\n  var weight = sumWeights(g) + 1;\n\n  // Create border nodes and link them up\n  _lodash2.default.each(g.children(), function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n  });\n\n  // Save the multiplier for node layers for later removal of empty border\n  // layers.\n  g.graph().nodeRankFactor = nodeSep;\n}\n\nfunction dfs(g, root, nodeSep, weight, height, depths, v) {\n  var children = g.children(v);\n  if (!children.length) {\n    if (v !== root) {\n      g.setEdge(root, v, { weight: 0, minlen: nodeSep });\n    }\n    return;\n  }\n\n  var top = _util2.default.addBorderNode(g, '_bt');\n  var bottom = _util2.default.addBorderNode(g, '_bb');\n  var label = g.node(v);\n\n  g.setParent(top, v);\n  label.borderTop = top;\n  g.setParent(bottom, v);\n  label.borderBottom = bottom;\n\n  _lodash2.default.each(children, function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n\n    var childNode = g.node(child);\n    var childTop = childNode.borderTop ? childNode.borderTop : child;\n    var childBottom = childNode.borderBottom ? childNode.borderBottom : child;\n    var thisWeight = childNode.borderTop ? weight : 2 * weight;\n    var minlen = childTop !== childBottom ? 1 : height - depths[v] + 1;\n\n    g.setEdge(top, childTop, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n\n    g.setEdge(childBottom, bottom, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n  });\n\n  if (!g.parent(v)) {\n    g.setEdge(root, top, { weight: 0, minlen: height + depths[v] });\n  }\n}\n\nfunction treeDepths(g) {\n  var depths = {};\n  function dfs(v, depth) {\n    var children = g.children(v);\n    if (children && children.length) {\n      _lodash2.default.each(children, function (child) {\n        dfs(child, depth + 1);\n      });\n    }\n    depths[v] = depth;\n  }\n  _lodash2.default.each(g.children(), function (v) {\n    dfs(v, 1);\n  });\n  return depths;\n}\n\nfunction sumWeights(g) {\n  return _lodash2.default.reduce(g.edges(), function (acc, e) {\n    return acc + g.edge(e).weight;\n  }, 0);\n}\n\nfunction cleanup(g) {\n  var graphLabel = g.graph();\n  g.removeNode(graphLabel.nestingRoot);\n  delete graphLabel.nestingRoot;\n  _lodash2.default.each(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.nestingEdge) {\n      g.removeEdge(e);\n    }\n  });\n}\n\nexports.default = {\n  run: run,\n  cleanup: cleanup\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addBorderSegments(g) {\n  function dfs(v) {\n    var children = g.children(v);\n    var node = g.node(v);\n    if (children.length) {\n      _lodash2.default.each(children, dfs);\n    }\n\n    if (_lodash2.default.has(node, 'minRank')) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (var rank = node.minRank, maxRank = node.maxRank + 1; rank < maxRank; ++rank) {\n        addBorderNode(g, 'borderLeft', '_bl', v, node, rank);\n        addBorderNode(g, 'borderRight', '_br', v, node, rank);\n      }\n    }\n  }\n\n  _lodash2.default.each(g.children(), dfs);\n}\n\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = { width: 0, height: 0, rank: rank, borderType: prop };\n  var prev = sgNode[prop][rank - 1];\n  var curr = _util2.default.addDummyNode(g, 'border', label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, { weight: 1 });\n  }\n}\n\nexports.default = addBorderSegments;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction adjust(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapWidthHeight(g);\n  }\n}\n\nfunction undo(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'bt' || rankDir === 'rl') {\n    reverseY(g);\n  }\n\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapXY(g);\n    swapWidthHeight(g);\n  }\n}\n\nfunction swapWidthHeight(g) {\n  _lodash2.default.each(g.nodes(), function (v) {\n    swapWidthHeightOne(g.node(v));\n  });\n  _lodash2.default.each(g.edges(), function (e) {\n    swapWidthHeightOne(g.edge(e));\n  });\n}\n\nfunction swapWidthHeightOne(attrs) {\n  var w = attrs.width;\n  attrs.width = attrs.height;\n  attrs.height = w;\n}\n\nfunction reverseY(g) {\n  _lodash2.default.each(g.nodes(), function (v) {\n    reverseYOne(g.node(v));\n  });\n\n  _lodash2.default.each(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _lodash2.default.each(edge.points, reverseYOne);\n    if (_lodash2.default.has(edge, 'y')) {\n      reverseYOne(edge);\n    }\n  });\n}\n\nfunction reverseYOne(attrs) {\n  attrs.y = -attrs.y;\n}\n\nfunction swapXY(g) {\n  _lodash2.default.each(g.nodes(), function (v) {\n    swapXYOne(g.node(v));\n  });\n\n  _lodash2.default.each(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _lodash2.default.each(edge.points, swapXYOne);\n    if (_lodash2.default.has(edge, 'x')) {\n      swapXYOne(edge);\n    }\n  });\n}\n\nfunction swapXYOne(attrs) {\n  var x = attrs.x;\n  attrs.x = attrs.y;\n  attrs.y = x;\n}\n\nexports.default = {\n  adjust: adjust,\n  undo: undo\n};\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graphlib = __webpack_require__(2);\n\nvar _initOrder = __webpack_require__(18);\n\nvar _initOrder2 = _interopRequireDefault(_initOrder);\n\nvar _crossCount = __webpack_require__(19);\n\nvar _crossCount2 = _interopRequireDefault(_crossCount);\n\nvar _sortSubgraph = __webpack_require__(20);\n\nvar _sortSubgraph2 = _interopRequireDefault(_sortSubgraph);\n\nvar _buildLayerGraph = __webpack_require__(24);\n\nvar _buildLayerGraph2 = _interopRequireDefault(_buildLayerGraph);\n\nvar _addSubgraphConstraints = __webpack_require__(25);\n\nvar _addSubgraphConstraints2 = _interopRequireDefault(_addSubgraphConstraints);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Applies heuristics to minimize edge crossings in the graph and sets the best\n * order solution as an order attribute on each node.\n *\n * Pre-conditions:\n *\n *    1. Graph must be DAG\n *    2. Graph nodes must be objects with a \"rank\" attribute\n *    3. Graph edges must have the \"weight\" attribute\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have an \"order\" attribute based on the results of the\n *       algorithm.\n */\nfunction order(g) {\n  var maxRank = _util2.default.maxRank(g);\n  var downLayerGraphs = buildLayerGraphs(g, _lodash2.default.range(1, maxRank + 1), 'inEdges');\n  var upLayerGraphs = buildLayerGraphs(g, _lodash2.default.range(maxRank - 1, -1, -1), 'outEdges');\n\n  var layering = (0, _initOrder2.default)(g);\n  assignOrder(g, layering);\n\n  var bestCC = Number.POSITIVE_INFINITY;\n  var best = void 0;\n\n  for (var i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2);\n\n    layering = _util2.default.buildLayerMatrix(g);\n    var cc = (0, _crossCount2.default)(g, layering);\n    if (cc < bestCC) {\n      lastBest = 0;\n      best = _lodash2.default.cloneDeep(layering);\n      bestCC = cc;\n    }\n  }\n\n  assignOrder(g, best);\n}\n\nfunction buildLayerGraphs(g, ranks, relationship) {\n  return _lodash2.default.map(ranks, function (rank) {\n    return (0, _buildLayerGraph2.default)(g, rank, relationship);\n  });\n}\n\nfunction sweepLayerGraphs(layerGraphs, biasRight) {\n  var cg = new _graphlib.Graph();\n  _lodash2.default.each(layerGraphs, function (lg) {\n    var root = lg.graph().root;\n    var sorted = (0, _sortSubgraph2.default)(lg, root, cg, biasRight);\n    _lodash2.default.each(sorted.vs, function (v, i) {\n      lg.node(v).order = i;\n    });\n    (0, _addSubgraphConstraints2.default)(lg, cg, sorted.vs);\n  });\n}\n\nfunction assignOrder(g, layering) {\n  _lodash2.default.each(layering, function (layer) {\n    _lodash2.default.each(layer, function (v, i) {\n      g.node(v).order = i;\n    });\n  });\n}\n\nexports.default = order;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nfunction initOrder(g) {\n  var visited = {};\n  var simpleNodes = _lodash2.default.filter(g.nodes(), function (v) {\n    return !g.children(v).length;\n  });\n  var maxRank = _lodash2.default.max(_lodash2.default.map(simpleNodes, function (v) {\n    return g.node(v).rank;\n  }));\n  var layers = _lodash2.default.map(_lodash2.default.range(maxRank + 1), function () {\n    return [];\n  });\n\n  function dfs(v) {\n    if (_lodash2.default.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n    _lodash2.default.each(g.successors(v), dfs);\n  }\n\n  var orderedVs = _lodash2.default.sortBy(simpleNodes, function (v) {\n    return g.node(v).rank;\n  });\n  _lodash2.default.each(orderedVs, dfs);\n\n  return layers;\n}\n\nexports.default = initOrder;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * A function that takes a layering (an array of layers, each with an array of\n * ordererd nodes) and a graph and returns a weighted crossing count.\n *\n * Pre-conditions:\n *\n *    1. Input graph must be simple (not a multigraph), directed, and include\n *       only simple edges.\n *    2. Edges in the input graph must have assigned weights.\n *\n * Post-conditions:\n *\n *    1. The graph and layering matrix are left unchanged.\n *\n * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\"\n */\nfunction crossCount(g, layering) {\n  var cc = 0;\n  for (var i = 1; i < layering.length; ++i) {\n    cc += twoLayerCrossCount(g, layering[i - 1], layering[i]);\n  }\n  return cc;\n}\n\nfunction twoLayerCrossCount(g, northLayer, southLayer) {\n  // Sort all of the edges between the north and south layers by their position\n  // in the north layer and then the south. Map these edges to the position of\n  // their head in the south layer.\n  var southPos = _lodash2.default.zipObject(southLayer, _lodash2.default.map(southLayer, function (v, i) {\n    return i;\n  }));\n  var southEntries = _lodash2.default.flatten(_lodash2.default.map(northLayer, function (v) {\n    return _lodash2.default.chain(g.outEdges(v)).map(function (e) {\n      return { pos: southPos[e.w], weight: g.edge(e).weight };\n    }).sortBy('pos').value();\n  }), true);\n\n  // Build the accumulator tree\n  var firstIndex = 1;\n  while (firstIndex < southLayer.length) {\n    firstIndex <<= 1;\n  }\n  var treeSize = 2 * firstIndex - 1;\n  firstIndex -= 1;\n  var tree = _lodash2.default.map(new Array(treeSize), function () {\n    return 0;\n  });\n\n  // Calculate the weighted crossings\n  var cc = 0;\n  _lodash2.default.each(southEntries.forEach(function (entry) {\n    var index = entry.pos + firstIndex;\n    tree[index] += entry.weight;\n    var weightSum = 0;\n    while (index > 0) {\n      if (index % 2) {\n        weightSum += tree[index + 1];\n      }\n      index = index - 1 >> 1;\n      tree[index] += entry.weight;\n    }\n    cc += entry.weight * weightSum;\n  }));\n\n  return cc;\n}\n\nexports.default = crossCount;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _barycenter = __webpack_require__(21);\n\nvar _barycenter2 = _interopRequireDefault(_barycenter);\n\nvar _resolveConflicts = __webpack_require__(22);\n\nvar _resolveConflicts2 = _interopRequireDefault(_resolveConflicts);\n\nvar _sort = __webpack_require__(23);\n\nvar _sort2 = _interopRequireDefault(_sort);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction sortSubgraph(g, v, cg, biasRight) {\n  var movable = g.children(v);\n  var node = g.node(v);\n  var bl = node ? node.borderLeft : undefined;\n  var br = node ? node.borderRight : undefined;\n  var subgraphs = {};\n\n  if (bl) {\n    movable = _lodash2.default.filter(movable, function (w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = (0, _barycenter2.default)(g, movable);\n  _lodash2.default.each(barycenters, function (entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (_lodash2.default.has(subgraphResult, 'barycenter')) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = (0, _resolveConflicts2.default)(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n\n  var result = (0, _sort2.default)(entries, biasRight);\n\n  if (bl) {\n    result.vs = _lodash2.default.flatten([bl, result.vs, br], true);\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]);\n      var brPred = g.node(g.predecessors(br)[0]);\n      if (!_lodash2.default.has(result, 'barycenter')) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter = (result.barycenter * result.weight + blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _lodash2.default.each(entries, function (entry) {\n    entry.vs = _lodash2.default.flatten(entry.vs.map(function (v) {\n      if (subgraphs[v]) {\n        return subgraphs[v].vs;\n      }\n      return v;\n    }), true);\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_lodash2.default.isUndefined(target.barycenter)) {\n    target.barycenter = (target.barycenter * target.weight + other.barycenter * other.weight) / (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}\n\nexports.default = sortSubgraph;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction barycenter(g, movable) {\n  return _lodash2.default.map(movable, function (v) {\n    var inV = g.inEdges(v);\n    if (!inV.length) {\n      return { v: v };\n    } else {\n      var result = _lodash2.default.reduce(inV, function (acc, e) {\n        var edge = g.edge(e);\n        var nodeU = g.node(e.v);\n        return {\n          sum: acc.sum + edge.weight * nodeU.order,\n          weight: acc.weight + edge.weight\n        };\n      }, { sum: 0, weight: 0 });\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight\n      };\n    }\n  });\n}\n\nexports.default = barycenter;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts(entries, cg) {\n  var mappedEntries = {};\n  _lodash2.default.each(entries, function (entry, i) {\n    var tmp = mappedEntries[entry.v] = {\n      indegree: 0,\n      'in': [],\n      out: [],\n      vs: [entry.v],\n      i: i\n    };\n    if (!_lodash2.default.isUndefined(entry.barycenter)) {\n      tmp.barycenter = entry.barycenter;\n      tmp.weight = entry.weight;\n    }\n  });\n\n  _lodash2.default.each(cg.edges(), function (e) {\n    var entryV = mappedEntries[e.v];\n    var entryW = mappedEntries[e.w];\n    if (!_lodash2.default.isUndefined(entryV) && !_lodash2.default.isUndefined(entryW)) {\n      entryW.indegree++;\n      entryV.out.push(mappedEntries[e.w]);\n    }\n  });\n\n  var sourceSet = _lodash2.default.filter(mappedEntries, function (entry) {\n    return !entry.indegree;\n  });\n\n  return doResolveConflicts(sourceSet);\n}\n\nfunction doResolveConflicts(sourceSet) {\n  var entries = [];\n\n  function handleIn(vEntry) {\n    return function (uEntry) {\n      if (uEntry.merged) {\n        return;\n      }\n      if (_lodash2.default.isUndefined(uEntry.barycenter) || _lodash2.default.isUndefined(vEntry.barycenter) || uEntry.barycenter >= vEntry.barycenter) {\n        mergeEntries(vEntry, uEntry);\n      }\n    };\n  }\n\n  function handleOut(vEntry) {\n    return function (wEntry) {\n      wEntry['in'].push(vEntry);\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry);\n      }\n    };\n  }\n\n  while (sourceSet.length) {\n    var entry = sourceSet.pop();\n    entries.push(entry);\n    _lodash2.default.each(entry['in'].reverse(), handleIn(entry));\n    _lodash2.default.each(entry.out, handleOut(entry));\n  }\n\n  return _lodash2.default.chain(entries).filter(function (entry) {\n    return !entry.merged;\n  }).map(function (entry) {\n    return _lodash2.default.pick(entry, ['vs', 'i', 'barycenter', 'weight']);\n  }).value();\n}\n\nfunction mergeEntries(target, source) {\n  var sum = 0;\n  var weight = 0;\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight;\n    weight += target.weight;\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight;\n    weight += source.weight;\n  }\n\n  target.vs = source.vs.concat(target.vs);\n  target.barycenter = sum / weight;\n  target.weight = weight;\n  target.i = Math.min(source.i, target.i);\n  source.merged = true;\n}\n\nexports.default = resolveConflicts;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction sort(entries, biasRight) {\n  var parts = _util2.default.partition(entries, function (entry) {\n    return _lodash2.default.has(entry, 'barycenter');\n  });\n  var sortable = parts.lhs;\n  var unsortable = _lodash2.default.sortBy(parts.rhs, function (entry) {\n    return -entry.i;\n  });\n  var vs = [];\n  var sum = 0;\n  var weight = 0;\n  var vsIndex = 0;\n\n  sortable.sort(compareWithBias(!!biasRight));\n\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\n  _lodash2.default.each(sortable, function (entry) {\n    vsIndex += entry.vs.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter * entry.weight;\n    weight += entry.weight;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n\n  var result = { vs: _lodash2.default.flatten(vs, true) };\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n  return result;\n}\n\nfunction consumeUnsortable(vs, unsortable, index) {\n  var last = void 0;\n  while (unsortable.length && (last = _lodash2.default.last(unsortable)).i <= index) {\n    unsortable.pop();\n    vs.push(last.vs);\n    index++;\n  }\n  return index;\n}\n\nfunction compareWithBias(bias) {\n  return function (entryV, entryW) {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1;\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1;\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n}\n\nexports.default = sort;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graphlib = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Constructs a graph that can be used to sort a layer of nodes. The graph will\n * contain all base and subgraph nodes from the request layer in their original\n * hierarchy and any edges that are incident on these nodes and are of the type\n * requested by the \"relationship\" parameter.\n *\n * Nodes from the requested rank that do not have parents are assigned a root\n * node in the output graph, which is set in the root graph attribute. This\n * makes it easy to walk the hierarchy of movable nodes during ordering.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG\n *    2. Base nodes in the input graph have a rank attribute\n *    3. Subgraph nodes in the input graph has minRank and maxRank attributes\n *    4. Edges have an assigned weight\n *\n * Post-conditions:\n *\n *    1. Output graph has all nodes in the movable rank with preserved\n *       hierarchy.\n *    2. Root nodes in the movable layer are made children of the node\n *       indicated by the root attribute of the graph.\n *    3. Non-movable nodes incident on movable nodes, selected by the\n *       relationship parameter, are included in the graph (without hierarchy).\n *    4. Edges incident on movable nodes, selected by the relationship\n *       parameter, are added to the output graph.\n *    5. The weights for copied edges are aggregated as need, since the output\n *       graph is not a multi-graph.\n */\nfunction buildLayerGraph(g, rank, relationship) {\n  var root = createRootNode(g);\n  var result = new _graphlib.Graph({ compound: true }).setGraph({ root: root }).setDefaultNodeLabel(function (v) {\n    return g.node(v);\n  });\n\n  _lodash2.default.each(g.nodes(), function (v) {\n    var node = g.node(v);\n    var parent = g.parent(v);\n\n    if (node.rank === rank || node.minRank <= rank && rank <= node.maxRank) {\n      result.setNode(v);\n      result.setParent(v, parent || root);\n\n      // This assumes we have only short edges!\n      _lodash2.default.each(g[relationship](v), function (e) {\n        var u = e.v === v ? e.w : e.v;\n        var edge = result.edge(u, v);\n        var weight = !_lodash2.default.isUndefined(edge) ? edge.weight : 0;\n        result.setEdge(u, v, { weight: g.edge(e).weight + weight });\n      });\n\n      if (_lodash2.default.has(node, 'minRank')) {\n        result.setNode(v, {\n          borderLeft: node.borderLeft[rank],\n          borderRight: node.borderRight[rank]\n        });\n      }\n    }\n  });\n\n  return result;\n}\n\nfunction createRootNode(g) {\n  var v = void 0;\n  while (g.hasNode(v = _lodash2.default.uniqueId('_root'))) {}\n  return v;\n}\n\nexports.default = buildLayerGraph;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addSubgraphConstraints(g, cg, vs) {\n  var prev = {};\n  var rootPrev = void 0;\n\n  _lodash2.default.each(vs, function (v) {\n    var child = g.parent(v);\n    var parent = void 0;\n    var prevChild = void 0;\n    while (child) {\n      parent = g.parent(child);\n      if (parent) {\n        prevChild = prev[parent];\n        prev[parent] = child;\n      } else {\n        prevChild = rootPrev;\n        rootPrev = child;\n      }\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child);\n        return;\n      }\n      child = parent;\n    }\n  });\n\n  /*\n  function dfs(v) {\n    const children = v ? g.children(v) : g.children();\n    if (children.length) {\n      const min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.each(children, function(child) {\n        const childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n}\n\nexports.default = addSubgraphConstraints;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _bk = __webpack_require__(27);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction position(g) {\n  g = _util2.default.asNonCompoundGraph(g);\n\n  positionY(g);\n  _lodash2.default.each((0, _bk.positionX)(g), function (x, v) {\n    g.node(v).x = x;\n  });\n}\n\nfunction positionY(g) {\n  var layering = _util2.default.buildLayerMatrix(g);\n  var rankSep = g.graph().ranksep;\n  var prevY = 0;\n  _lodash2.default.each(layering, function (layer) {\n    var maxHeight = _lodash2.default.max(_lodash2.default.map(layer, function (v) {\n      return g.node(v).height;\n    }));\n    _lodash2.default.each(layer, function (v) {\n      g.node(v).y = prevY + maxHeight / 2;\n    });\n    prevY += maxHeight + rankSep;\n  });\n}\n\nexports.default = position;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.positionX = positionX;\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graphlib = __webpack_require__(2);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * This module provides coordinate assignment based on Brandes and Köpf, \"Fast\n * and Simple Horizontal Coordinate Assignment.\"\n */\n\n/*\n * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\"\n * property. A type-1 conflict is one where a non-inner segment crosses an\n * inner segment. An inner segment is an edge with both incident nodes marked\n * with the \"dummy\" property.\n *\n * This algorithm scans layer by layer, starting with the second, for type-1\n * conflicts between the current layer and the previous layer. For each layer\n * it scans the nodes from left to right until it reaches one that is incident\n * on an inner segment. It then scans predecessors to determine if they have\n * edges that cross that inner segment. At the end a final scan is done for all\n * nodes on the current rank to see if they cross the last visited inner\n * segment.\n *\n * This algorithm (safely) assumes that a dummy node will only be incident on a\n * single node in the layers being scanned.\n */\nfunction findType1Conflicts(g, layering) {\n  var conflicts = {};\n\n  function visitLayer(prevLayer, layer) {\n    // last visited node in the previous layer that is incident on an inner\n    // segment.\n    var k0 = 0;\n    // Tracks the last node in this layer scanned for crossings with a type-1\n    // segment.\n    var scanPos = 0;\n    var prevLayerLength = prevLayer.length;\n    var lastNode = _lodash2.default.last(layer);\n\n    _lodash2.default.each(layer, function (v, i) {\n      var w = findOtherInnerSegmentNode(g, v);\n      var k1 = w ? g.node(w).order : prevLayerLength;\n\n      if (w || v === lastNode) {\n        _lodash2.default.each(layer.slice(scanPos, i + 1), function (scanNode) {\n          _lodash2.default.each(g.predecessors(scanNode), function (u) {\n            var uLabel = g.node(u);\n            var uPos = uLabel.order;\n            if ((uPos < k0 || k1 < uPos) && !(uLabel.dummy && g.node(scanNode).dummy)) {\n              addConflict(conflicts, u, scanNode);\n            }\n          });\n        });\n        scanPos = i + 1;\n        k0 = k1;\n      }\n    });\n\n    return layer;\n  }\n\n  _lodash2.default.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findType2Conflicts(g, layering) {\n  var conflicts = {};\n\n  function scan(south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n    var v = void 0;\n    _lodash2.default.each(_lodash2.default.range(southPos, southEnd), function (i) {\n      v = south[i];\n      if (g.node(v).dummy) {\n        _lodash2.default.each(g.predecessors(v), function (u) {\n          var uNode = g.node(u);\n          if (uNode.dummy && (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n            addConflict(conflicts, u, v);\n          }\n        });\n      }\n    });\n  }\n\n  function visitLayer(north, south) {\n    var prevNorthPos = -1;\n    var nextNorthPos = void 0;\n    var southPos = 0;\n\n    _lodash2.default.each(south, function (v, southLookahead) {\n      if (g.node(v).dummy === 'border') {\n        var predecessors = g.predecessors(v);\n        if (predecessors.length) {\n          nextNorthPos = g.node(predecessors[0]).order;\n          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);\n          southPos = southLookahead;\n          prevNorthPos = nextNorthPos;\n        }\n      }\n      scan(south, southPos, south.length, nextNorthPos, north.length);\n    });\n\n    return south;\n  }\n\n  _lodash2.default.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findOtherInnerSegmentNode(g, v) {\n  if (g.node(v).dummy) {\n    return _lodash2.default.find(g.predecessors(v), function (u) {\n      return g.node(u).dummy;\n    });\n  }\n}\n\nfunction addConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  var conflictsV = conflicts[v];\n  if (!conflictsV) {\n    conflicts[v] = conflictsV = {};\n  }\n  conflictsV[w] = true;\n}\n\nfunction hasConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return _lodash2.default.has(conflicts[v], w);\n}\n\n/*\n * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n * attempts to align a node with one of its median neighbors. If the edge\n * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n * If a previous node has already formed a block with a node after the node\n * we're trying to form a block with, we also ignore that possibility - our\n * blocks would be split in that scenario.\n */\nfunction verticalAlignment(g, layering, conflicts, neighborFn) {\n  var root = {};\n  var align = {};\n  var pos = {};\n\n  // We cache the position here based on the layering because the graph and\n  // layering may be out of sync. The layering matrix is manipulated to\n  // generate different extreme alignments.\n  _lodash2.default.each(layering, function (layer) {\n    _lodash2.default.each(layer, function (v, order) {\n      root[v] = v;\n      align[v] = v;\n      pos[v] = order;\n    });\n  });\n\n  _lodash2.default.each(layering, function (layer) {\n    var prevIdx = -1;\n    _lodash2.default.each(layer, function (v) {\n      var ws = neighborFn(v);\n      if (ws.length) {\n        ws = _lodash2.default.sortBy(ws, function (w) {\n          return pos[w];\n        });\n        var mp = (ws.length - 1) / 2;\n        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n          var w = ws[i];\n          if (align[v] === v && prevIdx < pos[w] && !hasConflict(conflicts, v, w)) {\n            align[w] = v;\n            align[v] = root[v] = root[w];\n            prevIdx = pos[w];\n          }\n        }\n      }\n    });\n  });\n\n  return { root: root, align: align };\n}\n\nfunction horizontalCompaction(g, layering, root, align, reverseSep) {\n  // This portion of the algorithm differs from BK due to a number of problems.\n  // Instead of their algorithm we construct a new block graph and do two\n  // sweeps. The first sweep places blocks with the smallest possible\n  // coordinates. The second sweep removes unused space by moving blocks to the\n  // greatest coordinates without violating separation.\n  var xs = {};\n  var blockG = buildBlockGraph(g, layering, root, reverseSep);\n\n  // First pass, assign smallest coordinates via DFS\n  var visited = {};\n  function pass1(v) {\n    if (!_lodash2.default.has(visited, v)) {\n      visited[v] = true;\n      xs[v] = _lodash2.default.reduce(blockG.inEdges(v), function (max, e) {\n        pass1(e.v);\n        return Math.max(max, xs[e.v] + blockG.edge(e));\n      }, 0);\n    }\n  }\n  _lodash2.default.each(blockG.nodes(), pass1);\n\n  var borderType = reverseSep ? 'borderLeft' : 'borderRight';\n  function pass2(v) {\n    if (visited[v] !== 2) {\n      visited[v]++;\n      var node = g.node(v);\n      var min = _lodash2.default.reduce(blockG.outEdges(v), function (min, e) {\n        pass2(e.w);\n        return Math.min(min, xs[e.w] - blockG.edge(e));\n      }, Number.POSITIVE_INFINITY);\n      if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n        xs[v] = Math.max(xs[v], min);\n      }\n    }\n  }\n  _lodash2.default.each(blockG.nodes(), pass2);\n\n  // Assign x coordinates to all nodes\n  _lodash2.default.each(align, function (v) {\n    xs[v] = xs[root[v]];\n  });\n\n  return xs;\n}\n\nfunction buildBlockGraph(g, layering, root, reverseSep) {\n  var blockGraph = new _graphlib.Graph();\n  var graphLabel = g.graph();\n  var sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep);\n\n  _lodash2.default.each(layering, function (layer) {\n    var u = void 0;\n    _lodash2.default.each(layer, function (v) {\n      var vRoot = root[v];\n      blockGraph.setNode(vRoot);\n      if (u) {\n        var uRoot = root[u];\n        var prevMax = blockGraph.edge(uRoot, vRoot);\n        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));\n      }\n      u = v;\n    });\n  });\n\n  return blockGraph;\n}\n\n/*\n * Returns the alignment that has the smallest width of the given alignments.\n */\nfunction findSmallestWidthAlignment(g, xss) {\n  return _lodash2.default.minBy(_lodash2.default.values(xss), function (xs) {\n    var min = (_lodash2.default.minBy(_lodash2.default.toPairs(xs), function (pair) {\n      return pair[1] - width(g, pair[0]) / 2;\n    }) || ['k', 0])[1];\n    var max = (_lodash2.default.maxBy(_lodash2.default.toPairs(xs), function (pair) {\n      return pair[1] + width(g, pair[0]) / 2;\n    }) || ['k', 0])[1];\n    return max - min;\n  });\n}\n\n/*\n * Align the coordinates of each of the layout alignments such that\n * left-biased alignments have their minimum coordinate at the same point as\n * the minimum coordinate of the smallest width alignment and right-biased\n * alignments have their maximum coordinate at the same point as the maximum\n * coordinate of the smallest width alignment.\n */\nfunction alignCoordinates(xss, alignTo) {\n  var alignToMin = _lodash2.default.min(_lodash2.default.values(alignTo));\n  var alignToMax = _lodash2.default.max(_lodash2.default.values(alignTo));\n\n  _lodash2.default.each(['u', 'd'], function (vert) {\n    _lodash2.default.each(['l', 'r'], function (horiz) {\n      var alignment = vert + horiz;\n      var xs = xss[alignment];\n      if (xs === alignTo) {\n        return;\n      }\n      var delta = horiz === 'l' ? alignToMin - _lodash2.default.min(_lodash2.default.values(xs)) : alignToMax - _lodash2.default.max(_lodash2.default.values(xs));\n      if (delta) {\n        xss[alignment] = _lodash2.default.mapValues(xs, function (x) {\n          return x + delta;\n        });\n      }\n    });\n  });\n}\n\nfunction balance(xss, align) {\n  return _lodash2.default.mapValues(xss.ul, function (ignore, v) {\n    if (align) {\n      return xss[align.toLowerCase()][v];\n    } else {\n      var xs = _lodash2.default.sortBy(_lodash2.default.map(xss, v));\n      return (xs[1] + xs[2]) / 2;\n    }\n  });\n}\n\nfunction positionX(g) {\n  var layering = _util2.default.buildLayerMatrix(g);\n  var conflicts = _lodash2.default.merge(findType1Conflicts(g, layering), findType2Conflicts(g, layering));\n\n  var xss = {};\n  var adjustedLayering = void 0;\n  _lodash2.default.each(['u', 'd'], function (vert) {\n    adjustedLayering = vert === 'u' ? layering : _lodash2.default.values(layering).reverse();\n    _lodash2.default.each(['l', 'r'], function (horiz) {\n      if (horiz === 'r') {\n        adjustedLayering = _lodash2.default.map(adjustedLayering, function (inner) {\n          return _lodash2.default.values(inner).reverse();\n        });\n      }\n\n      var neighborFn = _lodash2.default.bind(vert === 'u' ? g.predecessors : g.successors, g);\n      var align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);\n      var xs = horizontalCompaction(g, adjustedLayering, align.root, align.align, horiz === 'r');\n      if (horiz === 'r') {\n        xs = _lodash2.default.mapValues(xs, function (x) {\n          return -x;\n        });\n      }\n      xss[vert + horiz] = xs;\n    });\n  });\n\n  var smallestWidth = findSmallestWidthAlignment(g, xss);\n  alignCoordinates(xss, smallestWidth);\n  return balance(xss, g.graph().align);\n}\n\nfunction sep(nodeSep, edgeSep, reverseSep) {\n  return function (g, v, w) {\n    var vLabel = g.node(v);\n    var wLabel = g.node(w);\n    var sum = 0;\n    var delta = void 0;\n\n    sum += vLabel.width / 2;\n    if (_lodash2.default.has(vLabel, 'labelpos')) {\n      switch (vLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = -vLabel.width / 2;break;\n        case 'r':\n          delta = vLabel.width / 2;break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;\n\n    sum += wLabel.width / 2;\n    if (_lodash2.default.has(wLabel, 'labelpos')) {\n      switch (wLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = wLabel.width / 2;break;\n        case 'r':\n          delta = -wLabel.width / 2;break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    return sum;\n  };\n}\n\nfunction width(g, v) {\n  return g.node(v).width;\n}\n\nexports.default = {\n  positionX: positionX,\n  findType1Conflicts: findType1Conflicts,\n  findType2Conflicts: findType2Conflicts,\n  addConflict: addConflict,\n  hasConflict: hasConflict,\n  verticalAlignment: verticalAlignment,\n  horizontalCompaction: horizontalCompaction,\n  alignCoordinates: alignCoordinates,\n  findSmallestWidthAlignment: findSmallestWidthAlignment,\n  balance: balance\n};\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graphlib = __webpack_require__(2);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* istanbul ignore next */\nfunction debugOrdering(g) {\n  var layerMatrix = _util2.default.buildLayerMatrix(g);\n\n  var h = new _graphlib.Graph({ compound: true, multigraph: true }).setGraph({});\n\n  _lodash2.default.each(g.nodes(), function (v) {\n    h.setNode(v, { label: v });\n    h.setParent(v, 'layer' + g.node(v).rank);\n  });\n\n  _lodash2.default.each(g.edges(), function (e) {\n    h.setEdge(e.v, e.w, {}, e.name);\n  });\n\n  _lodash2.default.each(layerMatrix, function (layer, i) {\n    var layerV = 'layer' + i;\n    h.setNode(layerV, { rank: 'same' });\n    _lodash2.default.reduce(layer, function (u, v) {\n      h.setEdge(u, v, { style: 'invis' });\n      return v;\n    });\n  });\n\n  return h;\n}\n\nexports.default = {\n  debugOrdering: debugOrdering\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"name\":\"dagre-layout\",\"version\":\"0.7.9\",\"description\":\"Graph layout for JavaScript\",\"author\":\"Tyler Long <tyler4long@gmail.com>\",\"main\":\"dist/dagre-layout.js\",\"keywords\":[\"graph\",\"layout\",\"dagre\"],\"scripts\":{\"lint\":\"standard\",\"jest\":\"jest --coverage\",\"karma\":\"node -r babel-register node_modules/.bin/karma start\",\"test\":\"yarn lint && yarn jest && yarn karma --single-run\",\"bench\":\"node -r babel-register src/bench.js\",\"build\":\"node -r babel-register node_modules/.bin/webpack --progress --colors\",\"build:watch\":\"yarn build --watch\",\"upgrade\":\"yarn-upgrade-all\"},\"dependencies\":{\"graphlib\":\"^2.1.1\",\"lodash\":\"^4.17.4\"},\"devDependencies\":{\"babel-core\":\"^6.26.0\",\"babel-loader\":\"^7.1.2\",\"babel-preset-env\":\"^1.6.0\",\"babel-preset-es2015\":\"^6.24.1\",\"benchmark\":\"^2.1.4\",\"chai\":\"^4.1.2\",\"coveralls\":\"^2.13.1\",\"jest\":\"^21.0.1\",\"karma\":\"^1.7.1\",\"karma-chrome-launcher\":\"^2.2.0\",\"karma-firefox-launcher\":\"^1.0.1\",\"karma-mocha\":\"^1.3.0\",\"karma-safari-launcher\":\"^1.0.0\",\"mocha\":\"^3.5.0\",\"sprintf\":\"^0.1.5\",\"standard\":\"^10.0.3\",\"webpack\":\"^3.5.6\",\"webpack-node-externals\":\"^1.6.0\",\"yarn-upgrade-all\":\"^0.1.8\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/tylingsoft/dagre-layout.git\"},\"license\":\"MIT\",\"files\":[\"dist/\",\"lib/\",\"index.js\"],\"standard\":{\"ignore\":[\"dist/**/*.js\",\"coverage/**/*.js\"]},\"jest\":{\"testRegex\":\"test/.+?-test\\\\.js\",\"testPathIgnorePatterns\":[\"test/bundle-test\\\\.js\"]}}\n\n/***/ })\n/******/ ])[\"default\"];\n});\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction intersectNode(node, point) {\n  return node.intersect(point);\n}\n\nexports.default = intersectNode;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _intersectEllipse = __webpack_require__(6);\n\nvar _intersectEllipse2 = _interopRequireDefault(_intersectEllipse);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction intersectCircle(node, rx, point) {\n  return (0, _intersectEllipse2.default)(node, rx, rx, point);\n}\n\nexports.default = intersectCircle;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _intersectLine = __webpack_require__(34);\n\nvar _intersectLine2 = _interopRequireDefault(_intersectLine);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Returns the point ({x, y}) at which the point argument intersects with the\n * node argument assuming that it has the shape specified by polygon.\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  polyPoints.forEach(function (entry) {\n    minX = Math.min(minX, entry.x);\n    minY = Math.min(minY, entry.y);\n  });\n\n  var left = x1 - node.width / 2 - minX;\n  var top = y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i += 1) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = (0, _intersectLine2.default)(node, point, { x: left + p1.x, y: top + p1.y }, { x: left + p2.x, y: top + p2.y });\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    console.log('NO INTERSECTION FOUND, RETURN NODE CENTER', node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function (p, q) {\n      var pdx = p.x - point.x;\n      var pdy = p.y - point.y;\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\n\n      var qdx = q.x - point.x;\n      var qdy = q.y - point.y;\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n  }\n  return intersections[0];\n}\n\nexports.default = intersectPolygon;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction intersectRect(node, point) {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx = void 0,\n      sy = void 0;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : w * dy / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\nexports.default = intersectRect;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _d = __webpack_require__(3);\n\nvar _d2 = _interopRequireDefault(_d);\n\nvar _graphlib = __webpack_require__(4);\n\nvar _graphlib2 = _interopRequireDefault(_graphlib);\n\nvar _dagreLayout = __webpack_require__(13);\n\nvar _dagreLayout2 = _interopRequireDefault(_dagreLayout);\n\nvar _intersect = __webpack_require__(33);\n\nvar _intersect2 = _interopRequireDefault(_intersect);\n\nvar _render = __webpack_require__(35);\n\nvar _render2 = _interopRequireDefault(_render);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _package = __webpack_require__(48);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  d3: _d2.default,\n  graphlib: _graphlib2.default,\n  dagre: _dagreLayout2.default,\n  intersect: _intersect2.default,\n  render: _render2.default,\n  util: _util2.default,\n  version: _package.version\n};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Includes only the \"core\" of graphlib\nmodule.exports = {\n  Graph: __webpack_require__(5),\n  version: __webpack_require__(22)\n};\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\nmodule.exports = '2.1.1';\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0),\n    Graph = __webpack_require__(5);\n\nmodule.exports = {\n  write: write,\n  read: read\n};\n\nfunction write(g) {\n  var json = {\n    options: {\n      directed: g.isDirected(),\n      multigraph: g.isMultigraph(),\n      compound: g.isCompound()\n    },\n    nodes: writeNodes(g),\n    edges: writeEdges(g)\n  };\n  if (!_.isUndefined(g.graph())) {\n    json.value = _.clone(g.graph());\n  }\n  return json;\n}\n\nfunction writeNodes(g) {\n  return _.map(g.nodes(), function(v) {\n    var nodeValue = g.node(v),\n        parent = g.parent(v),\n        node = { v: v };\n    if (!_.isUndefined(nodeValue)) {\n      node.value = nodeValue;\n    }\n    if (!_.isUndefined(parent)) {\n      node.parent = parent;\n    }\n    return node;\n  });\n}\n\nfunction writeEdges(g) {\n  return _.map(g.edges(), function(e) {\n    var edgeValue = g.edge(e),\n        edge = { v: e.v, w: e.w };\n    if (!_.isUndefined(e.name)) {\n      edge.name = e.name;\n    }\n    if (!_.isUndefined(edgeValue)) {\n      edge.value = edgeValue;\n    }\n    return edge;\n  });\n}\n\nfunction read(json) {\n  var g = new Graph(json.options).setGraph(json.value);\n  _.each(json.nodes, function(entry) {\n    g.setNode(entry.v, entry.value);\n    if (entry.parent) {\n      g.setParent(entry.v, entry.parent);\n    }\n  });\n  _.each(json.edges, function(entry) {\n    g.setEdge({ v: entry.v, w: entry.w, name: entry.name }, entry.value);\n  });\n  return g;\n}\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  components: __webpack_require__(25),\n  dijkstra: __webpack_require__(8),\n  dijkstraAll: __webpack_require__(26),\n  findCycles: __webpack_require__(27),\n  floydWarshall: __webpack_require__(28),\n  isAcyclic: __webpack_require__(29),\n  postorder: __webpack_require__(30),\n  preorder: __webpack_require__(31),\n  prim: __webpack_require__(32),\n  tarjan: __webpack_require__(10),\n  topsort: __webpack_require__(11)\n};\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0);\n\nmodule.exports = components;\n\nfunction components(g) {\n  var visited = {},\n      cmpts = [],\n      cmpt;\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    cmpt.push(v);\n    _.each(g.successors(v), dfs);\n    _.each(g.predecessors(v), dfs);\n  }\n\n  _.each(g.nodes(), function(v) {\n    cmpt = [];\n    dfs(v);\n    if (cmpt.length) {\n      cmpts.push(cmpt);\n    }\n  });\n\n  return cmpts;\n}\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dijkstra = __webpack_require__(8),\n    _ = __webpack_require__(0);\n\nmodule.exports = dijkstraAll;\n\nfunction dijkstraAll(g, weightFunc, edgeFunc) {\n  return _.transform(g.nodes(), function(acc, v) {\n    acc[v] = dijkstra(g, v, weightFunc, edgeFunc);\n  }, {});\n}\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0),\n    tarjan = __webpack_require__(10);\n\nmodule.exports = findCycles;\n\nfunction findCycles(g) {\n  return _.filter(tarjan(g), function(cmpt) {\n    return cmpt.length > 1 || (cmpt.length === 1 && g.hasEdge(cmpt[0], cmpt[0]));\n  });\n}\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0);\n\nmodule.exports = floydWarshall;\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction floydWarshall(g, weightFn, edgeFn) {\n  return runFloydWarshall(g,\n                          weightFn || DEFAULT_WEIGHT_FUNC,\n                          edgeFn || function(v) { return g.outEdges(v); });\n}\n\nfunction runFloydWarshall(g, weightFn, edgeFn) {\n  var results = {},\n      nodes = g.nodes();\n\n  nodes.forEach(function(v) {\n    results[v] = {};\n    results[v][v] = { distance: 0 };\n    nodes.forEach(function(w) {\n      if (v !== w) {\n        results[v][w] = { distance: Number.POSITIVE_INFINITY };\n      }\n    });\n    edgeFn(v).forEach(function(edge) {\n      var w = edge.v === v ? edge.w : edge.v,\n          d = weightFn(edge);\n      results[v][w] = { distance: d, predecessor: v };\n    });\n  });\n\n  nodes.forEach(function(k) {\n    var rowK = results[k];\n    nodes.forEach(function(i) {\n      var rowI = results[i];\n      nodes.forEach(function(j) {\n        var ik = rowI[k];\n        var kj = rowK[j];\n        var ij = rowI[j];\n        var altDistance = ik.distance + kj.distance;\n        if (altDistance < ij.distance) {\n          ij.distance = altDistance;\n          ij.predecessor = kj.predecessor;\n        }\n      });\n    });\n  });\n\n  return results;\n}\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar topsort = __webpack_require__(11);\n\nmodule.exports = isAcyclic;\n\nfunction isAcyclic(g) {\n  try {\n    topsort(g);\n  } catch (e) {\n    if (e instanceof topsort.CycleException) {\n      return false;\n    }\n    throw e;\n  }\n  return true;\n}\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dfs = __webpack_require__(12);\n\nmodule.exports = postorder;\n\nfunction postorder(g, vs) {\n  return dfs(g, vs, \"post\");\n}\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dfs = __webpack_require__(12);\n\nmodule.exports = preorder;\n\nfunction preorder(g, vs) {\n  return dfs(g, vs, \"pre\");\n}\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0),\n    Graph = __webpack_require__(5),\n    PriorityQueue = __webpack_require__(9);\n\nmodule.exports = prim;\n\nfunction prim(g, weightFunc) {\n  var result = new Graph(),\n      parents = {},\n      pq = new PriorityQueue(),\n      v;\n\n  function updateNeighbors(edge) {\n    var w = edge.v === v ? edge.w : edge.v,\n        pri = pq.priority(w);\n    if (pri !== undefined) {\n      var edgeWeight = weightFunc(edge);\n      if (edgeWeight < pri) {\n        parents[w] = v;\n        pq.decrease(w, edgeWeight);\n      }\n    }\n  }\n\n  if (g.nodeCount() === 0) {\n    return result;\n  }\n\n  _.each(g.nodes(), function(v) {\n    pq.add(v, Number.POSITIVE_INFINITY);\n    result.setNode(v);\n  });\n\n  // Start from an arbitrary node\n  pq.decrease(g.nodes()[0], 0);\n\n  var init = false;\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    if (_.has(parents, v)) {\n      result.setEdge(v, parents[v]);\n    } else if (init) {\n      throw new Error(\"Input graph is not connected: \" + g);\n    } else {\n      init = true;\n    }\n\n    g.nodeEdges(v).forEach(updateNeighbors);\n  }\n\n  return result;\n}\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _intersectNode = __webpack_require__(14);\n\nvar _intersectNode2 = _interopRequireDefault(_intersectNode);\n\nvar _intersectCircle = __webpack_require__(15);\n\nvar _intersectCircle2 = _interopRequireDefault(_intersectCircle);\n\nvar _intersectEllipse = __webpack_require__(6);\n\nvar _intersectEllipse2 = _interopRequireDefault(_intersectEllipse);\n\nvar _intersectPolygon = __webpack_require__(16);\n\nvar _intersectPolygon2 = _interopRequireDefault(_intersectPolygon);\n\nvar _intersectRect = __webpack_require__(17);\n\nvar _intersectRect2 = _interopRequireDefault(_intersectRect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  node: _intersectNode2.default,\n  circle: _intersectCircle2.default,\n  ellipse: _intersectEllipse2.default,\n  polygon: _intersectPolygon2.default,\n  rect: _intersectRect2.default\n};\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  var a1 = p2.y - p1.y;\n  var b1 = p1.x - p2.x;\n  var c1 = p2.x * p1.y - p1.x * p2.y;\n\n  // Compute r3 and r4.\n  var r3 = a1 * q1.x + b1 * q1.y + c1;\n  var r4 = a1 * q2.x + b1 * q2.y + c1;\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return; /* DONT_INTERSECT */\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  var a2 = q2.y - q1.y;\n  var b2 = q1.x - q2.x;\n  var c2 = q2.x * q1.y - q1.x * q2.y;\n\n  // Compute r1 and r2\n  var r1 = a2 * p1.x + b2 * p1.y + c2;\n  var r2 = a2 * p2.x + b2 * p2.y + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return; /* DONT_INTERSECT */\n  }\n\n  // Line segments intersect: compute intersection point.\n  var denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return; /* COLLINEAR */\n  }\n\n  var offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  var num = b1 * c2 - b2 * c1;\n  var x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  num = a2 * c1 - a1 * c2;\n  var y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n\nexports.default = intersectLine;\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _dagreLayout = __webpack_require__(13);\n\nvar _positionNodes = __webpack_require__(36);\n\nvar _positionNodes2 = _interopRequireDefault(_positionNodes);\n\nvar _positionEdgeLabels = __webpack_require__(37);\n\nvar _positionEdgeLabels2 = _interopRequireDefault(_positionEdgeLabels);\n\nvar _positionClusters = __webpack_require__(38);\n\nvar _positionClusters2 = _interopRequireDefault(_positionClusters);\n\nvar _createNodes2 = __webpack_require__(39);\n\nvar _createNodes3 = _interopRequireDefault(_createNodes2);\n\nvar _createClusters2 = __webpack_require__(43);\n\nvar _createClusters3 = _interopRequireDefault(_createClusters2);\n\nvar _createEdgeLabels2 = __webpack_require__(44);\n\nvar _createEdgeLabels3 = _interopRequireDefault(_createEdgeLabels2);\n\nvar _createEdgePaths2 = __webpack_require__(45);\n\nvar _createEdgePaths3 = _interopRequireDefault(_createEdgePaths2);\n\nvar _shapes2 = __webpack_require__(46);\n\nvar _shapes3 = _interopRequireDefault(_shapes2);\n\nvar _arrows2 = __webpack_require__(47);\n\nvar _arrows3 = _interopRequireDefault(_arrows2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n  var _createNodes = _createNodes3.default;\n  var _createClusters = _createClusters3.default;\n  var _createEdgeLabels = _createEdgeLabels3.default;\n  var _createEdgePaths = _createEdgePaths3.default;\n  var _shapes = _shapes3.default;\n  var _arrows = _arrows3.default;\n\n  var fn = function fn(svg, g) {\n    preProcessGraph(g);\n\n    var outputGroup = createOrSelectGroup(svg, 'output');\n    var clustersGroup = createOrSelectGroup(outputGroup, 'clusters');\n    var edgePathsGroup = createOrSelectGroup(outputGroup, 'edgePaths');\n    var edgeLabels = _createEdgeLabels(createOrSelectGroup(outputGroup, 'edgeLabels'), g);\n    var nodes = _createNodes(createOrSelectGroup(outputGroup, 'nodes'), g, _shapes);\n\n    (0, _dagreLayout.layout)(g);\n\n    (0, _positionNodes2.default)(nodes, g);\n    (0, _positionEdgeLabels2.default)(edgeLabels, g);\n    _createEdgePaths(edgePathsGroup, g, _arrows);\n\n    var clusters = _createClusters(clustersGroup, g);\n    (0, _positionClusters2.default)(clusters, g);\n\n    postProcessGraph(g);\n  };\n\n  fn.createNodes = function (value) {\n    if (!arguments.length) {\n      return _createNodes;\n    }\n    _createNodes = value;\n    return fn;\n  };\n\n  fn.createClusters = function (value) {\n    if (!arguments.length) {\n      return _createClusters;\n    }\n    _createClusters = value;\n    return fn;\n  };\n\n  fn.createEdgeLabels = function (value) {\n    if (!arguments.length) {\n      return _createEdgeLabels;\n    }\n    _createEdgeLabels = value;\n    return fn;\n  };\n\n  fn.createEdgePaths = function (value) {\n    if (!arguments.length) {\n      return _createEdgePaths;\n    }\n    _createEdgePaths = value;\n    return fn;\n  };\n\n  fn.shapes = function (value) {\n    if (!arguments.length) {\n      return _shapes;\n    }\n    _shapes = value;\n    return fn;\n  };\n\n  fn.arrows = function (value) {\n    if (!arguments.length) {\n      return _arrows;\n    }\n    _arrows = value;\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: 'rect'\n};\n\nvar EDGE_DEFAULT_ATTRS = {\n  arrowhead: 'normal',\n  lineInterpolate: 'linear'\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function (v) {\n    var node = g.node(v);\n    if (!_lodash2.default.has(node, 'label') && !g.children(v).length) {\n      node.label = v;\n    }\n\n    if (_lodash2.default.has(node, 'paddingX')) {\n      _lodash2.default.defaults(node, {\n        paddingLeft: node.paddingX,\n        paddingRight: node.paddingX\n      });\n    }\n\n    if (_lodash2.default.has(node, 'paddingY')) {\n      _lodash2.default.defaults(node, {\n        paddingTop: node.paddingY,\n        paddingBottom: node.paddingY\n      });\n    }\n\n    if (_lodash2.default.has(node, 'padding')) {\n      _lodash2.default.defaults(node, {\n        paddingLeft: node.padding,\n        paddingRight: node.padding,\n        paddingTop: node.padding,\n        paddingBottom: node.padding\n      });\n    }\n\n    _lodash2.default.defaults(node, NODE_DEFAULT_ATTRS);\n\n    _lodash2.default.each(['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom'], function (k) {\n      node[k] = Number(node[k]);\n    });\n\n    // Save dimensions for restore during post-processing\n    if (_lodash2.default.has(node, 'width')) {\n      node._prevWidth = node.width;\n    }\n    if (_lodash2.default.has(node, 'height')) {\n      node._prevHeight = node.height;\n    }\n  });\n\n  g.edges().forEach(function (e) {\n    var edge = g.edge(e);\n    if (!_lodash2.default.has(edge, 'label')) {\n      edge.label = '';\n    }\n    _lodash2.default.defaults(edge, EDGE_DEFAULT_ATTRS);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _lodash2.default.each(g.nodes(), function (v) {\n    var node = g.node(v);\n\n    // Restore original dimensions\n    if (_lodash2.default.has(node, '_prevWidth')) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_lodash2.default.has(node, '_prevHeight')) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select('g.' + name);\n  if (selection.empty()) {\n    selection = root.append('g').attr('class', name);\n  }\n  return selection;\n}\n\nexports.default = render;\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _d = __webpack_require__(3);\n\nvar _d2 = _interopRequireDefault(_d);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction positionNodes(selection, g) {\n  var created = selection.filter(function () {\n    return !_d2.default.select(this).classed('update');\n  });\n\n  function translate(v) {\n    var node = g.node(v);\n    return 'translate(' + node.x + ',' + node.y + ')';\n  }\n\n  created.attr('transform', translate);\n\n  _util2.default.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n\nexports.default = positionNodes;\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _d = __webpack_require__(3);\n\nvar _d2 = _interopRequireDefault(_d);\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction positionEdgeLabels(selection, g) {\n  var created = selection.filter(function () {\n    return !_d2.default.select(this).classed('update');\n  });\n\n  function translate(e) {\n    var edge = g.edge(e);\n    return _lodash2.default.has(edge, 'x') ? 'translate(' + edge.x + ',' + edge.y + ')' : '';\n  }\n\n  created.attr('transform', translate);\n\n  _util2.default.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n\nexports.default = positionEdgeLabels;\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _d = __webpack_require__(3);\n\nvar _d2 = _interopRequireDefault(_d);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction positionClusters(selection, g) {\n  var created = selection.filter(function () {\n    return !_d2.default.select(this).classed('update');\n  });\n\n  function translate(v) {\n    var node = g.node(v);\n    return 'translate(' + node.x + ',' + node.y + ')';\n  }\n\n  created.attr('transform', translate);\n\n  _util2.default.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n\n  _util2.default.applyTransition(created.selectAll('rect'), g).attr('width', function (v) {\n    return g.node(v).width;\n  }).attr('height', function (v) {\n    return g.node(v).height;\n  }).attr('x', function (v) {\n    var node = g.node(v);\n    return -node.width / 2;\n  }).attr('y', function (v) {\n    var node = g.node(v);\n    return -node.height / 2;\n  });\n}\n\nexports.default = positionClusters;\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _d = __webpack_require__(3);\n\nvar _d2 = _interopRequireDefault(_d);\n\nvar _addLabel = __webpack_require__(7);\n\nvar _addLabel2 = _interopRequireDefault(_addLabel);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction createNodes(selection, g, shapes) {\n  var simpleNodes = g.nodes().filter(function (v) {\n    return !_util2.default.isSubgraph(g, v);\n  });\n  var svgNodes = selection.selectAll('g.node').data(simpleNodes, function (v) {\n    return v;\n  }).classed('update', true);\n\n  svgNodes.selectAll('*').remove();\n  svgNodes.enter().append('g').attr('class', 'node').style('opacity', 0);\n  svgNodes.each(function (v) {\n    var node = g.node(v);\n    var thisGroup = _d2.default.select(this);\n    var labelGroup = thisGroup.append('g').attr('class', 'label');\n    var labelDom = (0, _addLabel2.default)(labelGroup, node);\n    var shape = shapes[node.shape];\n    var bbox = _lodash2.default.pick(labelDom.node().getBBox(), 'width', 'height');\n\n    node.elem = this;\n\n    if (node.id) {\n      thisGroup.attr('id', node.id);\n    }\n    if (node.labelId) {\n      labelGroup.attr('id', node.labelId);\n    }\n    _util2.default.applyClass(thisGroup, node['class'], (thisGroup.classed('update') ? 'update ' : '') + 'node');\n\n    if (_lodash2.default.has(node, 'width')) {\n      bbox.width = node.width;\n    }\n    if (_lodash2.default.has(node, 'height')) {\n      bbox.height = node.height;\n    }\n\n    bbox.width += node.paddingLeft + node.paddingRight;\n    bbox.height += node.paddingTop + node.paddingBottom;\n    labelGroup.attr('transform', 'translate(' + (node.paddingLeft - node.paddingRight) / 2 + ',' + (node.paddingTop - node.paddingBottom) / 2 + ')');\n\n    var shapeSvg = shape(_d2.default.select(this), bbox, node);\n    _util2.default.applyStyle(shapeSvg, node.style);\n\n    var shapeBBox = shapeSvg.node().getBBox();\n    node.width = shapeBBox.width;\n    node.height = shapeBBox.height;\n  });\n\n  _util2.default.applyTransition(svgNodes.exit(), g).style('opacity', 0).remove();\n\n  return svgNodes;\n}\n\nexports.default = createNodes;\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append('text');\n\n  var lines = processEscapeSequences(node.label).split('\\n');\n  for (var i = 0; i < lines.length; i += 1) {\n    domNode.append('tspan').attr('xml:space', 'preserve').attr('dy', '1em').attr('x', '1').text(lines[i]);\n  }\n\n  _util2.default.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = '';\n  var escaped = false;\n  var ch = null;\n  for (var i = 0; i < text.length; i += 1) {\n    ch = text[i];\n    if (escaped) {\n      switch (ch) {\n        case 'n':\n          newText += '\\n';break;\n        default:\n          newText += ch;\n      }\n      escaped = false;\n    } else if (ch === '\\\\') {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}\n\nexports.default = addTextLabel;\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addHtmlLabel(root, node) {\n  var fo = root.append('foreignObject').attr('width', '100000');\n\n  var div = fo.append('xhtml:div');\n  div.attr('xmlns', 'http://www.w3.org/1999/xhtml');\n\n  var label = node.label;\n  switch (typeof label === 'undefined' ? 'undefined' : _typeof(label)) {\n    case 'function':\n      div.insert(label);\n      break;\n    case 'object':\n      // Currently we assume this is a DOM object.\n      div.insert(function () {\n        return label;\n      });\n      break;\n    default:\n      div.html(label);\n  }\n\n  _util2.default.applyStyle(div, node.labelStyle);\n  div.style('display', 'inline-block');\n  // Fix for firefox\n  div.style('white-space', 'nowrap');\n\n  var client = div[0][0].getBoundingClientRect();\n  fo.attr('width', client.width).attr('height', client.height);\n\n  return fo;\n}\n\nexports.default = addHtmlLabel;\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addSVGLabel(root, node) {\n  var domNode = root;\n\n  domNode.node().appendChild(node.label);\n\n  _util2.default.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nexports.default = addSVGLabel;\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _d = __webpack_require__(3);\n\nvar _d2 = _interopRequireDefault(_d);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _addLabel = __webpack_require__(7);\n\nvar _addLabel2 = _interopRequireDefault(_addLabel);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction createClusters(selection, g) {\n  var clusters = g.nodes().filter(function (v) {\n    return _util2.default.isSubgraph(g, v);\n  });\n  var svgClusters = selection.selectAll('g.cluster').data(clusters, function (v) {\n    return v;\n  });\n\n  svgClusters.selectAll('*').remove();\n  svgClusters.enter().append('g').attr('class', 'cluster').attr('id', function (v) {\n    var node = g.node(v);\n    return node.id;\n  }).style('opacity', 0);\n\n  _util2.default.applyTransition(svgClusters, g).style('opacity', 1);\n\n  svgClusters.each(function (v) {\n    var node = g.node(v);\n    var thisGroup = _d2.default.select(this);\n    _d2.default.select(this).append('rect');\n    var labelGroup = thisGroup.append('g').attr('class', 'label');\n    (0, _addLabel2.default)(labelGroup, node, node.clusterLabelPos);\n  });\n\n  svgClusters.selectAll('rect').each(function (c) {\n    var node = g.node(c);\n    var domCluster = _d2.default.select(this);\n    _util2.default.applyStyle(domCluster, node.style);\n  });\n\n  _util2.default.applyTransition(svgClusters.exit(), g).style('opacity', 0).remove();\n\n  return svgClusters;\n}\n\nexports.default = createClusters;\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _d = __webpack_require__(3);\n\nvar _d2 = _interopRequireDefault(_d);\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _addLabel = __webpack_require__(7);\n\nvar _addLabel2 = _interopRequireDefault(_addLabel);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction createEdgeLabels(selection, g) {\n  var svgEdgeLabels = selection.selectAll('g.edgeLabel').data(g.edges(), function (e) {\n    return _util2.default.edgeToId(e);\n  }).classed('update', true);\n\n  svgEdgeLabels.selectAll('*').remove();\n  svgEdgeLabels.enter().append('g').classed('edgeLabel', true).style('opacity', 0);\n  svgEdgeLabels.each(function (e) {\n    var edge = g.edge(e);\n    var label = (0, _addLabel2.default)(_d2.default.select(this), g.edge(e), 0, 0).classed('label', true);\n    var bbox = label.node().getBBox();\n\n    if (edge.labelId) {\n      label.attr('id', edge.labelId);\n    }\n    if (!_lodash2.default.has(edge, 'width')) {\n      edge.width = bbox.width;\n    }\n    if (!_lodash2.default.has(edge, 'height')) {\n      edge.height = bbox.height;\n    }\n  });\n\n  _util2.default.applyTransition(svgEdgeLabels.exit(), g).style('opacity', 0).remove();\n\n  return svgEdgeLabels;\n}\n\nexports.default = createEdgeLabels;\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _d = __webpack_require__(3);\n\nvar _d2 = _interopRequireDefault(_d);\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _intersectNode = __webpack_require__(14);\n\nvar _intersectNode2 = _interopRequireDefault(_intersectNode);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction createEdgePaths(selection, g, arrows) {\n  var svgPaths = selection.selectAll('g.edgePath').data(g.edges(), function (e) {\n    return _util2.default.edgeToId(e);\n  }).classed('update', true);\n\n  enter(svgPaths, g);\n  exit(svgPaths, g);\n\n  _util2.default.applyTransition(svgPaths, g).style('opacity', 1);\n\n  // Save DOM element in the path group, and set ID and class\n  svgPaths.each(function (e) {\n    var domEdge = _d2.default.select(this);\n    var edge = g.edge(e);\n    edge.elem = this;\n\n    if (edge.id) {\n      domEdge.attr('id', edge.id);\n    }\n\n    _util2.default.applyClass(domEdge, edge['class'], (domEdge.classed('update') ? 'update ' : '') + 'edgePath');\n  });\n\n  svgPaths.selectAll('path.path').each(function (e) {\n    var edge = g.edge(e);\n    edge.arrowheadId = _lodash2.default.uniqueId('arrowhead');\n\n    var domEdge = _d2.default.select(this).attr('marker-end', function () {\n      return 'url(#' + edge.arrowheadId + ')';\n    }).style('fill', 'none');\n\n    _util2.default.applyTransition(domEdge, g).attr('d', function (e) {\n      return calcPoints(g, e);\n    });\n\n    _util2.default.applyStyle(domEdge, edge.style);\n  });\n\n  svgPaths.selectAll('defs *').remove();\n  svgPaths.selectAll('defs').each(function (e) {\n    var edge = g.edge(e);\n    var arrowhead = arrows[edge.arrowhead];\n    arrowhead(_d2.default.select(this), edge.arrowheadId, edge, 'arrowhead');\n  });\n\n  return svgPaths;\n}\n\nfunction calcPoints(g, e) {\n  var edge = g.edge(e);\n  var tail = g.node(e.v);\n  var head = g.node(e.w);\n  var points = edge.points.slice(1, edge.points.length - 1);\n  points.unshift((0, _intersectNode2.default)(tail, points[0]));\n  points.push((0, _intersectNode2.default)(head, points[points.length - 1]));\n\n  return createLine(edge, points);\n}\n\nfunction createLine(edge, points) {\n  var line = _d2.default.svg.line().x(function (d) {\n    return d.x;\n  }).y(function (d) {\n    return d.y;\n  });\n\n  if (_lodash2.default.has(edge, 'lineInterpolate')) {\n    line.interpolate(edge.lineInterpolate);\n  }\n\n  if (_lodash2.default.has(edge, 'lineTension')) {\n    line.tension(Number(edge.lineTension));\n  }\n\n  return line(points);\n}\n\nfunction getCoords(elem) {\n  var bbox = elem.getBBox();\n  var matrix = elem.ownerSVGElement.getScreenCTM().inverse().multiply(elem.getScreenCTM()).translate(bbox.width / 2, bbox.height / 2);\n  return { x: matrix.e, y: matrix.f };\n}\n\nfunction enter(svgPaths, g) {\n  var svgPathsEnter = svgPaths.enter().append('g').attr('class', 'edgePath').style('opacity', 0);\n  svgPathsEnter.append('path').attr('class', 'path').attr('d', function (e) {\n    var edge = g.edge(e);\n    var sourceElem = g.node(e.v).elem;\n    var points = _lodash2.default.range(edge.points.length).map(function () {\n      return getCoords(sourceElem);\n    });\n    return createLine(edge, points);\n  });\n  svgPathsEnter.append('defs');\n}\n\nfunction exit(svgPaths, g) {\n  var svgPathExit = svgPaths.exit();\n  _util2.default.applyTransition(svgPathExit, g).style('opacity', 0).remove();\n\n  _util2.default.applyTransition(svgPathExit.select('path.path'), g).attr('d', function (e) {\n    var source = g.node(e.v);\n\n    if (source) {\n      var points = _lodash2.default.range(this.getTotalLength()).map(function () {\n        return source;\n      });\n      return createLine({}, points);\n    } else {\n      return _d2.default.select(this).attr('d');\n    }\n  });\n}\n\nexports.default = createEdgePaths;\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _intersectRect = __webpack_require__(17);\n\nvar _intersectRect2 = _interopRequireDefault(_intersectRect);\n\nvar _intersectEllipse = __webpack_require__(6);\n\nvar _intersectEllipse2 = _interopRequireDefault(_intersectEllipse);\n\nvar _intersectCircle = __webpack_require__(15);\n\nvar _intersectCircle2 = _interopRequireDefault(_intersectCircle);\n\nvar _intersectPolygon = __webpack_require__(16);\n\nvar _intersectPolygon2 = _interopRequireDefault(_intersectPolygon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction rect(parent, bbox, node) {\n  var shapeSvg = parent.insert('rect', ':first-child').attr('rx', node.rx).attr('ry', node.ry).attr('x', -bbox.width / 2).attr('y', -bbox.height / 2).attr('width', bbox.width).attr('height', bbox.height);\n\n  node.intersect = function (point) {\n    return (0, _intersectRect2.default)(node, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction ellipse(parent, bbox, node) {\n  var rx = bbox.width / 2;\n  var ry = bbox.height / 2;\n  var shapeSvg = parent.insert('ellipse', ':first-child').attr('x', -bbox.width / 2).attr('y', -bbox.height / 2).attr('rx', rx).attr('ry', ry);\n\n  node.intersect = function (point) {\n    return (0, _intersectEllipse2.default)(node, rx, ry, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction circle(parent, bbox, node) {\n  var r = Math.max(bbox.width, bbox.height) / 2;\n  var shapeSvg = parent.insert('circle', ':first-child').attr('x', -bbox.width / 2).attr('y', -bbox.height / 2).attr('r', r);\n\n  node.intersect = function (point) {\n    return (0, _intersectCircle2.default)(node, r, point);\n  };\n\n  return shapeSvg;\n}\n\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond(parent, bbox, node) {\n  var w = bbox.width * Math.SQRT2 / 2;\n  var h = bbox.height * Math.SQRT2 / 2;\n  var points = [{ x: 0, y: -h }, { x: -w, y: 0 }, { x: 0, y: h }, { x: w, y: 0 }];\n  var shapeSvg = parent.insert('polygon', ':first-child').attr('points', points.map(function (p) {\n    return p.x + ',' + p.y;\n  }).join(' '));\n\n  node.intersect = function (p) {\n    return (0, _intersectPolygon2.default)(node, points, p);\n  };\n\n  return shapeSvg;\n}\n\nexports.default = {\n  rect: rect,\n  ellipse: ellipse,\n  circle: circle,\n  diamond: diamond\n};\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction normal(parent, id, edge, type) {\n  var marker = parent.append('marker').attr('id', id).attr('viewBox', '0 0 10 10').attr('refX', 9).attr('refY', 5).attr('markerUnits', 'strokeWidth').attr('markerWidth', 8).attr('markerHeight', 6).attr('orient', 'auto');\n\n  var path = marker.append('path').attr('d', 'M 0 0 L 10 5 L 0 10 z').style('stroke-width', 1).style('stroke-dasharray', '1,0');\n  _util2.default.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\nfunction vee(parent, id, edge, type) {\n  var marker = parent.append('marker').attr('id', id).attr('viewBox', '0 0 10 10').attr('refX', 9).attr('refY', 5).attr('markerUnits', 'strokeWidth').attr('markerWidth', 8).attr('markerHeight', 6).attr('orient', 'auto');\n\n  var path = marker.append('path').attr('d', 'M 0 0 L 10 5 L 0 10 L 4 5 z').style('stroke-width', 1).style('stroke-dasharray', '1,0');\n  _util2.default.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\nfunction undirected(parent, id, edge, type) {\n  var marker = parent.append('marker').attr('id', id).attr('viewBox', '0 0 10 10').attr('refX', 9).attr('refY', 5).attr('markerUnits', 'strokeWidth').attr('markerWidth', 8).attr('markerHeight', 6).attr('orient', 'auto');\n\n  var path = marker.append('path').attr('d', 'M 0 5 L 10 5').style('stroke-width', 1).style('stroke-dasharray', '1,0');\n  _util2.default.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\nexports.default = {\n  normal: normal,\n  vee: vee,\n  undirected: undirected,\n  default: normal\n};\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"name\":\"dagre-d3-renderer\",\"version\":\"0.4.26\",\"description\":\"A D3-based renderer for Dagre\",\"keywords\":[\"graph\",\"dagre\",\"graphlib\",\"renderer\",\"d3\"],\"main\":\"dist/dagre-d3.core.js\",\"scripts\":{\"lint\":\"standard\",\"karma\":\"node -r babel-register ./node_modules/.bin/karma start --single-run\",\"test\":\"yarn lint && yarn karma && phantomjs test/demo-test.js\",\"upgrade\":\"yarn-upgrade-all && yarn remove d3 && yarn add d3@3.5.17\",\"build\":\"webpack --progress --colors\",\"build:watch\":\"yarn build --watch\",\"release\":\"yarn build -p\"},\"dependencies\":{\"d3\":\"3.5.17\",\"dagre-layout\":\"^0.8.0\",\"graphlib\":\"^2.1.1\",\"lodash\":\"^4.17.4\"},\"devDependencies\":{\"babel-core\":\"^6.26.0\",\"babel-loader\":\"^7.1.2\",\"babel-preset-env\":\"^1.6.1\",\"chai\":\"^4.1.2\",\"karma\":\"^1.7.1\",\"karma-chrome-launcher\":\"^2.2.0\",\"karma-firefox-launcher\":\"^1.1.0\",\"karma-mocha\":\"^1.3.0\",\"karma-safari-launcher\":\"^1.0.0\",\"mocha\":\"^4.0.1\",\"phantomjs-prebuilt\":\"^2.1.16\",\"standard\":\"^10.0.3\",\"webpack\":\"^3.10.0\",\"webpack-node-externals\":\"^1.6.0\",\"yarn-upgrade-all\":\"^0.2.0\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/tylingsoft/dagre-d3-renderer.git\"},\"license\":\"MIT\",\"standard\":{\"ignore\":[\"dist/**/*.js\"]}}\n\n/***/ })\n/******/ ])[\"default\"];\n});\n\n\n// WEBPACK FOOTER //\n// dagre-d3.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2d05c50d24087065f965","/* global window */\n\nvar lodash;\n\nif (typeof require === \"function\") {\n  try {\n    lodash = require(\"lodash\");\n  } catch (e) {}\n}\n\nif (!lodash) {\n  lodash = window._;\n}\n\nmodule.exports = lodash;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/lodash.js\n// module id = 0\n// module chunks = 0","import _ from 'lodash'\n\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */\nfunction isSubgraph (g, v) {\n  return !!g.children(v).length\n}\n\nfunction edgeToId (e) {\n  return escapeId(e.v) + ':' + escapeId(e.w) + ':' + escapeId(e.name)\n}\n\nconst ID_DELIM = /:/g\nfunction escapeId (str) {\n  return str ? String(str).replace(ID_DELIM, '\\\\:') : ''\n}\n\nfunction applyStyle (dom, styleFn) {\n  if (styleFn) {\n    dom.attr('style', styleFn)\n  }\n}\n\nfunction applyClass (dom, classFn, otherClasses) {\n  if (classFn) {\n    dom\n      .attr('class', classFn)\n      .attr('class', otherClasses + ' ' + dom.attr('class'))\n  }\n}\n\nfunction applyTransition (selection, g) {\n  const graph = g.graph()\n\n  if (_.isPlainObject(graph)) {\n    const transition = graph.transition\n    if (_.isFunction(transition)) {\n      return transition(selection)\n    }\n  }\n\n  return selection\n}\n\n// Public utility functions\nexport default {\n  isSubgraph,\n  edgeToId,\n  applyStyle,\n  applyClass,\n  applyTransition\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/util.js","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.4';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, customDefaultsAssignIn);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/lodash.js\n// module id = 2\n// module chunks = 0","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3/d3.js\n// module id = 3\n// module chunks = 0","/**\n * Copyright (c) 2014, Chris Pettitt\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its contributors\n * may be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar lib = require(\"./lib\");\n\nmodule.exports = {\n  Graph: lib.Graph,\n  json: require(\"./lib/json\"),\n  alg: require(\"./lib/alg\"),\n  version: lib.version\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/index.js\n// module id = 4\n// module chunks = 0","\"use strict\";\n\nvar _ = require(\"./lodash\");\n\nmodule.exports = Graph;\n\nvar DEFAULT_EDGE_NAME = \"\\x00\",\n    GRAPH_NODE = \"\\x00\",\n    EDGE_KEY_DELIM = \"\\x01\";\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\n\nfunction Graph(opts) {\n  this._isDirected = _.has(opts, \"directed\") ? opts.directed : true;\n  this._isMultigraph = _.has(opts, \"multigraph\") ? opts.multigraph : false;\n  this._isCompound = _.has(opts, \"compound\") ? opts.compound : false;\n\n  // Label for the graph itself\n  this._label = undefined;\n\n  // Defaults to be set when creating a new node\n  this._defaultNodeLabelFn = _.constant(undefined);\n\n  // Defaults to be set when creating a new edge\n  this._defaultEdgeLabelFn = _.constant(undefined);\n\n  // v -> label\n  this._nodes = {};\n\n  if (this._isCompound) {\n    // v -> parent\n    this._parent = {};\n\n    // v -> children\n    this._children = {};\n    this._children[GRAPH_NODE] = {};\n  }\n\n  // v -> edgeObj\n  this._in = {};\n\n  // u -> v -> Number\n  this._preds = {};\n\n  // v -> edgeObj\n  this._out = {};\n\n  // v -> w -> Number\n  this._sucs = {};\n\n  // e -> edgeObj\n  this._edgeObjs = {};\n\n  // e -> label\n  this._edgeLabels = {};\n}\n\n/* Number of nodes in the graph. Should only be changed by the implementation. */\nGraph.prototype._nodeCount = 0;\n\n/* Number of edges in the graph. Should only be changed by the implementation. */\nGraph.prototype._edgeCount = 0;\n\n\n/* === Graph functions ========= */\n\nGraph.prototype.isDirected = function() {\n  return this._isDirected;\n};\n\nGraph.prototype.isMultigraph = function() {\n  return this._isMultigraph;\n};\n\nGraph.prototype.isCompound = function() {\n  return this._isCompound;\n};\n\nGraph.prototype.setGraph = function(label) {\n  this._label = label;\n  return this;\n};\n\nGraph.prototype.graph = function() {\n  return this._label;\n};\n\n\n/* === Node functions ========== */\n\nGraph.prototype.setDefaultNodeLabel = function(newDefault) {\n  if (!_.isFunction(newDefault)) {\n    newDefault = _.constant(newDefault);\n  }\n  this._defaultNodeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.nodeCount = function() {\n  return this._nodeCount;\n};\n\nGraph.prototype.nodes = function() {\n  return _.keys(this._nodes);\n};\n\nGraph.prototype.sources = function() {\n  return _.filter(this.nodes(), _.bind(function(v) {\n    return _.isEmpty(this._in[v]);\n  }, this));\n};\n\nGraph.prototype.sinks = function() {\n  return _.filter(this.nodes(), _.bind(function(v) {\n    return _.isEmpty(this._out[v]);\n  }, this));\n};\n\nGraph.prototype.setNodes = function(vs, value) {\n  var args = arguments;\n  _.each(vs, _.bind(function(v) {\n    if (args.length > 1) {\n      this.setNode(v, value);\n    } else {\n      this.setNode(v);\n    }\n  }, this));\n  return this;\n};\n\nGraph.prototype.setNode = function(v, value) {\n  if (_.has(this._nodes, v)) {\n    if (arguments.length > 1) {\n      this._nodes[v] = value;\n    }\n    return this;\n  }\n\n  this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n  if (this._isCompound) {\n    this._parent[v] = GRAPH_NODE;\n    this._children[v] = {};\n    this._children[GRAPH_NODE][v] = true;\n  }\n  this._in[v] = {};\n  this._preds[v] = {};\n  this._out[v] = {};\n  this._sucs[v] = {};\n  ++this._nodeCount;\n  return this;\n};\n\nGraph.prototype.node = function(v) {\n  return this._nodes[v];\n};\n\nGraph.prototype.hasNode = function(v) {\n  return _.has(this._nodes, v);\n};\n\nGraph.prototype.removeNode =  function(v) {\n  var self = this;\n  if (_.has(this._nodes, v)) {\n    var removeEdge = function(e) { self.removeEdge(self._edgeObjs[e]); };\n    delete this._nodes[v];\n    if (this._isCompound) {\n      this._removeFromParentsChildList(v);\n      delete this._parent[v];\n      _.each(this.children(v), _.bind(function(child) {\n        this.setParent(child);\n      }, this));\n      delete this._children[v];\n    }\n    _.each(_.keys(this._in[v]), removeEdge);\n    delete this._in[v];\n    delete this._preds[v];\n    _.each(_.keys(this._out[v]), removeEdge);\n    delete this._out[v];\n    delete this._sucs[v];\n    --this._nodeCount;\n  }\n  return this;\n};\n\nGraph.prototype.setParent = function(v, parent) {\n  if (!this._isCompound) {\n    throw new Error(\"Cannot set parent in a non-compound graph\");\n  }\n\n  if (_.isUndefined(parent)) {\n    parent = GRAPH_NODE;\n  } else {\n    // Coerce parent to string\n    parent += \"\";\n    for (var ancestor = parent;\n         !_.isUndefined(ancestor);\n         ancestor = this.parent(ancestor)) {\n      if (ancestor === v) {\n        throw new Error(\"Setting \" + parent+ \" as parent of \" + v +\n                        \" would create create a cycle\");\n      }\n    }\n\n    this.setNode(parent);\n  }\n\n  this.setNode(v);\n  this._removeFromParentsChildList(v);\n  this._parent[v] = parent;\n  this._children[parent][v] = true;\n  return this;\n};\n\nGraph.prototype._removeFromParentsChildList = function(v) {\n  delete this._children[this._parent[v]][v];\n};\n\nGraph.prototype.parent = function(v) {\n  if (this._isCompound) {\n    var parent = this._parent[v];\n    if (parent !== GRAPH_NODE) {\n      return parent;\n    }\n  }\n};\n\nGraph.prototype.children = function(v) {\n  if (_.isUndefined(v)) {\n    v = GRAPH_NODE;\n  }\n\n  if (this._isCompound) {\n    var children = this._children[v];\n    if (children) {\n      return _.keys(children);\n    }\n  } else if (v === GRAPH_NODE) {\n    return this.nodes();\n  } else if (this.hasNode(v)) {\n    return [];\n  }\n};\n\nGraph.prototype.predecessors = function(v) {\n  var predsV = this._preds[v];\n  if (predsV) {\n    return _.keys(predsV);\n  }\n};\n\nGraph.prototype.successors = function(v) {\n  var sucsV = this._sucs[v];\n  if (sucsV) {\n    return _.keys(sucsV);\n  }\n};\n\nGraph.prototype.neighbors = function(v) {\n  var preds = this.predecessors(v);\n  if (preds) {\n    return _.union(preds, this.successors(v));\n  }\n};\n\nGraph.prototype.filterNodes = function(filter) {\n  var copy = new this.constructor({\n    directed: this._isDirected,\n    multigraph: this._isMultigraph,\n    compound: this._isCompound\n  });\n\n  copy.setGraph(this.graph());\n\n  _.each(this._nodes, _.bind(function(value, v) {\n    if (filter(v)) {\n      copy.setNode(v, value);\n    }\n  }, this));\n\n  _.each(this._edgeObjs, _.bind(function(e) {\n    if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n      copy.setEdge(e, this.edge(e));\n    }\n  }, this));\n\n  var self = this;\n  var parents = {};\n  function findParent(v) {\n    var parent = self.parent(v);\n    if (parent === undefined || copy.hasNode(parent)) {\n      parents[v] = parent;\n      return parent;\n    } else if (parent in parents) {\n      return parents[parent];\n    } else {\n      return findParent(parent);\n    }\n  }\n\n  if (this._isCompound) {\n    _.each(copy.nodes(), function(v) {\n      copy.setParent(v, findParent(v));\n    });\n  }\n\n  return copy;\n};\n\n/* === Edge functions ========== */\n\nGraph.prototype.setDefaultEdgeLabel = function(newDefault) {\n  if (!_.isFunction(newDefault)) {\n    newDefault = _.constant(newDefault);\n  }\n  this._defaultEdgeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.edgeCount = function() {\n  return this._edgeCount;\n};\n\nGraph.prototype.edges = function() {\n  return _.values(this._edgeObjs);\n};\n\nGraph.prototype.setPath = function(vs, value) {\n  var self = this,\n      args = arguments;\n  _.reduce(vs, function(v, w) {\n    if (args.length > 1) {\n      self.setEdge(v, w, value);\n    } else {\n      self.setEdge(v, w);\n    }\n    return w;\n  });\n  return this;\n};\n\n/*\n * setEdge(v, w, [value, [name]])\n * setEdge({ v, w, [name] }, [value])\n */\nGraph.prototype.setEdge = function() {\n  var v, w, name, value,\n      valueSpecified = false,\n      arg0 = arguments[0];\n\n  if (typeof arg0 === \"object\" && arg0 !== null && \"v\" in arg0) {\n    v = arg0.v;\n    w = arg0.w;\n    name = arg0.name;\n    if (arguments.length === 2) {\n      value = arguments[1];\n      valueSpecified = true;\n    }\n  } else {\n    v = arg0;\n    w = arguments[1];\n    name = arguments[3];\n    if (arguments.length > 2) {\n      value = arguments[2];\n      valueSpecified = true;\n    }\n  }\n\n  v = \"\" + v;\n  w = \"\" + w;\n  if (!_.isUndefined(name)) {\n    name = \"\" + name;\n  }\n\n  var e = edgeArgsToId(this._isDirected, v, w, name);\n  if (_.has(this._edgeLabels, e)) {\n    if (valueSpecified) {\n      this._edgeLabels[e] = value;\n    }\n    return this;\n  }\n\n  if (!_.isUndefined(name) && !this._isMultigraph) {\n    throw new Error(\"Cannot set a named edge when isMultigraph = false\");\n  }\n\n  // It didn't exist, so we need to create it.\n  // First ensure the nodes exist.\n  this.setNode(v);\n  this.setNode(w);\n\n  this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n\n  var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);\n  // Ensure we add undirected edges in a consistent way.\n  v = edgeObj.v;\n  w = edgeObj.w;\n\n  Object.freeze(edgeObj);\n  this._edgeObjs[e] = edgeObj;\n  incrementOrInitEntry(this._preds[w], v);\n  incrementOrInitEntry(this._sucs[v], w);\n  this._in[w][e] = edgeObj;\n  this._out[v][e] = edgeObj;\n  this._edgeCount++;\n  return this;\n};\n\nGraph.prototype.edge = function(v, w, name) {\n  var e = (arguments.length === 1\n            ? edgeObjToId(this._isDirected, arguments[0])\n            : edgeArgsToId(this._isDirected, v, w, name));\n  return this._edgeLabels[e];\n};\n\nGraph.prototype.hasEdge = function(v, w, name) {\n  var e = (arguments.length === 1\n            ? edgeObjToId(this._isDirected, arguments[0])\n            : edgeArgsToId(this._isDirected, v, w, name));\n  return _.has(this._edgeLabels, e);\n};\n\nGraph.prototype.removeEdge = function(v, w, name) {\n  var e = (arguments.length === 1\n            ? edgeObjToId(this._isDirected, arguments[0])\n            : edgeArgsToId(this._isDirected, v, w, name)),\n      edge = this._edgeObjs[e];\n  if (edge) {\n    v = edge.v;\n    w = edge.w;\n    delete this._edgeLabels[e];\n    delete this._edgeObjs[e];\n    decrementOrRemoveEntry(this._preds[w], v);\n    decrementOrRemoveEntry(this._sucs[v], w);\n    delete this._in[w][e];\n    delete this._out[v][e];\n    this._edgeCount--;\n  }\n  return this;\n};\n\nGraph.prototype.inEdges = function(v, u) {\n  var inV = this._in[v];\n  if (inV) {\n    var edges = _.values(inV);\n    if (!u) {\n      return edges;\n    }\n    return _.filter(edges, function(edge) { return edge.v === u; });\n  }\n};\n\nGraph.prototype.outEdges = function(v, w) {\n  var outV = this._out[v];\n  if (outV) {\n    var edges = _.values(outV);\n    if (!w) {\n      return edges;\n    }\n    return _.filter(edges, function(edge) { return edge.w === w; });\n  }\n};\n\nGraph.prototype.nodeEdges = function(v, w) {\n  var inEdges = this.inEdges(v, w);\n  if (inEdges) {\n    return inEdges.concat(this.outEdges(v, w));\n  }\n};\n\nfunction incrementOrInitEntry(map, k) {\n  if (map[k]) {\n    map[k]++;\n  } else {\n    map[k] = 1;\n  }\n}\n\nfunction decrementOrRemoveEntry(map, k) {\n  if (!--map[k]) { delete map[k]; }\n}\n\nfunction edgeArgsToId(isDirected, v_, w_, name) {\n  var v = \"\" + v_;\n  var w = \"\" + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM +\n             (_.isUndefined(name) ? DEFAULT_EDGE_NAME : name);\n}\n\nfunction edgeArgsToObj(isDirected, v_, w_, name) {\n  var v = \"\" + v_;\n  var w = \"\" + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  var edgeObj =  { v: v, w: w };\n  if (name) {\n    edgeObj.name = name;\n  }\n  return edgeObj;\n}\n\nfunction edgeObjToId(isDirected, edgeObj) {\n  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/graph.js\n// module id = 5\n// module chunks = 0","function intersectEllipse (node, rx, ry, point) {\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  const cx = node.x\n  const cy = node.y\n\n  const px = cx - point.x\n  const py = cy - point.y\n\n  const det = Math.sqrt(rx * rx * py * py + ry * ry * px * px)\n\n  let dx = Math.abs(rx * ry * px / det)\n  if (point.x < cx) {\n    dx = -dx\n  }\n  let dy = Math.abs(rx * ry * py / det)\n  if (point.y < cy) {\n    dy = -dy\n  }\n\n  return {x: cx + dx, y: cy + dy}\n}\n\nexport default intersectEllipse\n\n\n\n// WEBPACK FOOTER //\n// ./lib/intersect/intersect-ellipse.js","import addTextLabel from './add-text-label'\nimport addHtmlLabel from './add-html-label'\nimport addSVGLabel from './add-svg-label'\n\nfunction addLabel (root, node, location) {\n  const label = node.label\n  const labelSvg = root.append('g')\n\n  // Allow the label to be a string, a function that returns a DOM element, or\n  // a DOM element itself.\n  if (node.labelType === 'svg') {\n    addSVGLabel(labelSvg, node)\n  } else if (typeof label !== 'string' || node.labelType === 'html') {\n    addHtmlLabel(labelSvg, node)\n  } else {\n    addTextLabel(labelSvg, node)\n  }\n\n  const labelBBox = labelSvg.node().getBBox()\n  let y\n  switch (location) {\n    case 'top':\n      y = (-node.height / 2)\n      break\n    case 'bottom':\n      y = (node.height / 2) - labelBBox.height\n      break\n    default:\n      y = (-labelBBox.height / 2)\n  }\n  labelSvg.attr('transform',\n                'translate(' + (-labelBBox.width / 2) + ',' + y + ')')\n\n  return labelSvg\n}\n\nexport default addLabel\n\n\n\n// WEBPACK FOOTER //\n// ./lib/label/add-label.js","var _ = require(\"../lodash\"),\n    PriorityQueue = require(\"../data/priority-queue\");\n\nmodule.exports = dijkstra;\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction dijkstra(g, source, weightFn, edgeFn) {\n  return runDijkstra(g, String(source),\n                     weightFn || DEFAULT_WEIGHT_FUNC,\n                     edgeFn || function(v) { return g.outEdges(v); });\n}\n\nfunction runDijkstra(g, source, weightFn, edgeFn) {\n  var results = {},\n      pq = new PriorityQueue(),\n      v, vEntry;\n\n  var updateNeighbors = function(edge) {\n    var w = edge.v !== v ? edge.v : edge.w,\n        wEntry = results[w],\n        weight = weightFn(edge),\n        distance = vEntry.distance + weight;\n\n    if (weight < 0) {\n      throw new Error(\"dijkstra does not allow negative edge weights. \" +\n                      \"Bad edge: \" + edge + \" Weight: \" + weight);\n    }\n\n    if (distance < wEntry.distance) {\n      wEntry.distance = distance;\n      wEntry.predecessor = v;\n      pq.decrease(w, distance);\n    }\n  };\n\n  g.nodes().forEach(function(v) {\n    var distance = v === source ? 0 : Number.POSITIVE_INFINITY;\n    results[v] = { distance: distance };\n    pq.add(v, distance);\n  });\n\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    vEntry = results[v];\n    if (vEntry.distance === Number.POSITIVE_INFINITY) {\n      break;\n    }\n\n    edgeFn(v).forEach(updateNeighbors);\n  }\n\n  return results;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/dijkstra.js\n// module id = 8\n// module chunks = 0","var _ = require(\"../lodash\");\n\nmodule.exports = PriorityQueue;\n\n/**\n * A min-priority queue data structure. This algorithm is derived from Cormen,\n * et al., \"Introduction to Algorithms\". The basic idea of a min-priority\n * queue is that you can efficiently (in O(1) time) get the smallest key in\n * the queue. Adding and removing elements takes O(log n) time. A key can\n * have its priority decreased in O(log n) time.\n */\nfunction PriorityQueue() {\n  this._arr = [];\n  this._keyIndices = {};\n}\n\n/**\n * Returns the number of elements in the queue. Takes `O(1)` time.\n */\nPriorityQueue.prototype.size = function() {\n  return this._arr.length;\n};\n\n/**\n * Returns the keys that are in the queue. Takes `O(n)` time.\n */\nPriorityQueue.prototype.keys = function() {\n  return this._arr.map(function(x) { return x.key; });\n};\n\n/**\n * Returns `true` if **key** is in the queue and `false` if not.\n */\nPriorityQueue.prototype.has = function(key) {\n  return _.has(this._keyIndices, key);\n};\n\n/**\n * Returns the priority for **key**. If **key** is not present in the queue\n * then this function returns `undefined`. Takes `O(1)` time.\n *\n * @param {Object} key\n */\nPriorityQueue.prototype.priority = function(key) {\n  var index = this._keyIndices[key];\n  if (index !== undefined) {\n    return this._arr[index].priority;\n  }\n};\n\n/**\n * Returns the key for the minimum element in this queue. If the queue is\n * empty this function throws an Error. Takes `O(1)` time.\n */\nPriorityQueue.prototype.min = function() {\n  if (this.size() === 0) {\n    throw new Error(\"Queue underflow\");\n  }\n  return this._arr[0].key;\n};\n\n/**\n * Inserts a new key into the priority queue. If the key already exists in\n * the queue this function returns `false`; otherwise it will return `true`.\n * Takes `O(n)` time.\n *\n * @param {Object} key the key to add\n * @param {Number} priority the initial priority for the key\n */\nPriorityQueue.prototype.add = function(key, priority) {\n  var keyIndices = this._keyIndices;\n  key = String(key);\n  if (!_.has(keyIndices, key)) {\n    var arr = this._arr;\n    var index = arr.length;\n    keyIndices[key] = index;\n    arr.push({key: key, priority: priority});\n    this._decrease(index);\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes and returns the smallest key in the queue. Takes `O(log n)` time.\n */\nPriorityQueue.prototype.removeMin = function() {\n  this._swap(0, this._arr.length - 1);\n  var min = this._arr.pop();\n  delete this._keyIndices[min.key];\n  this._heapify(0);\n  return min.key;\n};\n\n/**\n * Decreases the priority for **key** to **priority**. If the new priority is\n * greater than the previous priority, this function will throw an Error.\n *\n * @param {Object} key the key for which to raise priority\n * @param {Number} priority the new priority for the key\n */\nPriorityQueue.prototype.decrease = function(key, priority) {\n  var index = this._keyIndices[key];\n  if (priority > this._arr[index].priority) {\n    throw new Error(\"New priority is greater than current priority. \" +\n        \"Key: \" + key + \" Old: \" + this._arr[index].priority + \" New: \" + priority);\n  }\n  this._arr[index].priority = priority;\n  this._decrease(index);\n};\n\nPriorityQueue.prototype._heapify = function(i) {\n  var arr = this._arr;\n  var l = 2 * i,\n      r = l + 1,\n      largest = i;\n  if (l < arr.length) {\n    largest = arr[l].priority < arr[largest].priority ? l : largest;\n    if (r < arr.length) {\n      largest = arr[r].priority < arr[largest].priority ? r : largest;\n    }\n    if (largest !== i) {\n      this._swap(i, largest);\n      this._heapify(largest);\n    }\n  }\n};\n\nPriorityQueue.prototype._decrease = function(index) {\n  var arr = this._arr;\n  var priority = arr[index].priority;\n  var parent;\n  while (index !== 0) {\n    parent = index >> 1;\n    if (arr[parent].priority < priority) {\n      break;\n    }\n    this._swap(index, parent);\n    index = parent;\n  }\n};\n\nPriorityQueue.prototype._swap = function(i, j) {\n  var arr = this._arr;\n  var keyIndices = this._keyIndices;\n  var origArrI = arr[i];\n  var origArrJ = arr[j];\n  arr[i] = origArrJ;\n  arr[j] = origArrI;\n  keyIndices[origArrJ.key] = i;\n  keyIndices[origArrI.key] = j;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/data/priority-queue.js\n// module id = 9\n// module chunks = 0","var _ = require(\"../lodash\");\n\nmodule.exports = tarjan;\n\nfunction tarjan(g) {\n  var index = 0,\n      stack = [],\n      visited = {}, // node id -> { onStack, lowlink, index }\n      results = [];\n\n  function dfs(v) {\n    var entry = visited[v] = {\n      onStack: true,\n      lowlink: index,\n      index: index++\n    };\n    stack.push(v);\n\n    g.successors(v).forEach(function(w) {\n      if (!_.has(visited, w)) {\n        dfs(w);\n        entry.lowlink = Math.min(entry.lowlink, visited[w].lowlink);\n      } else if (visited[w].onStack) {\n        entry.lowlink = Math.min(entry.lowlink, visited[w].index);\n      }\n    });\n\n    if (entry.lowlink === entry.index) {\n      var cmpt = [],\n          w;\n      do {\n        w = stack.pop();\n        visited[w].onStack = false;\n        cmpt.push(w);\n      } while (v !== w);\n      results.push(cmpt);\n    }\n  }\n\n  g.nodes().forEach(function(v) {\n    if (!_.has(visited, v)) {\n      dfs(v);\n    }\n  });\n\n  return results;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/tarjan.js\n// module id = 10\n// module chunks = 0","var _ = require(\"../lodash\");\n\nmodule.exports = topsort;\ntopsort.CycleException = CycleException;\n\nfunction topsort(g) {\n  var visited = {},\n      stack = {},\n      results = [];\n\n  function visit(node) {\n    if (_.has(stack, node)) {\n      throw new CycleException();\n    }\n\n    if (!_.has(visited, node)) {\n      stack[node] = true;\n      visited[node] = true;\n      _.each(g.predecessors(node), visit);\n      delete stack[node];\n      results.push(node);\n    }\n  }\n\n  _.each(g.sinks(), visit);\n\n  if (_.size(visited) !== g.nodeCount()) {\n    throw new CycleException();\n  }\n\n  return results;\n}\n\nfunction CycleException() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/topsort.js\n// module id = 11\n// module chunks = 0","var _ = require(\"../lodash\");\n\nmodule.exports = dfs;\n\n/*\n * A helper that preforms a pre- or post-order traversal on the input graph\n * and returns the nodes in the order they were visited. If the graph is\n * undirected then this algorithm will navigate using neighbors. If the graph\n * is directed then this algorithm will navigate using successors.\n *\n * Order must be one of \"pre\" or \"post\".\n */\nfunction dfs(g, vs, order) {\n  if (!_.isArray(vs)) {\n    vs = [vs];\n  }\n\n  var navigation = (g.isDirected() ? g.successors : g.neighbors).bind(g);\n\n  var acc = [],\n      visited = {};\n  _.each(vs, function(v) {\n    if (!g.hasNode(v)) {\n      throw new Error(\"Graph does not have node: \" + v);\n    }\n\n    doDfs(g, v, order === \"post\", visited, navigation, acc);\n  });\n  return acc;\n}\n\nfunction doDfs(g, v, postorder, visited, navigation, acc) {\n  if (!_.has(visited, v)) {\n    visited[v] = true;\n\n    if (!postorder) { acc.push(v); }\n    _.each(navigation(v), function(w) {\n      doDfs(g, w, postorder, visited, navigation, acc);\n    });\n    if (postorder) { acc.push(v); }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/dfs.js\n// module id = 12\n// module chunks = 0","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"), require(\"graphlib\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"lodash\", \"graphlib\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dagre\"] = factory(require(\"lodash\"), require(\"graphlib\"));\n\telse\n\t\troot[\"dagre\"] = factory(root[\"lodash\"], root[\"graphlib\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"lodash\");\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addDummyNode = addDummyNode;\nexports.simplify = simplify;\nexports.asNonCompoundGraph = asNonCompoundGraph;\nexports.successorWeights = successorWeights;\nexports.predecessorWeights = predecessorWeights;\nexports.intersectRect = intersectRect;\nexports.buildLayerMatrix = buildLayerMatrix;\nexports.normalizeRanks = normalizeRanks;\nexports.removeEmptyRanks = removeEmptyRanks;\nexports.addBorderNode = addBorderNode;\nexports.maxRank = maxRank;\nexports.partition = partition;\nexports.time = time;\nexports.notime = notime;\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graphlib = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Adds a dummy node to the graph and return v.\n */\nfunction addDummyNode(g, type, attrs, name) {\n  var v = void 0;\n  do {\n    v = _lodash2.default.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\nfunction simplify(g) {\n  var simplified = new _graphlib.Graph().setGraph(g.graph());\n  _lodash2.default.each(g.nodes(), function (v) {\n    simplified.setNode(v, g.node(v));\n  });\n  _lodash2.default.each(g.edges(), function (e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 };\n    var label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen)\n    });\n  });\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new _graphlib.Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n  _lodash2.default.each(g.nodes(), function (v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n  _lodash2.default.each(g.edges(), function (e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _lodash2.default.map(g.nodes(), function (v) {\n    var sucs = {};\n    _lodash2.default.each(g.outEdges(v), function (e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n    return sucs;\n  });\n  return _lodash2.default.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _lodash2.default.map(g.nodes(), function (v) {\n    var preds = {};\n    _lodash2.default.each(g.inEdges(v), function (e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return _lodash2.default.zipObject(g.nodes(), weightMap);\n}\n\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error('Not possible to find intersection inside of the rectangle');\n  }\n\n  var sx = void 0;\n  var sy = void 0;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = w * dy / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\nfunction buildLayerMatrix(g) {\n  var layering = _lodash2.default.map(_lodash2.default.range(maxRank(g) + 1), function () {\n    return [];\n  });\n  _lodash2.default.each(g.nodes(), function (v) {\n    var node = g.node(v);\n    var rank = node.rank;\n    if (!_lodash2.default.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n  return layering;\n}\n\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\nfunction normalizeRanks(g) {\n  var min = _lodash2.default.min(_lodash2.default.map(g.nodes(), function (v) {\n    return g.node(v).rank;\n  }));\n  _lodash2.default.each(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (_lodash2.default.has(node, 'rank')) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _lodash2.default.min(_lodash2.default.map(g.nodes(), function (v) {\n    return g.node(v).rank;\n  }));\n\n  var layers = [];\n  _lodash2.default.each(g.nodes(), function (v) {\n    var rank = g.node(v).rank - offset;\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n    layers[rank].push(v);\n  });\n\n  var delta = 0;\n  var nodeRankFactor = g.graph().nodeRankFactor;\n  _lodash2.default.each(layers, function (vs, i) {\n    if (_lodash2.default.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _lodash2.default.each(vs, function (v) {\n        g.node(v).rank += delta;\n      });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0\n  };\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n  return addDummyNode(g, 'border', node, prefix);\n}\n\nfunction maxRank(g) {\n  return _lodash2.default.max(_lodash2.default.map(g.nodes(), function (v) {\n    var rank = g.node(v).rank;\n    if (!_lodash2.default.isUndefined(rank)) {\n      return rank;\n    }\n  }));\n}\n\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\nfunction partition(collection, fn) {\n  var result = { lhs: [], rhs: [] };\n  _lodash2.default.each(collection, function (value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n}\n\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\nfunction time(name, fn) {\n  var start = _lodash2.default.now();\n  try {\n    return fn();\n  } finally {\n    console.log(name + ' time: ' + (_lodash2.default.now() - start) + 'ms');\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}\n\nexports.default = {\n  addDummyNode: addDummyNode,\n  simplify: simplify,\n  asNonCompoundGraph: asNonCompoundGraph,\n  successorWeights: successorWeights,\n  predecessorWeights: predecessorWeights,\n  intersectRect: intersectRect,\n  buildLayerMatrix: buildLayerMatrix,\n  normalizeRanks: normalizeRanks,\n  removeEmptyRanks: removeEmptyRanks,\n  addBorderNode: addBorderNode,\n  maxRank: maxRank,\n  partition: partition,\n  time: time,\n  notime: notime\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"graphlib\");\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.longestPath = longestPath;\nexports.slack = slack;\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Initializes ranks for the input graph using the longest path algorithm. This\n * algorithm scales well and is fast in practice, it yields rather poor\n * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom\n * ranks wide and leaving edges longer than necessary. However, due to its\n * speed, this algorithm is good for getting an initial ranking that can be fed\n * into other algorithms.\n *\n * This algorithm does not normalize layers because it will be used by other\n * algorithms in most cases. If using this algorithm directly, be sure to\n * run normalize at the end.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG.\n *    2. Input graph node labels can be assigned properties.\n *\n * Post-conditions:\n *\n *    1. Each node will be assign an (unnormalized) \"rank\" property.\n */\nfunction longestPath(g) {\n  var visited = {};\n\n  function dfs(v) {\n    var label = g.node(v);\n    if (_lodash2.default.has(visited, v)) {\n      return label.rank;\n    }\n    visited[v] = true;\n\n    var rank = _lodash2.default.min(_lodash2.default.map(g.outEdges(v), function (e) {\n      return dfs(e.w) - g.edge(e).minlen;\n    })) || 0;\n\n    return label.rank = rank;\n  }\n\n  _lodash2.default.each(g.sources(), dfs);\n}\n\n/*\n * Returns the amount of slack for the given edge. The slack is defined as the\n * difference between the length of the edge and its minimum length.\n */\nfunction slack(g, e) {\n  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen;\n}\n\nexports.default = {\n  longestPath: longestPath,\n  slack: slack\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graphlib = __webpack_require__(2);\n\nvar _util = __webpack_require__(3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Constructs a spanning tree with tight edges and adjusted the input node's\n * ranks to achieve this. A tight edge is one that is has a length that matches\n * its \"minlen\" attribute.\n *\n * The basic structure for this function is derived from Gansner, et al., \"A\n * Technique for Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a DAG.\n *    2. Graph must be connected.\n *    3. Graph must have at least one node.\n *    5. Graph nodes must have been previously assigned a \"rank\" property that\n *       respects the \"minlen\" property of incident edges.\n *    6. Graph edges must have a \"minlen\" property.\n *\n * Post-conditions:\n *\n *    - Graph nodes will have their rank adjusted to ensure that all edges are\n *      tight.\n *\n * Returns a tree (undirected graph) that is constructed using only \"tight\"\n * edges.\n */\nfunction feasibleTree(g) {\n  var t = new _graphlib.Graph({ directed: false });\n\n  // Choose arbitrary node from which to start our tree\n  var start = g.nodes()[0];\n  var size = g.nodeCount();\n  t.setNode(start, {});\n\n  var edge = void 0;\n  var delta = void 0;\n  while (tightTree(t, g) < size) {\n    edge = findMinSlackEdge(t, g);\n    delta = t.hasNode(edge.v) ? (0, _util.slack)(g, edge) : -(0, _util.slack)(g, edge);\n    shiftRanks(t, g, delta);\n  }\n\n  return t;\n}\n\n/*\n * Finds a maximal tree of tight edges and returns the number of nodes in the\n * tree.\n */\nfunction tightTree(t, g) {\n  function dfs(v) {\n    _lodash2.default.each(g.nodeEdges(v), function (e) {\n      var edgeV = e.v;\n      var w = v === edgeV ? e.w : edgeV;\n      if (!t.hasNode(w) && !(0, _util.slack)(g, e)) {\n        t.setNode(w, {});\n        t.setEdge(v, w, {});\n        dfs(w);\n      }\n    });\n  }\n\n  _lodash2.default.each(t.nodes(), dfs);\n  return t.nodeCount();\n}\n\n/*\n * Finds the edge with the smallest slack that is incident on tree and returns\n * it.\n */\nfunction findMinSlackEdge(t, g) {\n  return _lodash2.default.minBy(g.edges(), function (e) {\n    if (t.hasNode(e.v) !== t.hasNode(e.w)) {\n      return (0, _util.slack)(g, e);\n    }\n  });\n}\n\nfunction shiftRanks(t, g, delta) {\n  _lodash2.default.each(t.nodes(), function (v) {\n    g.node(v).rank += delta;\n  });\n}\n\nexports.default = feasibleTree;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _graphlib = __webpack_require__(2);\n\nvar _graphlib2 = _interopRequireDefault(_graphlib);\n\nvar _layout = __webpack_require__(6);\n\nvar _layout2 = _interopRequireDefault(_layout);\n\nvar _debug = __webpack_require__(28);\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _package = __webpack_require__(29);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  graphlib: _graphlib2.default,\n  layout: _layout2.default,\n  debug: _debug2.default,\n  util: {\n    time: _util2.default.time,\n    notime: _util2.default.notime\n  },\n  version: _package.version\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graphlib = __webpack_require__(2);\n\nvar _acyclic = __webpack_require__(7);\n\nvar _acyclic2 = _interopRequireDefault(_acyclic);\n\nvar _normalize = __webpack_require__(10);\n\nvar _normalize2 = _interopRequireDefault(_normalize);\n\nvar _rank = __webpack_require__(11);\n\nvar _rank2 = _interopRequireDefault(_rank);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _parentDummyChains = __webpack_require__(13);\n\nvar _parentDummyChains2 = _interopRequireDefault(_parentDummyChains);\n\nvar _nestingGraph = __webpack_require__(14);\n\nvar _nestingGraph2 = _interopRequireDefault(_nestingGraph);\n\nvar _addBorderSegments = __webpack_require__(15);\n\nvar _addBorderSegments2 = _interopRequireDefault(_addBorderSegments);\n\nvar _coordinateSystem = __webpack_require__(16);\n\nvar _coordinateSystem2 = _interopRequireDefault(_coordinateSystem);\n\nvar _order = __webpack_require__(17);\n\nvar _order2 = _interopRequireDefault(_order);\n\nvar _position = __webpack_require__(26);\n\nvar _position2 = _interopRequireDefault(_position);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? _util2.default.time : _util2.default.notime;\n  time('layout', function () {\n    var layoutGraph = time('  buildLayoutGraph', function () {\n      return buildLayoutGraph(g);\n    });\n    time('  runLayout', function () {\n      runLayout(layoutGraph, time);\n    });\n    time('  updateInputGraph', function () {\n      updateInputGraph(g, layoutGraph);\n    });\n  });\n}\n\nfunction runLayout(g, time) {\n  time('    makeSpaceForEdgeLabels', function () {\n    makeSpaceForEdgeLabels(g);\n  });\n  time('    removeSelfEdges', function () {\n    removeSelfEdges(g);\n  });\n  time('    acyclic', function () {\n    _acyclic2.default.run(g);\n  });\n  time('    nestingGraph.run', function () {\n    _nestingGraph2.default.run(g);\n  });\n  time('    rank', function () {\n    (0, _rank2.default)(_util2.default.asNonCompoundGraph(g));\n  });\n  time('    injectEdgeLabelProxies', function () {\n    injectEdgeLabelProxies(g);\n  });\n  time('    removeEmptyRanks', function () {\n    (0, _util.removeEmptyRanks)(g);\n  });\n  time('    nestingGraph.cleanup', function () {\n    _nestingGraph2.default.cleanup(g);\n  });\n  time('    normalizeRanks', function () {\n    (0, _util.normalizeRanks)(g);\n  });\n  time('    assignRankMinMax', function () {\n    assignRankMinMax(g);\n  });\n  time('    removeEdgeLabelProxies', function () {\n    removeEdgeLabelProxies(g);\n  });\n  time('    normalize.run', function () {\n    _normalize2.default.run(g);\n  });\n  time('    parentDummyChains', function () {\n    (0, _parentDummyChains2.default)(g);\n  });\n  time('    addBorderSegments', function () {\n    (0, _addBorderSegments2.default)(g);\n  });\n  time('    order', function () {\n    (0, _order2.default)(g);\n  });\n  time('    insertSelfEdges', function () {\n    insertSelfEdges(g);\n  });\n  time('    adjustCoordinateSystem', function () {\n    _coordinateSystem2.default.adjust(g);\n  });\n  time('    position', function () {\n    (0, _position2.default)(g);\n  });\n  time('    positionSelfEdges', function () {\n    positionSelfEdges(g);\n  });\n  time('    removeBorderNodes', function () {\n    removeBorderNodes(g);\n  });\n  time('    normalize.undo', function () {\n    _normalize2.default.undo(g);\n  });\n  time('    fixupEdgeLabelCoords', function () {\n    fixupEdgeLabelCoords(g);\n  });\n  time('    undoCoordinateSystem', function () {\n    _coordinateSystem2.default.undo(g);\n  });\n  time('    translateGraph', function () {\n    translateGraph(g);\n  });\n  time('    assignNodeIntersects', function () {\n    assignNodeIntersects(g);\n  });\n  time('    reversePoints', function () {\n    reversePointsForReversedEdges(g);\n  });\n  time('    acyclic.undo', function () {\n    _acyclic2.default.undo(g);\n  });\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _lodash2.default.each(inputGraph.nodes(), function (v) {\n    var inputLabel = inputGraph.node(v);\n    var layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _lodash2.default.each(inputGraph.edges(), function (e) {\n    var inputLabel = inputGraph.edge(e);\n    var layoutLabel = layoutGraph.edge(e);\n\n    inputLabel.points = layoutLabel.points;\n    if (_lodash2.default.has(layoutLabel, 'x')) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = ['nodesep', 'edgesep', 'ranksep', 'marginx', 'marginy'];\nvar graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: 'tb' };\nvar graphAttrs = ['acyclicer', 'ranker', 'rankdir', 'align'];\nvar nodeNumAttrs = ['width', 'height'];\nvar nodeDefaults = { width: 0, height: 0 };\nvar edgeNumAttrs = ['minlen', 'weight', 'width', 'height', 'labeloffset'];\nvar edgeDefaults = {\n  minlen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labeloffset: 10,\n  labelpos: 'r'\n};\nvar edgeAttrs = ['labelpos'];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new _graphlib.Graph({ multigraph: true, compound: true });\n  var graph = canonicalize(inputGraph.graph());\n\n  g.setGraph(_lodash2.default.merge({}, graphDefaults, selectNumberAttrs(graph, graphNumAttrs), _lodash2.default.pick(graph, graphAttrs)));\n\n  _lodash2.default.each(inputGraph.nodes(), function (v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _lodash2.default.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _lodash2.default.each(inputGraph.edges(), function (e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(e, _lodash2.default.merge({}, edgeDefaults, selectNumberAttrs(edge, edgeNumAttrs), _lodash2.default.pick(edge, edgeAttrs)));\n  });\n\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _lodash2.default.each(g.edges(), function (e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== 'c') {\n      if (graph.rankdir === 'TB' || graph.rankdir === 'BT') {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _lodash2.default.each(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v);\n      var w = g.node(e.w);\n      var label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n      _util2.default.addDummyNode(g, 'edge-proxy', label, '_ep');\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _lodash2.default.each(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      maxRank = Math.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _lodash2.default.each(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'edge-proxy') {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY;\n  var maxX = 0;\n  var minY = Number.POSITIVE_INFINITY;\n  var maxY = 0;\n  var graphLabel = g.graph();\n  var marginX = graphLabel.marginx || 0;\n  var marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x;\n    var y = attrs.y;\n    var w = attrs.width;\n    var h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _lodash2.default.each(g.nodes(), function (v) {\n    getExtremes(g.node(v));\n  });\n  _lodash2.default.each(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_lodash2.default.has(edge, 'x')) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _lodash2.default.each(g.nodes(), function (v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _lodash2.default.each(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _lodash2.default.each(edge.points, function (p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (_lodash2.default.has(edge, 'x')) {\n      edge.x -= minX;\n    }\n    if (_lodash2.default.has(edge, 'y')) {\n      edge.y -= minY;\n    }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _lodash2.default.each(g.edges(), function (e) {\n    var edge = g.edge(e);\n    var nodeV = g.node(e.v);\n    var nodeW = g.node(e.w);\n    var p1 = null;\n    var p2 = null;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift(_util2.default.intersectRect(nodeV, p1));\n    edge.points.push(_util2.default.intersectRect(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _lodash2.default.each(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_lodash2.default.has(edge, 'x')) {\n      if (edge.labelpos === 'l' || edge.labelpos === 'r') {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n        case 'l':\n          edge.x -= edge.width / 2 + edge.labeloffset;break;\n        case 'r':\n          edge.x += edge.width / 2 + edge.labeloffset;break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _lodash2.default.each(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _lodash2.default.each(g.nodes(), function (v) {\n    if (g.children(v).length) {\n      var node = g.node(v);\n      var t = g.node(node.borderTop);\n      var b = g.node(node.borderBottom);\n      var l = g.node(_lodash2.default.last(node.borderLeft));\n      var r = g.node(_lodash2.default.last(node.borderRight));\n\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _lodash2.default.each(g.nodes(), function (v) {\n    if (g.node(v).dummy === 'border') {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _lodash2.default.each(g.edges(), function (e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({ e: e, label: g.edge(e) });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = _util2.default.buildLayerMatrix(g);\n  _lodash2.default.each(layers, function (layer) {\n    var orderShift = 0;\n    _lodash2.default.each(layer, function (v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _lodash2.default.each(node.selfEdges, function (selfEdge) {\n        _util2.default.addDummyNode(g, 'selfedge', {\n          width: selfEdge.label.width,\n          height: selfEdge.label.height,\n          rank: node.rank,\n          order: i + ++orderShift,\n          e: selfEdge.e,\n          label: selfEdge.label\n        }, '_se');\n      });\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _lodash2.default.each(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'selfedge') {\n      var selfNode = g.node(node.e.v);\n      var x = selfNode.x + selfNode.width / 2;\n      var y = selfNode.y;\n      var dx = node.x - x;\n      var dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [{ x: x + 2 * dx / 3, y: y - dy }, { x: x + 5 * dx / 6, y: y - dy }, { x: x + dx, y: y }, { x: x + 5 * dx / 6, y: y + dy }, { x: x + 2 * dx / 3, y: y + dy }];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _lodash2.default.mapValues(_lodash2.default.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _lodash2.default.each(attrs, function (v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}\n\nexports.default = layout;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _greedyFas = __webpack_require__(8);\n\nvar _greedyFas2 = _interopRequireDefault(_greedyFas);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction run(g) {\n  var fas = g.graph().acyclicer === 'greedy' ? (0, _greedyFas2.default)(g, weightFn(g)) : dfsFAS(g);\n  _lodash2.default.each(fas, function (e) {\n    var label = g.edge(e);\n    g.removeEdge(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, _lodash2.default.uniqueId('rev'));\n  });\n\n  function weightFn(g) {\n    return function (e) {\n      return g.edge(e).weight;\n    };\n  }\n}\n\nfunction dfsFAS(g) {\n  var fas = [];\n  var stack = {};\n  var visited = {};\n\n  function dfs(v) {\n    if (_lodash2.default.has(visited, v)) {\n      return;\n    }\n    visited[v] = true;\n    stack[v] = true;\n    _lodash2.default.each(g.outEdges(v), function (e) {\n      if (_lodash2.default.has(stack, e.w)) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n    delete stack[v];\n  }\n\n  _lodash2.default.each(g.nodes(), dfs);\n  return fas;\n}\n\nfunction undo(g) {\n  _lodash2.default.each(g.edges(), function (e) {\n    var label = g.edge(e);\n    if (label.reversed) {\n      g.removeEdge(e);\n\n      var forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n}\n\nexports.default = {\n  run: run,\n  undo: undo\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graphlib = __webpack_require__(2);\n\nvar _list = __webpack_require__(9);\n\nvar _list2 = _interopRequireDefault(_list);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n */\n\nvar DEFAULT_WEIGHT_FN = _lodash2.default.constant(1);\n\nfunction greedyFAS(g, weightFn) {\n  if (g.nodeCount() <= 1) {\n    return [];\n  }\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n\n  // Expand multi-edges\n  return _lodash2.default.flatten(_lodash2.default.map(results, function (e) {\n    return g.outEdges(e.v, e.w);\n  }), true);\n}\n\nfunction doGreedyFAS(g, buckets, zeroIdx) {\n  var results = [];\n  var sources = buckets[buckets.length - 1];\n  var sinks = buckets[0];\n\n  var entry = void 0;\n  while (g.nodeCount()) {\n    while (entry = sinks.dequeue()) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    while (entry = sources.dequeue()) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    if (g.nodeCount()) {\n      for (var i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\n  var results = collectPredecessors ? [] : undefined;\n\n  _lodash2.default.each(g.inEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var uEntry = g.node(edge.v);\n\n    if (collectPredecessors) {\n      results.push({ v: edge.v, w: edge.w });\n    }\n\n    uEntry.out -= weight;\n    assignBucket(buckets, zeroIdx, uEntry);\n  });\n\n  _lodash2.default.each(g.outEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var w = edge.w;\n    var wEntry = g.node(w);\n    wEntry['in'] -= weight;\n    assignBucket(buckets, zeroIdx, wEntry);\n  });\n\n  g.removeNode(entry.v);\n\n  return results;\n}\n\nfunction buildState(g, weightFn) {\n  var fasGraph = new _graphlib.Graph();\n  var maxIn = 0;\n  var maxOut = 0;\n\n  _lodash2.default.each(g.nodes(), function (v) {\n    fasGraph.setNode(v, { v: v, 'in': 0, out: 0 });\n  });\n\n  // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n  _lodash2.default.each(g.edges(), function (e) {\n    var prevWeight = fasGraph.edge(e.v, e.w) || 0;\n    var weight = weightFn(e);\n    var edgeWeight = prevWeight + weight;\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\n    maxOut = Math.max(maxOut, fasGraph.node(e.v).out += weight);\n    maxIn = Math.max(maxIn, fasGraph.node(e.w)['in'] += weight);\n  });\n\n  var buckets = _lodash2.default.range(maxOut + maxIn + 3).map(function () {\n    return new _list2.default();\n  });\n  var zeroIdx = maxIn + 1;\n\n  _lodash2.default.each(fasGraph.nodes(), function (v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n  });\n\n  return { graph: fasGraph, buckets: buckets, zeroIdx: zeroIdx };\n}\n\nfunction assignBucket(buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry['in']) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry['in'] + zeroIdx].enqueue(entry);\n  }\n}\n\nexports.default = greedyFAS;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\n\nfunction List() {\n  var sentinel = {};\n  sentinel._next = sentinel._prev = sentinel;\n  this._sentinel = sentinel;\n}\n\nList.prototype.dequeue = function () {\n  var sentinel = this._sentinel;\n  var entry = sentinel._prev;\n  if (entry !== sentinel) {\n    unlink(entry);\n    return entry;\n  }\n};\n\nList.prototype.enqueue = function (entry) {\n  var sentinel = this._sentinel;\n  if (entry._prev && entry._next) {\n    unlink(entry);\n  }\n  entry._next = sentinel._next;\n  sentinel._next._prev = entry;\n  sentinel._next = entry;\n  entry._prev = sentinel;\n};\n\nList.prototype.toString = function () {\n  var strs = [];\n  var sentinel = this._sentinel;\n  var curr = sentinel._prev;\n  while (curr !== sentinel) {\n    strs.push(JSON.stringify(curr, filterOutLinks));\n    curr = curr._prev;\n  }\n  return '[' + strs.join(', ') + ']';\n};\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== '_next' && k !== '_prev') {\n    return v;\n  }\n}\n\nexports.default = List;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\nfunction run(g) {\n  g.graph().dummyChains = [];\n  _lodash2.default.each(g.edges(), function (edge) {\n    normalizeEdge(g, edge);\n  });\n}\n\nfunction normalizeEdge(g, e) {\n  var v = e.v;\n  var vRank = g.node(v).rank;\n  var w = e.w;\n  var wRank = g.node(w).rank;\n  var name = e.name;\n  var edgeLabel = g.edge(e);\n  var labelRank = edgeLabel.labelRank;\n\n  if (wRank === vRank + 1) return;\n\n  g.removeEdge(e);\n\n  var dummy = void 0;\n  var attrs = void 0;\n  var i = void 0;\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      width: 0,\n      height: 0,\n      edgeLabel: edgeLabel,\n      edgeObj: e,\n      rank: vRank\n    };\n    dummy = _util2.default.addDummyNode(g, 'edge', attrs, '_d');\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      attrs.dummy = 'edge-label';\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy);\n    }\n    v = dummy;\n  }\n\n  g.setEdge(v, w, { weight: edgeLabel.weight }, name);\n}\n\nfunction undo(g) {\n  _lodash2.default.each(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var origLabel = node.edgeLabel;\n    var w = null;\n    g.setEdge(node.edgeObj, origLabel);\n    while (node.dummy) {\n      w = g.successors(v)[0];\n      g.removeNode(v);\n      origLabel.points.push({ x: node.x, y: node.y });\n      if (node.dummy === 'edge-label') {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n      v = w;\n      node = g.node(v);\n    }\n  });\n}\n\nexports.default = {\n  run: run,\n  undo: undo\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _util = __webpack_require__(3);\n\nvar _feasibleTree = __webpack_require__(4);\n\nvar _feasibleTree2 = _interopRequireDefault(_feasibleTree);\n\nvar _networkSimplex = __webpack_require__(12);\n\nvar _networkSimplex2 = _interopRequireDefault(_networkSimplex);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\nfunction rank(g) {\n  switch (g.graph().ranker) {\n    case 'network-simplex':\n      networkSimplexRanker(g);break;\n    case 'tight-tree':\n      tightTreeRanker(g);break;\n    case 'longest-path':\n      longestPathRanker(g);break;\n    default:\n      networkSimplexRanker(g);\n  }\n}\n\n// A fast and simple ranker, but results are far from optimal.\nvar longestPathRanker = _util.longestPath;\n\nfunction tightTreeRanker(g) {\n  (0, _util.longestPath)(g);\n  (0, _feasibleTree2.default)(g);\n}\n\nfunction networkSimplexRanker(g) {\n  (0, _networkSimplex2.default)(g);\n}\n\nexports.default = rank;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graphlib = __webpack_require__(2);\n\nvar _feasibleTree = __webpack_require__(4);\n\nvar _feasibleTree2 = _interopRequireDefault(_feasibleTree);\n\nvar _util = __webpack_require__(3);\n\nvar _util2 = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar preorder = _graphlib.alg.preorder,\n    postorder = _graphlib.alg.postorder;\n\n// Expose some internals for testing purposes\n\nnetworkSimplex.initLowLimValues = initLowLimValues;\nnetworkSimplex.initCutValues = initCutValues;\nnetworkSimplex.calcCutValue = calcCutValue;\nnetworkSimplex.leaveEdge = leaveEdge;\nnetworkSimplex.enterEdge = enterEdge;\nnetworkSimplex.exchangeEdges = exchangeEdges;\n\n/*\n * The network simplex algorithm assigns ranks to each node in the input graph\n * and iteratively improves the ranking to reduce the length of edges.\n *\n * Preconditions:\n *\n *    1. The input graph must be a DAG.\n *    2. All nodes in the graph must have an object value.\n *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes.\n *\n * Postconditions:\n *\n *    1. All nodes in the graph will have an assigned \"rank\" attribute that has\n *       been optimized by the network simplex algorithm. Ranks start at 0.\n *\n *\n * A rough sketch of the algorithm is as follows:\n *\n *    1. Assign initial ranks to each node. We use the longest path algorithm,\n *       which assigns ranks to the lowest position possible. In general this\n *       leads to very wide bottom ranks and unnecessarily long edges.\n *    2. Construct a feasible tight tree. A tight tree is one such that all\n *       edges in the tree have no slack (difference between length of edge\n *       and minlen for the edge). This by itself greatly improves the assigned\n *       rankings by shorting edges.\n *    3. Iteratively find edges that have negative cut values. Generally a\n *       negative cut value indicates that the edge could be removed and a new\n *       tree edge could be added to produce a more compact graph.\n *\n * Much of the algorithms here are derived from Gansner, et al., \"A Technique\n * for Drawing Directed Graphs.\" The structure of the file roughly follows the\n * structure of the overall algorithm.\n */\nfunction networkSimplex(g) {\n  g = (0, _util2.simplify)(g);\n  (0, _util.longestPath)(g);\n  var t = (0, _feasibleTree2.default)(g);\n  initLowLimValues(t);\n  initCutValues(t, g);\n\n  var e = void 0;\n  var f = void 0;\n  while (e = leaveEdge(t)) {\n    f = enterEdge(t, g, e);\n    exchangeEdges(t, g, e, f);\n  }\n}\n\n/*\n * Initializes cut values for all edges in the tree.\n */\nfunction initCutValues(t, g) {\n  var vs = postorder(t, t.nodes());\n  vs = vs.slice(0, vs.length - 1);\n  _lodash2.default.each(vs, function (v) {\n    assignCutValue(t, g, v);\n  });\n}\n\nfunction assignCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  t.edge(child, parent).cutvalue = calcCutValue(t, g, child);\n}\n\n/*\n * Given the tight tree, its graph, and a child in the graph calculate and\n * return the cut value for the edge between the child and its parent.\n */\nfunction calcCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  // True if the child is on the tail end of the edge in the directed graph\n  var childIsTail = true;\n  // The graph's view of the tree edge we're inspecting\n  var graphEdge = g.edge(child, parent);\n  // The accumulated cut value for the edge between this node and its parent\n  var cutValue = 0;\n\n  if (!graphEdge) {\n    childIsTail = false;\n    graphEdge = g.edge(parent, child);\n  }\n\n  cutValue = graphEdge.weight;\n\n  _lodash2.default.each(g.nodeEdges(child), function (e) {\n    var isOutEdge = e.v === child;\n    var other = isOutEdge ? e.w : e.v;\n\n    if (other !== parent) {\n      var pointsToHead = isOutEdge === childIsTail;\n      var otherWeight = g.edge(e).weight;\n\n      cutValue += pointsToHead ? otherWeight : -otherWeight;\n      if (isTreeEdge(t, child, other)) {\n        var otherCutValue = t.edge(child, other).cutvalue;\n        cutValue += pointsToHead ? -otherCutValue : otherCutValue;\n      }\n    }\n  });\n\n  return cutValue;\n}\n\nfunction initLowLimValues(tree, root) {\n  if (arguments.length < 2) {\n    root = tree.nodes()[0];\n  }\n  dfsAssignLowLim(tree, {}, 1, root);\n}\n\nfunction dfsAssignLowLim(tree, visited, nextLim, v, parent) {\n  var low = nextLim;\n  var label = tree.node(v);\n\n  visited[v] = true;\n  _lodash2.default.each(tree.neighbors(v), function (w) {\n    if (!_lodash2.default.has(visited, w)) {\n      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v);\n    }\n  });\n\n  label.low = low;\n  label.lim = nextLim++;\n  if (parent) {\n    label.parent = parent;\n  } else {\n    // TODO should be able to remove this when we incrementally update low lim\n    delete label.parent;\n  }\n\n  return nextLim;\n}\n\nfunction leaveEdge(tree) {\n  return _lodash2.default.find(tree.edges(), function (e) {\n    return tree.edge(e).cutvalue < 0;\n  });\n}\n\nfunction enterEdge(t, g, edge) {\n  var v = edge.v;\n  var w = edge.w;\n\n  // For the rest of this function we assume that v is the tail and w is the\n  // head, so if we don't have this edge in the graph we should flip it to\n  // match the correct orientation.\n  if (!g.hasEdge(v, w)) {\n    v = edge.w;\n    w = edge.v;\n  }\n\n  var vLabel = t.node(v);\n  var wLabel = t.node(w);\n  var tailLabel = vLabel;\n  var flip = false;\n\n  // If the root is in the tail of the edge then we need to flip the logic that\n  // checks for the head and tail nodes in the candidates function below.\n  if (vLabel.lim > wLabel.lim) {\n    tailLabel = wLabel;\n    flip = true;\n  }\n\n  var candidates = _lodash2.default.filter(g.edges(), function (edge) {\n    return flip === isDescendant(t, t.node(edge.v), tailLabel) && flip !== isDescendant(t, t.node(edge.w), tailLabel);\n  });\n\n  return _lodash2.default.minBy(candidates, function (edge) {\n    return (0, _util.slack)(g, edge);\n  });\n}\n\nfunction exchangeEdges(t, g, e, f) {\n  var v = e.v;\n  var w = e.w;\n  t.removeEdge(v, w);\n  t.setEdge(f.v, f.w, {});\n  initLowLimValues(t);\n  initCutValues(t, g);\n  updateRanks(t, g);\n}\n\nfunction updateRanks(t, g) {\n  var root = _lodash2.default.find(t.nodes(), function (v) {\n    return !g.node(v).parent;\n  });\n  var vs = preorder(t, root);\n  vs = vs.slice(1);\n  _lodash2.default.each(vs, function (v) {\n    var parent = t.node(v).parent;\n    var edge = g.edge(v, parent);\n    var flipped = false;\n\n    if (!edge) {\n      edge = g.edge(parent, v);\n      flipped = true;\n    }\n\n    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen);\n  });\n}\n\n/*\n * Returns true if the edge is in the tree.\n */\nfunction isTreeEdge(tree, u, v) {\n  return tree.hasEdge(u, v);\n}\n\n/*\n * Returns true if the specified node is descendant of the root node per the\n * assigned low and lim attributes in the tree.\n */\nfunction isDescendant(tree, vLabel, rootLabel) {\n  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim;\n}\n\nexports.default = networkSimplex;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parentDummyChains(g) {\n  var postorderNums = postorder(g);\n\n  _lodash2.default.each(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var edgeObj = node.edgeObj;\n    var pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w);\n    var path = pathData.path;\n    var lca = pathData.lca;\n    var pathIdx = 0;\n    var pathV = path[pathIdx];\n    var ascending = true;\n\n    while (v !== edgeObj.w) {\n      node = g.node(v);\n\n      if (ascending) {\n        while ((pathV = path[pathIdx]) !== lca && g.node(pathV).maxRank < node.rank) {\n          pathIdx++;\n        }\n\n        if (pathV === lca) {\n          ascending = false;\n        }\n      }\n\n      if (!ascending) {\n        while (pathIdx < path.length - 1 && g.node(pathV = path[pathIdx + 1]).minRank <= node.rank) {\n          pathIdx++;\n        }\n        pathV = path[pathIdx];\n      }\n\n      g.setParent(v, pathV);\n      v = g.successors(v)[0];\n    }\n  });\n}\n\n// Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\nfunction findPath(g, postorderNums, v, w) {\n  var vPath = [];\n  var wPath = [];\n  var low = Math.min(postorderNums[v].low, postorderNums[w].low);\n  var lim = Math.max(postorderNums[v].lim, postorderNums[w].lim);\n  var parent = void 0;\n  var lca = void 0;\n\n  // Traverse up from v to find the LCA\n  parent = v;\n  do {\n    parent = g.parent(parent);\n    vPath.push(parent);\n  } while (parent && (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n  lca = parent;\n\n  // Traverse from w to LCA\n  parent = w;\n  while ((parent = g.parent(parent)) !== lca) {\n    wPath.push(parent);\n  }\n\n  return { path: vPath.concat(wPath.reverse()), lca: lca };\n}\n\nfunction postorder(g) {\n  var result = {};\n  var lim = 0;\n\n  function dfs(v) {\n    var low = lim;\n    _lodash2.default.each(g.children(v), dfs);\n    result[v] = { low: low, lim: lim++ };\n  }\n  _lodash2.default.each(g.children(), dfs);\n\n  return result;\n}\n\nexports.default = parentDummyChains;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,\n * adds appropriate edges to ensure that all cluster nodes are placed between\n * these boundries, and ensures that the graph is connected.\n *\n * In addition we ensure, through the use of the minlen property, that nodes\n * and subgraph border nodes to not end up on the same rank.\n *\n * Preconditions:\n *\n *    1. Input graph is a DAG\n *    2. Nodes in the input graph has a minlen attribute\n *\n * Postconditions:\n *\n *    1. Input graph is connected.\n *    2. Dummy nodes are added for the tops and bottoms of subgraphs.\n *    3. The minlen attribute for nodes is adjusted to ensure nodes do not\n *       get placed on the same rank as subgraph border nodes.\n *\n * The nesting graph idea comes from Sander, \"Layout of Compound Directed\n * Graphs.\"\n */\nfunction run(g) {\n  var root = _util2.default.addDummyNode(g, 'root', {}, '_root');\n  var depths = treeDepths(g);\n  var height = _lodash2.default.max(_lodash2.default.values(depths)) - 1;\n  var nodeSep = 2 * height + 1;\n\n  g.graph().nestingRoot = root;\n\n  // Multiply minlen by nodeSep to align nodes on non-border ranks.\n  _lodash2.default.each(g.edges(), function (e) {\n    g.edge(e).minlen *= nodeSep;\n  });\n\n  // Calculate a weight that is sufficient to keep subgraphs vertically compact\n  var weight = sumWeights(g) + 1;\n\n  // Create border nodes and link them up\n  _lodash2.default.each(g.children(), function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n  });\n\n  // Save the multiplier for node layers for later removal of empty border\n  // layers.\n  g.graph().nodeRankFactor = nodeSep;\n}\n\nfunction dfs(g, root, nodeSep, weight, height, depths, v) {\n  var children = g.children(v);\n  if (!children.length) {\n    if (v !== root) {\n      g.setEdge(root, v, { weight: 0, minlen: nodeSep });\n    }\n    return;\n  }\n\n  var top = _util2.default.addBorderNode(g, '_bt');\n  var bottom = _util2.default.addBorderNode(g, '_bb');\n  var label = g.node(v);\n\n  g.setParent(top, v);\n  label.borderTop = top;\n  g.setParent(bottom, v);\n  label.borderBottom = bottom;\n\n  _lodash2.default.each(children, function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n\n    var childNode = g.node(child);\n    var childTop = childNode.borderTop ? childNode.borderTop : child;\n    var childBottom = childNode.borderBottom ? childNode.borderBottom : child;\n    var thisWeight = childNode.borderTop ? weight : 2 * weight;\n    var minlen = childTop !== childBottom ? 1 : height - depths[v] + 1;\n\n    g.setEdge(top, childTop, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n\n    g.setEdge(childBottom, bottom, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n  });\n\n  if (!g.parent(v)) {\n    g.setEdge(root, top, { weight: 0, minlen: height + depths[v] });\n  }\n}\n\nfunction treeDepths(g) {\n  var depths = {};\n  function dfs(v, depth) {\n    var children = g.children(v);\n    if (children && children.length) {\n      _lodash2.default.each(children, function (child) {\n        dfs(child, depth + 1);\n      });\n    }\n    depths[v] = depth;\n  }\n  _lodash2.default.each(g.children(), function (v) {\n    dfs(v, 1);\n  });\n  return depths;\n}\n\nfunction sumWeights(g) {\n  return _lodash2.default.reduce(g.edges(), function (acc, e) {\n    return acc + g.edge(e).weight;\n  }, 0);\n}\n\nfunction cleanup(g) {\n  var graphLabel = g.graph();\n  g.removeNode(graphLabel.nestingRoot);\n  delete graphLabel.nestingRoot;\n  _lodash2.default.each(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.nestingEdge) {\n      g.removeEdge(e);\n    }\n  });\n}\n\nexports.default = {\n  run: run,\n  cleanup: cleanup\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addBorderSegments(g) {\n  function dfs(v) {\n    var children = g.children(v);\n    var node = g.node(v);\n    if (children.length) {\n      _lodash2.default.each(children, dfs);\n    }\n\n    if (_lodash2.default.has(node, 'minRank')) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (var rank = node.minRank, maxRank = node.maxRank + 1; rank < maxRank; ++rank) {\n        addBorderNode(g, 'borderLeft', '_bl', v, node, rank);\n        addBorderNode(g, 'borderRight', '_br', v, node, rank);\n      }\n    }\n  }\n\n  _lodash2.default.each(g.children(), dfs);\n}\n\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = { width: 0, height: 0, rank: rank, borderType: prop };\n  var prev = sgNode[prop][rank - 1];\n  var curr = _util2.default.addDummyNode(g, 'border', label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, { weight: 1 });\n  }\n}\n\nexports.default = addBorderSegments;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction adjust(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapWidthHeight(g);\n  }\n}\n\nfunction undo(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'bt' || rankDir === 'rl') {\n    reverseY(g);\n  }\n\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapXY(g);\n    swapWidthHeight(g);\n  }\n}\n\nfunction swapWidthHeight(g) {\n  _lodash2.default.each(g.nodes(), function (v) {\n    swapWidthHeightOne(g.node(v));\n  });\n  _lodash2.default.each(g.edges(), function (e) {\n    swapWidthHeightOne(g.edge(e));\n  });\n}\n\nfunction swapWidthHeightOne(attrs) {\n  var w = attrs.width;\n  attrs.width = attrs.height;\n  attrs.height = w;\n}\n\nfunction reverseY(g) {\n  _lodash2.default.each(g.nodes(), function (v) {\n    reverseYOne(g.node(v));\n  });\n\n  _lodash2.default.each(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _lodash2.default.each(edge.points, reverseYOne);\n    if (_lodash2.default.has(edge, 'y')) {\n      reverseYOne(edge);\n    }\n  });\n}\n\nfunction reverseYOne(attrs) {\n  attrs.y = -attrs.y;\n}\n\nfunction swapXY(g) {\n  _lodash2.default.each(g.nodes(), function (v) {\n    swapXYOne(g.node(v));\n  });\n\n  _lodash2.default.each(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _lodash2.default.each(edge.points, swapXYOne);\n    if (_lodash2.default.has(edge, 'x')) {\n      swapXYOne(edge);\n    }\n  });\n}\n\nfunction swapXYOne(attrs) {\n  var x = attrs.x;\n  attrs.x = attrs.y;\n  attrs.y = x;\n}\n\nexports.default = {\n  adjust: adjust,\n  undo: undo\n};\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graphlib = __webpack_require__(2);\n\nvar _initOrder = __webpack_require__(18);\n\nvar _initOrder2 = _interopRequireDefault(_initOrder);\n\nvar _crossCount = __webpack_require__(19);\n\nvar _crossCount2 = _interopRequireDefault(_crossCount);\n\nvar _sortSubgraph = __webpack_require__(20);\n\nvar _sortSubgraph2 = _interopRequireDefault(_sortSubgraph);\n\nvar _buildLayerGraph = __webpack_require__(24);\n\nvar _buildLayerGraph2 = _interopRequireDefault(_buildLayerGraph);\n\nvar _addSubgraphConstraints = __webpack_require__(25);\n\nvar _addSubgraphConstraints2 = _interopRequireDefault(_addSubgraphConstraints);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Applies heuristics to minimize edge crossings in the graph and sets the best\n * order solution as an order attribute on each node.\n *\n * Pre-conditions:\n *\n *    1. Graph must be DAG\n *    2. Graph nodes must be objects with a \"rank\" attribute\n *    3. Graph edges must have the \"weight\" attribute\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have an \"order\" attribute based on the results of the\n *       algorithm.\n */\nfunction order(g) {\n  var maxRank = _util2.default.maxRank(g);\n  var downLayerGraphs = buildLayerGraphs(g, _lodash2.default.range(1, maxRank + 1), 'inEdges');\n  var upLayerGraphs = buildLayerGraphs(g, _lodash2.default.range(maxRank - 1, -1, -1), 'outEdges');\n\n  var layering = (0, _initOrder2.default)(g);\n  assignOrder(g, layering);\n\n  var bestCC = Number.POSITIVE_INFINITY;\n  var best = void 0;\n\n  for (var i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2);\n\n    layering = _util2.default.buildLayerMatrix(g);\n    var cc = (0, _crossCount2.default)(g, layering);\n    if (cc < bestCC) {\n      lastBest = 0;\n      best = _lodash2.default.cloneDeep(layering);\n      bestCC = cc;\n    }\n  }\n\n  assignOrder(g, best);\n}\n\nfunction buildLayerGraphs(g, ranks, relationship) {\n  return _lodash2.default.map(ranks, function (rank) {\n    return (0, _buildLayerGraph2.default)(g, rank, relationship);\n  });\n}\n\nfunction sweepLayerGraphs(layerGraphs, biasRight) {\n  var cg = new _graphlib.Graph();\n  _lodash2.default.each(layerGraphs, function (lg) {\n    var root = lg.graph().root;\n    var sorted = (0, _sortSubgraph2.default)(lg, root, cg, biasRight);\n    _lodash2.default.each(sorted.vs, function (v, i) {\n      lg.node(v).order = i;\n    });\n    (0, _addSubgraphConstraints2.default)(lg, cg, sorted.vs);\n  });\n}\n\nfunction assignOrder(g, layering) {\n  _lodash2.default.each(layering, function (layer) {\n    _lodash2.default.each(layer, function (v, i) {\n      g.node(v).order = i;\n    });\n  });\n}\n\nexports.default = order;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nfunction initOrder(g) {\n  var visited = {};\n  var simpleNodes = _lodash2.default.filter(g.nodes(), function (v) {\n    return !g.children(v).length;\n  });\n  var maxRank = _lodash2.default.max(_lodash2.default.map(simpleNodes, function (v) {\n    return g.node(v).rank;\n  }));\n  var layers = _lodash2.default.map(_lodash2.default.range(maxRank + 1), function () {\n    return [];\n  });\n\n  function dfs(v) {\n    if (_lodash2.default.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n    _lodash2.default.each(g.successors(v), dfs);\n  }\n\n  var orderedVs = _lodash2.default.sortBy(simpleNodes, function (v) {\n    return g.node(v).rank;\n  });\n  _lodash2.default.each(orderedVs, dfs);\n\n  return layers;\n}\n\nexports.default = initOrder;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * A function that takes a layering (an array of layers, each with an array of\n * ordererd nodes) and a graph and returns a weighted crossing count.\n *\n * Pre-conditions:\n *\n *    1. Input graph must be simple (not a multigraph), directed, and include\n *       only simple edges.\n *    2. Edges in the input graph must have assigned weights.\n *\n * Post-conditions:\n *\n *    1. The graph and layering matrix are left unchanged.\n *\n * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\"\n */\nfunction crossCount(g, layering) {\n  var cc = 0;\n  for (var i = 1; i < layering.length; ++i) {\n    cc += twoLayerCrossCount(g, layering[i - 1], layering[i]);\n  }\n  return cc;\n}\n\nfunction twoLayerCrossCount(g, northLayer, southLayer) {\n  // Sort all of the edges between the north and south layers by their position\n  // in the north layer and then the south. Map these edges to the position of\n  // their head in the south layer.\n  var southPos = _lodash2.default.zipObject(southLayer, _lodash2.default.map(southLayer, function (v, i) {\n    return i;\n  }));\n  var southEntries = _lodash2.default.flatten(_lodash2.default.map(northLayer, function (v) {\n    return _lodash2.default.chain(g.outEdges(v)).map(function (e) {\n      return { pos: southPos[e.w], weight: g.edge(e).weight };\n    }).sortBy('pos').value();\n  }), true);\n\n  // Build the accumulator tree\n  var firstIndex = 1;\n  while (firstIndex < southLayer.length) {\n    firstIndex <<= 1;\n  }\n  var treeSize = 2 * firstIndex - 1;\n  firstIndex -= 1;\n  var tree = _lodash2.default.map(new Array(treeSize), function () {\n    return 0;\n  });\n\n  // Calculate the weighted crossings\n  var cc = 0;\n  _lodash2.default.each(southEntries.forEach(function (entry) {\n    var index = entry.pos + firstIndex;\n    tree[index] += entry.weight;\n    var weightSum = 0;\n    while (index > 0) {\n      if (index % 2) {\n        weightSum += tree[index + 1];\n      }\n      index = index - 1 >> 1;\n      tree[index] += entry.weight;\n    }\n    cc += entry.weight * weightSum;\n  }));\n\n  return cc;\n}\n\nexports.default = crossCount;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _barycenter = __webpack_require__(21);\n\nvar _barycenter2 = _interopRequireDefault(_barycenter);\n\nvar _resolveConflicts = __webpack_require__(22);\n\nvar _resolveConflicts2 = _interopRequireDefault(_resolveConflicts);\n\nvar _sort = __webpack_require__(23);\n\nvar _sort2 = _interopRequireDefault(_sort);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction sortSubgraph(g, v, cg, biasRight) {\n  var movable = g.children(v);\n  var node = g.node(v);\n  var bl = node ? node.borderLeft : undefined;\n  var br = node ? node.borderRight : undefined;\n  var subgraphs = {};\n\n  if (bl) {\n    movable = _lodash2.default.filter(movable, function (w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = (0, _barycenter2.default)(g, movable);\n  _lodash2.default.each(barycenters, function (entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (_lodash2.default.has(subgraphResult, 'barycenter')) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = (0, _resolveConflicts2.default)(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n\n  var result = (0, _sort2.default)(entries, biasRight);\n\n  if (bl) {\n    result.vs = _lodash2.default.flatten([bl, result.vs, br], true);\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]);\n      var brPred = g.node(g.predecessors(br)[0]);\n      if (!_lodash2.default.has(result, 'barycenter')) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter = (result.barycenter * result.weight + blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _lodash2.default.each(entries, function (entry) {\n    entry.vs = _lodash2.default.flatten(entry.vs.map(function (v) {\n      if (subgraphs[v]) {\n        return subgraphs[v].vs;\n      }\n      return v;\n    }), true);\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_lodash2.default.isUndefined(target.barycenter)) {\n    target.barycenter = (target.barycenter * target.weight + other.barycenter * other.weight) / (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}\n\nexports.default = sortSubgraph;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction barycenter(g, movable) {\n  return _lodash2.default.map(movable, function (v) {\n    var inV = g.inEdges(v);\n    if (!inV.length) {\n      return { v: v };\n    } else {\n      var result = _lodash2.default.reduce(inV, function (acc, e) {\n        var edge = g.edge(e);\n        var nodeU = g.node(e.v);\n        return {\n          sum: acc.sum + edge.weight * nodeU.order,\n          weight: acc.weight + edge.weight\n        };\n      }, { sum: 0, weight: 0 });\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight\n      };\n    }\n  });\n}\n\nexports.default = barycenter;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts(entries, cg) {\n  var mappedEntries = {};\n  _lodash2.default.each(entries, function (entry, i) {\n    var tmp = mappedEntries[entry.v] = {\n      indegree: 0,\n      'in': [],\n      out: [],\n      vs: [entry.v],\n      i: i\n    };\n    if (!_lodash2.default.isUndefined(entry.barycenter)) {\n      tmp.barycenter = entry.barycenter;\n      tmp.weight = entry.weight;\n    }\n  });\n\n  _lodash2.default.each(cg.edges(), function (e) {\n    var entryV = mappedEntries[e.v];\n    var entryW = mappedEntries[e.w];\n    if (!_lodash2.default.isUndefined(entryV) && !_lodash2.default.isUndefined(entryW)) {\n      entryW.indegree++;\n      entryV.out.push(mappedEntries[e.w]);\n    }\n  });\n\n  var sourceSet = _lodash2.default.filter(mappedEntries, function (entry) {\n    return !entry.indegree;\n  });\n\n  return doResolveConflicts(sourceSet);\n}\n\nfunction doResolveConflicts(sourceSet) {\n  var entries = [];\n\n  function handleIn(vEntry) {\n    return function (uEntry) {\n      if (uEntry.merged) {\n        return;\n      }\n      if (_lodash2.default.isUndefined(uEntry.barycenter) || _lodash2.default.isUndefined(vEntry.barycenter) || uEntry.barycenter >= vEntry.barycenter) {\n        mergeEntries(vEntry, uEntry);\n      }\n    };\n  }\n\n  function handleOut(vEntry) {\n    return function (wEntry) {\n      wEntry['in'].push(vEntry);\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry);\n      }\n    };\n  }\n\n  while (sourceSet.length) {\n    var entry = sourceSet.pop();\n    entries.push(entry);\n    _lodash2.default.each(entry['in'].reverse(), handleIn(entry));\n    _lodash2.default.each(entry.out, handleOut(entry));\n  }\n\n  return _lodash2.default.chain(entries).filter(function (entry) {\n    return !entry.merged;\n  }).map(function (entry) {\n    return _lodash2.default.pick(entry, ['vs', 'i', 'barycenter', 'weight']);\n  }).value();\n}\n\nfunction mergeEntries(target, source) {\n  var sum = 0;\n  var weight = 0;\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight;\n    weight += target.weight;\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight;\n    weight += source.weight;\n  }\n\n  target.vs = source.vs.concat(target.vs);\n  target.barycenter = sum / weight;\n  target.weight = weight;\n  target.i = Math.min(source.i, target.i);\n  source.merged = true;\n}\n\nexports.default = resolveConflicts;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction sort(entries, biasRight) {\n  var parts = _util2.default.partition(entries, function (entry) {\n    return _lodash2.default.has(entry, 'barycenter');\n  });\n  var sortable = parts.lhs;\n  var unsortable = _lodash2.default.sortBy(parts.rhs, function (entry) {\n    return -entry.i;\n  });\n  var vs = [];\n  var sum = 0;\n  var weight = 0;\n  var vsIndex = 0;\n\n  sortable.sort(compareWithBias(!!biasRight));\n\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\n  _lodash2.default.each(sortable, function (entry) {\n    vsIndex += entry.vs.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter * entry.weight;\n    weight += entry.weight;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n\n  var result = { vs: _lodash2.default.flatten(vs, true) };\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n  return result;\n}\n\nfunction consumeUnsortable(vs, unsortable, index) {\n  var last = void 0;\n  while (unsortable.length && (last = _lodash2.default.last(unsortable)).i <= index) {\n    unsortable.pop();\n    vs.push(last.vs);\n    index++;\n  }\n  return index;\n}\n\nfunction compareWithBias(bias) {\n  return function (entryV, entryW) {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1;\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1;\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n}\n\nexports.default = sort;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graphlib = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Constructs a graph that can be used to sort a layer of nodes. The graph will\n * contain all base and subgraph nodes from the request layer in their original\n * hierarchy and any edges that are incident on these nodes and are of the type\n * requested by the \"relationship\" parameter.\n *\n * Nodes from the requested rank that do not have parents are assigned a root\n * node in the output graph, which is set in the root graph attribute. This\n * makes it easy to walk the hierarchy of movable nodes during ordering.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG\n *    2. Base nodes in the input graph have a rank attribute\n *    3. Subgraph nodes in the input graph has minRank and maxRank attributes\n *    4. Edges have an assigned weight\n *\n * Post-conditions:\n *\n *    1. Output graph has all nodes in the movable rank with preserved\n *       hierarchy.\n *    2. Root nodes in the movable layer are made children of the node\n *       indicated by the root attribute of the graph.\n *    3. Non-movable nodes incident on movable nodes, selected by the\n *       relationship parameter, are included in the graph (without hierarchy).\n *    4. Edges incident on movable nodes, selected by the relationship\n *       parameter, are added to the output graph.\n *    5. The weights for copied edges are aggregated as need, since the output\n *       graph is not a multi-graph.\n */\nfunction buildLayerGraph(g, rank, relationship) {\n  var root = createRootNode(g);\n  var result = new _graphlib.Graph({ compound: true }).setGraph({ root: root }).setDefaultNodeLabel(function (v) {\n    return g.node(v);\n  });\n\n  _lodash2.default.each(g.nodes(), function (v) {\n    var node = g.node(v);\n    var parent = g.parent(v);\n\n    if (node.rank === rank || node.minRank <= rank && rank <= node.maxRank) {\n      result.setNode(v);\n      result.setParent(v, parent || root);\n\n      // This assumes we have only short edges!\n      _lodash2.default.each(g[relationship](v), function (e) {\n        var u = e.v === v ? e.w : e.v;\n        var edge = result.edge(u, v);\n        var weight = !_lodash2.default.isUndefined(edge) ? edge.weight : 0;\n        result.setEdge(u, v, { weight: g.edge(e).weight + weight });\n      });\n\n      if (_lodash2.default.has(node, 'minRank')) {\n        result.setNode(v, {\n          borderLeft: node.borderLeft[rank],\n          borderRight: node.borderRight[rank]\n        });\n      }\n    }\n  });\n\n  return result;\n}\n\nfunction createRootNode(g) {\n  var v = void 0;\n  while (g.hasNode(v = _lodash2.default.uniqueId('_root'))) {}\n  return v;\n}\n\nexports.default = buildLayerGraph;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addSubgraphConstraints(g, cg, vs) {\n  var prev = {};\n  var rootPrev = void 0;\n\n  _lodash2.default.each(vs, function (v) {\n    var child = g.parent(v);\n    var parent = void 0;\n    var prevChild = void 0;\n    while (child) {\n      parent = g.parent(child);\n      if (parent) {\n        prevChild = prev[parent];\n        prev[parent] = child;\n      } else {\n        prevChild = rootPrev;\n        rootPrev = child;\n      }\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child);\n        return;\n      }\n      child = parent;\n    }\n  });\n\n  /*\n  function dfs(v) {\n    const children = v ? g.children(v) : g.children();\n    if (children.length) {\n      const min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.each(children, function(child) {\n        const childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n}\n\nexports.default = addSubgraphConstraints;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _bk = __webpack_require__(27);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction position(g) {\n  g = _util2.default.asNonCompoundGraph(g);\n\n  positionY(g);\n  _lodash2.default.each((0, _bk.positionX)(g), function (x, v) {\n    g.node(v).x = x;\n  });\n}\n\nfunction positionY(g) {\n  var layering = _util2.default.buildLayerMatrix(g);\n  var rankSep = g.graph().ranksep;\n  var prevY = 0;\n  _lodash2.default.each(layering, function (layer) {\n    var maxHeight = _lodash2.default.max(_lodash2.default.map(layer, function (v) {\n      return g.node(v).height;\n    }));\n    _lodash2.default.each(layer, function (v) {\n      g.node(v).y = prevY + maxHeight / 2;\n    });\n    prevY += maxHeight + rankSep;\n  });\n}\n\nexports.default = position;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.positionX = positionX;\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graphlib = __webpack_require__(2);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * This module provides coordinate assignment based on Brandes and Köpf, \"Fast\n * and Simple Horizontal Coordinate Assignment.\"\n */\n\n/*\n * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\"\n * property. A type-1 conflict is one where a non-inner segment crosses an\n * inner segment. An inner segment is an edge with both incident nodes marked\n * with the \"dummy\" property.\n *\n * This algorithm scans layer by layer, starting with the second, for type-1\n * conflicts between the current layer and the previous layer. For each layer\n * it scans the nodes from left to right until it reaches one that is incident\n * on an inner segment. It then scans predecessors to determine if they have\n * edges that cross that inner segment. At the end a final scan is done for all\n * nodes on the current rank to see if they cross the last visited inner\n * segment.\n *\n * This algorithm (safely) assumes that a dummy node will only be incident on a\n * single node in the layers being scanned.\n */\nfunction findType1Conflicts(g, layering) {\n  var conflicts = {};\n\n  function visitLayer(prevLayer, layer) {\n    // last visited node in the previous layer that is incident on an inner\n    // segment.\n    var k0 = 0;\n    // Tracks the last node in this layer scanned for crossings with a type-1\n    // segment.\n    var scanPos = 0;\n    var prevLayerLength = prevLayer.length;\n    var lastNode = _lodash2.default.last(layer);\n\n    _lodash2.default.each(layer, function (v, i) {\n      var w = findOtherInnerSegmentNode(g, v);\n      var k1 = w ? g.node(w).order : prevLayerLength;\n\n      if (w || v === lastNode) {\n        _lodash2.default.each(layer.slice(scanPos, i + 1), function (scanNode) {\n          _lodash2.default.each(g.predecessors(scanNode), function (u) {\n            var uLabel = g.node(u);\n            var uPos = uLabel.order;\n            if ((uPos < k0 || k1 < uPos) && !(uLabel.dummy && g.node(scanNode).dummy)) {\n              addConflict(conflicts, u, scanNode);\n            }\n          });\n        });\n        scanPos = i + 1;\n        k0 = k1;\n      }\n    });\n\n    return layer;\n  }\n\n  _lodash2.default.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findType2Conflicts(g, layering) {\n  var conflicts = {};\n\n  function scan(south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n    var v = void 0;\n    _lodash2.default.each(_lodash2.default.range(southPos, southEnd), function (i) {\n      v = south[i];\n      if (g.node(v).dummy) {\n        _lodash2.default.each(g.predecessors(v), function (u) {\n          var uNode = g.node(u);\n          if (uNode.dummy && (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n            addConflict(conflicts, u, v);\n          }\n        });\n      }\n    });\n  }\n\n  function visitLayer(north, south) {\n    var prevNorthPos = -1;\n    var nextNorthPos = void 0;\n    var southPos = 0;\n\n    _lodash2.default.each(south, function (v, southLookahead) {\n      if (g.node(v).dummy === 'border') {\n        var predecessors = g.predecessors(v);\n        if (predecessors.length) {\n          nextNorthPos = g.node(predecessors[0]).order;\n          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);\n          southPos = southLookahead;\n          prevNorthPos = nextNorthPos;\n        }\n      }\n      scan(south, southPos, south.length, nextNorthPos, north.length);\n    });\n\n    return south;\n  }\n\n  _lodash2.default.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findOtherInnerSegmentNode(g, v) {\n  if (g.node(v).dummy) {\n    return _lodash2.default.find(g.predecessors(v), function (u) {\n      return g.node(u).dummy;\n    });\n  }\n}\n\nfunction addConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  var conflictsV = conflicts[v];\n  if (!conflictsV) {\n    conflicts[v] = conflictsV = {};\n  }\n  conflictsV[w] = true;\n}\n\nfunction hasConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return _lodash2.default.has(conflicts[v], w);\n}\n\n/*\n * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n * attempts to align a node with one of its median neighbors. If the edge\n * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n * If a previous node has already formed a block with a node after the node\n * we're trying to form a block with, we also ignore that possibility - our\n * blocks would be split in that scenario.\n */\nfunction verticalAlignment(g, layering, conflicts, neighborFn) {\n  var root = {};\n  var align = {};\n  var pos = {};\n\n  // We cache the position here based on the layering because the graph and\n  // layering may be out of sync. The layering matrix is manipulated to\n  // generate different extreme alignments.\n  _lodash2.default.each(layering, function (layer) {\n    _lodash2.default.each(layer, function (v, order) {\n      root[v] = v;\n      align[v] = v;\n      pos[v] = order;\n    });\n  });\n\n  _lodash2.default.each(layering, function (layer) {\n    var prevIdx = -1;\n    _lodash2.default.each(layer, function (v) {\n      var ws = neighborFn(v);\n      if (ws.length) {\n        ws = _lodash2.default.sortBy(ws, function (w) {\n          return pos[w];\n        });\n        var mp = (ws.length - 1) / 2;\n        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n          var w = ws[i];\n          if (align[v] === v && prevIdx < pos[w] && !hasConflict(conflicts, v, w)) {\n            align[w] = v;\n            align[v] = root[v] = root[w];\n            prevIdx = pos[w];\n          }\n        }\n      }\n    });\n  });\n\n  return { root: root, align: align };\n}\n\nfunction horizontalCompaction(g, layering, root, align, reverseSep) {\n  // This portion of the algorithm differs from BK due to a number of problems.\n  // Instead of their algorithm we construct a new block graph and do two\n  // sweeps. The first sweep places blocks with the smallest possible\n  // coordinates. The second sweep removes unused space by moving blocks to the\n  // greatest coordinates without violating separation.\n  var xs = {};\n  var blockG = buildBlockGraph(g, layering, root, reverseSep);\n\n  // First pass, assign smallest coordinates via DFS\n  var visited = {};\n  function pass1(v) {\n    if (!_lodash2.default.has(visited, v)) {\n      visited[v] = true;\n      xs[v] = _lodash2.default.reduce(blockG.inEdges(v), function (max, e) {\n        pass1(e.v);\n        return Math.max(max, xs[e.v] + blockG.edge(e));\n      }, 0);\n    }\n  }\n  _lodash2.default.each(blockG.nodes(), pass1);\n\n  var borderType = reverseSep ? 'borderLeft' : 'borderRight';\n  function pass2(v) {\n    if (visited[v] !== 2) {\n      visited[v]++;\n      var node = g.node(v);\n      var min = _lodash2.default.reduce(blockG.outEdges(v), function (min, e) {\n        pass2(e.w);\n        return Math.min(min, xs[e.w] - blockG.edge(e));\n      }, Number.POSITIVE_INFINITY);\n      if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n        xs[v] = Math.max(xs[v], min);\n      }\n    }\n  }\n  _lodash2.default.each(blockG.nodes(), pass2);\n\n  // Assign x coordinates to all nodes\n  _lodash2.default.each(align, function (v) {\n    xs[v] = xs[root[v]];\n  });\n\n  return xs;\n}\n\nfunction buildBlockGraph(g, layering, root, reverseSep) {\n  var blockGraph = new _graphlib.Graph();\n  var graphLabel = g.graph();\n  var sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep);\n\n  _lodash2.default.each(layering, function (layer) {\n    var u = void 0;\n    _lodash2.default.each(layer, function (v) {\n      var vRoot = root[v];\n      blockGraph.setNode(vRoot);\n      if (u) {\n        var uRoot = root[u];\n        var prevMax = blockGraph.edge(uRoot, vRoot);\n        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));\n      }\n      u = v;\n    });\n  });\n\n  return blockGraph;\n}\n\n/*\n * Returns the alignment that has the smallest width of the given alignments.\n */\nfunction findSmallestWidthAlignment(g, xss) {\n  return _lodash2.default.minBy(_lodash2.default.values(xss), function (xs) {\n    var min = (_lodash2.default.minBy(_lodash2.default.toPairs(xs), function (pair) {\n      return pair[1] - width(g, pair[0]) / 2;\n    }) || ['k', 0])[1];\n    var max = (_lodash2.default.maxBy(_lodash2.default.toPairs(xs), function (pair) {\n      return pair[1] + width(g, pair[0]) / 2;\n    }) || ['k', 0])[1];\n    return max - min;\n  });\n}\n\n/*\n * Align the coordinates of each of the layout alignments such that\n * left-biased alignments have their minimum coordinate at the same point as\n * the minimum coordinate of the smallest width alignment and right-biased\n * alignments have their maximum coordinate at the same point as the maximum\n * coordinate of the smallest width alignment.\n */\nfunction alignCoordinates(xss, alignTo) {\n  var alignToMin = _lodash2.default.min(_lodash2.default.values(alignTo));\n  var alignToMax = _lodash2.default.max(_lodash2.default.values(alignTo));\n\n  _lodash2.default.each(['u', 'd'], function (vert) {\n    _lodash2.default.each(['l', 'r'], function (horiz) {\n      var alignment = vert + horiz;\n      var xs = xss[alignment];\n      if (xs === alignTo) {\n        return;\n      }\n      var delta = horiz === 'l' ? alignToMin - _lodash2.default.min(_lodash2.default.values(xs)) : alignToMax - _lodash2.default.max(_lodash2.default.values(xs));\n      if (delta) {\n        xss[alignment] = _lodash2.default.mapValues(xs, function (x) {\n          return x + delta;\n        });\n      }\n    });\n  });\n}\n\nfunction balance(xss, align) {\n  return _lodash2.default.mapValues(xss.ul, function (ignore, v) {\n    if (align) {\n      return xss[align.toLowerCase()][v];\n    } else {\n      var xs = _lodash2.default.sortBy(_lodash2.default.map(xss, v));\n      return (xs[1] + xs[2]) / 2;\n    }\n  });\n}\n\nfunction positionX(g) {\n  var layering = _util2.default.buildLayerMatrix(g);\n  var conflicts = _lodash2.default.merge(findType1Conflicts(g, layering), findType2Conflicts(g, layering));\n\n  var xss = {};\n  var adjustedLayering = void 0;\n  _lodash2.default.each(['u', 'd'], function (vert) {\n    adjustedLayering = vert === 'u' ? layering : _lodash2.default.values(layering).reverse();\n    _lodash2.default.each(['l', 'r'], function (horiz) {\n      if (horiz === 'r') {\n        adjustedLayering = _lodash2.default.map(adjustedLayering, function (inner) {\n          return _lodash2.default.values(inner).reverse();\n        });\n      }\n\n      var neighborFn = _lodash2.default.bind(vert === 'u' ? g.predecessors : g.successors, g);\n      var align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);\n      var xs = horizontalCompaction(g, adjustedLayering, align.root, align.align, horiz === 'r');\n      if (horiz === 'r') {\n        xs = _lodash2.default.mapValues(xs, function (x) {\n          return -x;\n        });\n      }\n      xss[vert + horiz] = xs;\n    });\n  });\n\n  var smallestWidth = findSmallestWidthAlignment(g, xss);\n  alignCoordinates(xss, smallestWidth);\n  return balance(xss, g.graph().align);\n}\n\nfunction sep(nodeSep, edgeSep, reverseSep) {\n  return function (g, v, w) {\n    var vLabel = g.node(v);\n    var wLabel = g.node(w);\n    var sum = 0;\n    var delta = void 0;\n\n    sum += vLabel.width / 2;\n    if (_lodash2.default.has(vLabel, 'labelpos')) {\n      switch (vLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = -vLabel.width / 2;break;\n        case 'r':\n          delta = vLabel.width / 2;break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;\n\n    sum += wLabel.width / 2;\n    if (_lodash2.default.has(wLabel, 'labelpos')) {\n      switch (wLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = wLabel.width / 2;break;\n        case 'r':\n          delta = -wLabel.width / 2;break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    return sum;\n  };\n}\n\nfunction width(g, v) {\n  return g.node(v).width;\n}\n\nexports.default = {\n  positionX: positionX,\n  findType1Conflicts: findType1Conflicts,\n  findType2Conflicts: findType2Conflicts,\n  addConflict: addConflict,\n  hasConflict: hasConflict,\n  verticalAlignment: verticalAlignment,\n  horizontalCompaction: horizontalCompaction,\n  alignCoordinates: alignCoordinates,\n  findSmallestWidthAlignment: findSmallestWidthAlignment,\n  balance: balance\n};\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(0);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graphlib = __webpack_require__(2);\n\nvar _util = __webpack_require__(1);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* istanbul ignore next */\nfunction debugOrdering(g) {\n  var layerMatrix = _util2.default.buildLayerMatrix(g);\n\n  var h = new _graphlib.Graph({ compound: true, multigraph: true }).setGraph({});\n\n  _lodash2.default.each(g.nodes(), function (v) {\n    h.setNode(v, { label: v });\n    h.setParent(v, 'layer' + g.node(v).rank);\n  });\n\n  _lodash2.default.each(g.edges(), function (e) {\n    h.setEdge(e.v, e.w, {}, e.name);\n  });\n\n  _lodash2.default.each(layerMatrix, function (layer, i) {\n    var layerV = 'layer' + i;\n    h.setNode(layerV, { rank: 'same' });\n    _lodash2.default.reduce(layer, function (u, v) {\n      h.setEdge(u, v, { style: 'invis' });\n      return v;\n    });\n  });\n\n  return h;\n}\n\nexports.default = {\n  debugOrdering: debugOrdering\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"name\":\"dagre-layout\",\"version\":\"0.7.9\",\"description\":\"Graph layout for JavaScript\",\"author\":\"Tyler Long <tyler4long@gmail.com>\",\"main\":\"dist/dagre-layout.js\",\"keywords\":[\"graph\",\"layout\",\"dagre\"],\"scripts\":{\"lint\":\"standard\",\"jest\":\"jest --coverage\",\"karma\":\"node -r babel-register node_modules/.bin/karma start\",\"test\":\"yarn lint && yarn jest && yarn karma --single-run\",\"bench\":\"node -r babel-register src/bench.js\",\"build\":\"node -r babel-register node_modules/.bin/webpack --progress --colors\",\"build:watch\":\"yarn build --watch\",\"upgrade\":\"yarn-upgrade-all\"},\"dependencies\":{\"graphlib\":\"^2.1.1\",\"lodash\":\"^4.17.4\"},\"devDependencies\":{\"babel-core\":\"^6.26.0\",\"babel-loader\":\"^7.1.2\",\"babel-preset-env\":\"^1.6.0\",\"babel-preset-es2015\":\"^6.24.1\",\"benchmark\":\"^2.1.4\",\"chai\":\"^4.1.2\",\"coveralls\":\"^2.13.1\",\"jest\":\"^21.0.1\",\"karma\":\"^1.7.1\",\"karma-chrome-launcher\":\"^2.2.0\",\"karma-firefox-launcher\":\"^1.0.1\",\"karma-mocha\":\"^1.3.0\",\"karma-safari-launcher\":\"^1.0.0\",\"mocha\":\"^3.5.0\",\"sprintf\":\"^0.1.5\",\"standard\":\"^10.0.3\",\"webpack\":\"^3.5.6\",\"webpack-node-externals\":\"^1.6.0\",\"yarn-upgrade-all\":\"^0.1.8\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/tylingsoft/dagre-layout.git\"},\"license\":\"MIT\",\"files\":[\"dist/\",\"lib/\",\"index.js\"],\"standard\":{\"ignore\":[\"dist/**/*.js\",\"coverage/**/*.js\"]},\"jest\":{\"testRegex\":\"test/.+?-test\\\\.js\",\"testPathIgnorePatterns\":[\"test/bundle-test\\\\.js\"]}}\n\n/***/ })\n/******/ ])[\"default\"];\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre-layout/dist/dagre-layout.core.js\n// module id = 13\n// module chunks = 0","function intersectNode (node, point) {\n  return node.intersect(point)\n}\n\nexport default intersectNode\n\n\n\n// WEBPACK FOOTER //\n// ./lib/intersect/intersect-node.js","import intersectEllipse from './intersect-ellipse'\n\nfunction intersectCircle (node, rx, point) {\n  return intersectEllipse(node, rx, rx, point)\n}\n\nexport default intersectCircle\n\n\n\n// WEBPACK FOOTER //\n// ./lib/intersect/intersect-circle.js","import intersectLine from './intersect-line'\n\n/*\n * Returns the point ({x, y}) at which the point argument intersects with the\n * node argument assuming that it has the shape specified by polygon.\n */\nfunction intersectPolygon (node, polyPoints, point) {\n  const x1 = node.x\n  const y1 = node.y\n\n  const intersections = []\n\n  let minX = Number.POSITIVE_INFINITY\n  let minY = Number.POSITIVE_INFINITY\n  polyPoints.forEach(function (entry) {\n    minX = Math.min(minX, entry.x)\n    minY = Math.min(minY, entry.y)\n  })\n\n  const left = x1 - node.width / 2 - minX\n  const top = y1 - node.height / 2 - minY\n\n  for (let i = 0; i < polyPoints.length; i += 1) {\n    const p1 = polyPoints[i]\n    const p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0]\n    const intersect = intersectLine(node, point,\n      {x: left + p1.x, y: top + p1.y}, {x: left + p2.x, y: top + p2.y})\n    if (intersect) {\n      intersections.push(intersect)\n    }\n  }\n\n  if (!intersections.length) {\n    console.log('NO INTERSECTION FOUND, RETURN NODE CENTER', node)\n    return node\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function (p, q) {\n      const pdx = p.x - point.x\n      const pdy = p.y - point.y\n      const distp = Math.sqrt(pdx * pdx + pdy * pdy)\n\n      const qdx = q.x - point.x\n      const qdy = q.y - point.y\n      const distq = Math.sqrt(qdx * qdx + qdy * qdy)\n\n      return (distp < distq) ? -1 : (distp === distq ? 0 : 1)\n    })\n  }\n  return intersections[0]\n}\n\nexport default intersectPolygon\n\n\n\n// WEBPACK FOOTER //\n// ./lib/intersect/intersect-polygon.js","function intersectRect (node, point) {\n  const x = node.x\n  const y = node.y\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  const dx = point.x - x\n  const dy = point.y - y\n  let w = node.width / 2\n  let h = node.height / 2\n\n  let sx, sy\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h\n    }\n    sx = dy === 0 ? 0 : h * dx / dy\n    sy = h\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w\n    }\n    sx = w\n    sy = dx === 0 ? 0 : w * dy / dx\n  }\n\n  return {x: x + sx, y: y + sy}\n}\n\nexport default intersectRect\n\n\n\n// WEBPACK FOOTER //\n// ./lib/intersect/intersect-rect.js","import d3 from 'd3'\nimport graphlib from 'graphlib'\nimport dagre from 'dagre-layout'\n\nimport intersect from './lib/intersect'\nimport render from './lib/render'\nimport util from './lib/util'\nimport { version } from './package.json'\n\nexport default {\n  d3,\n  graphlib,\n  dagre,\n  intersect,\n  render,\n  util,\n  version\n}\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","// Includes only the \"core\" of graphlib\nmodule.exports = {\n  Graph: require(\"./graph\"),\n  version: require(\"./version\")\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/index.js\n// module id = 19\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 20\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 21\n// module chunks = 0","module.exports = '2.1.1';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/version.js\n// module id = 22\n// module chunks = 0","var _ = require(\"./lodash\"),\n    Graph = require(\"./graph\");\n\nmodule.exports = {\n  write: write,\n  read: read\n};\n\nfunction write(g) {\n  var json = {\n    options: {\n      directed: g.isDirected(),\n      multigraph: g.isMultigraph(),\n      compound: g.isCompound()\n    },\n    nodes: writeNodes(g),\n    edges: writeEdges(g)\n  };\n  if (!_.isUndefined(g.graph())) {\n    json.value = _.clone(g.graph());\n  }\n  return json;\n}\n\nfunction writeNodes(g) {\n  return _.map(g.nodes(), function(v) {\n    var nodeValue = g.node(v),\n        parent = g.parent(v),\n        node = { v: v };\n    if (!_.isUndefined(nodeValue)) {\n      node.value = nodeValue;\n    }\n    if (!_.isUndefined(parent)) {\n      node.parent = parent;\n    }\n    return node;\n  });\n}\n\nfunction writeEdges(g) {\n  return _.map(g.edges(), function(e) {\n    var edgeValue = g.edge(e),\n        edge = { v: e.v, w: e.w };\n    if (!_.isUndefined(e.name)) {\n      edge.name = e.name;\n    }\n    if (!_.isUndefined(edgeValue)) {\n      edge.value = edgeValue;\n    }\n    return edge;\n  });\n}\n\nfunction read(json) {\n  var g = new Graph(json.options).setGraph(json.value);\n  _.each(json.nodes, function(entry) {\n    g.setNode(entry.v, entry.value);\n    if (entry.parent) {\n      g.setParent(entry.v, entry.parent);\n    }\n  });\n  _.each(json.edges, function(entry) {\n    g.setEdge({ v: entry.v, w: entry.w, name: entry.name }, entry.value);\n  });\n  return g;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/json.js\n// module id = 23\n// module chunks = 0","module.exports = {\n  components: require(\"./components\"),\n  dijkstra: require(\"./dijkstra\"),\n  dijkstraAll: require(\"./dijkstra-all\"),\n  findCycles: require(\"./find-cycles\"),\n  floydWarshall: require(\"./floyd-warshall\"),\n  isAcyclic: require(\"./is-acyclic\"),\n  postorder: require(\"./postorder\"),\n  preorder: require(\"./preorder\"),\n  prim: require(\"./prim\"),\n  tarjan: require(\"./tarjan\"),\n  topsort: require(\"./topsort\")\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/index.js\n// module id = 24\n// module chunks = 0","var _ = require(\"../lodash\");\n\nmodule.exports = components;\n\nfunction components(g) {\n  var visited = {},\n      cmpts = [],\n      cmpt;\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    cmpt.push(v);\n    _.each(g.successors(v), dfs);\n    _.each(g.predecessors(v), dfs);\n  }\n\n  _.each(g.nodes(), function(v) {\n    cmpt = [];\n    dfs(v);\n    if (cmpt.length) {\n      cmpts.push(cmpt);\n    }\n  });\n\n  return cmpts;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/components.js\n// module id = 25\n// module chunks = 0","var dijkstra = require(\"./dijkstra\"),\n    _ = require(\"../lodash\");\n\nmodule.exports = dijkstraAll;\n\nfunction dijkstraAll(g, weightFunc, edgeFunc) {\n  return _.transform(g.nodes(), function(acc, v) {\n    acc[v] = dijkstra(g, v, weightFunc, edgeFunc);\n  }, {});\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/dijkstra-all.js\n// module id = 26\n// module chunks = 0","var _ = require(\"../lodash\"),\n    tarjan = require(\"./tarjan\");\n\nmodule.exports = findCycles;\n\nfunction findCycles(g) {\n  return _.filter(tarjan(g), function(cmpt) {\n    return cmpt.length > 1 || (cmpt.length === 1 && g.hasEdge(cmpt[0], cmpt[0]));\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/find-cycles.js\n// module id = 27\n// module chunks = 0","var _ = require(\"../lodash\");\n\nmodule.exports = floydWarshall;\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction floydWarshall(g, weightFn, edgeFn) {\n  return runFloydWarshall(g,\n                          weightFn || DEFAULT_WEIGHT_FUNC,\n                          edgeFn || function(v) { return g.outEdges(v); });\n}\n\nfunction runFloydWarshall(g, weightFn, edgeFn) {\n  var results = {},\n      nodes = g.nodes();\n\n  nodes.forEach(function(v) {\n    results[v] = {};\n    results[v][v] = { distance: 0 };\n    nodes.forEach(function(w) {\n      if (v !== w) {\n        results[v][w] = { distance: Number.POSITIVE_INFINITY };\n      }\n    });\n    edgeFn(v).forEach(function(edge) {\n      var w = edge.v === v ? edge.w : edge.v,\n          d = weightFn(edge);\n      results[v][w] = { distance: d, predecessor: v };\n    });\n  });\n\n  nodes.forEach(function(k) {\n    var rowK = results[k];\n    nodes.forEach(function(i) {\n      var rowI = results[i];\n      nodes.forEach(function(j) {\n        var ik = rowI[k];\n        var kj = rowK[j];\n        var ij = rowI[j];\n        var altDistance = ik.distance + kj.distance;\n        if (altDistance < ij.distance) {\n          ij.distance = altDistance;\n          ij.predecessor = kj.predecessor;\n        }\n      });\n    });\n  });\n\n  return results;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/floyd-warshall.js\n// module id = 28\n// module chunks = 0","var topsort = require(\"./topsort\");\n\nmodule.exports = isAcyclic;\n\nfunction isAcyclic(g) {\n  try {\n    topsort(g);\n  } catch (e) {\n    if (e instanceof topsort.CycleException) {\n      return false;\n    }\n    throw e;\n  }\n  return true;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/is-acyclic.js\n// module id = 29\n// module chunks = 0","var dfs = require(\"./dfs\");\n\nmodule.exports = postorder;\n\nfunction postorder(g, vs) {\n  return dfs(g, vs, \"post\");\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/postorder.js\n// module id = 30\n// module chunks = 0","var dfs = require(\"./dfs\");\n\nmodule.exports = preorder;\n\nfunction preorder(g, vs) {\n  return dfs(g, vs, \"pre\");\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/preorder.js\n// module id = 31\n// module chunks = 0","var _ = require(\"../lodash\"),\n    Graph = require(\"../graph\"),\n    PriorityQueue = require(\"../data/priority-queue\");\n\nmodule.exports = prim;\n\nfunction prim(g, weightFunc) {\n  var result = new Graph(),\n      parents = {},\n      pq = new PriorityQueue(),\n      v;\n\n  function updateNeighbors(edge) {\n    var w = edge.v === v ? edge.w : edge.v,\n        pri = pq.priority(w);\n    if (pri !== undefined) {\n      var edgeWeight = weightFunc(edge);\n      if (edgeWeight < pri) {\n        parents[w] = v;\n        pq.decrease(w, edgeWeight);\n      }\n    }\n  }\n\n  if (g.nodeCount() === 0) {\n    return result;\n  }\n\n  _.each(g.nodes(), function(v) {\n    pq.add(v, Number.POSITIVE_INFINITY);\n    result.setNode(v);\n  });\n\n  // Start from an arbitrary node\n  pq.decrease(g.nodes()[0], 0);\n\n  var init = false;\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    if (_.has(parents, v)) {\n      result.setEdge(v, parents[v]);\n    } else if (init) {\n      throw new Error(\"Input graph is not connected: \" + g);\n    } else {\n      init = true;\n    }\n\n    g.nodeEdges(v).forEach(updateNeighbors);\n  }\n\n  return result;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/prim.js\n// module id = 32\n// module chunks = 0","import node from './intersect-node'\nimport circle from './intersect-circle'\nimport ellipse from './intersect-ellipse'\nimport polygon from './intersect-polygon'\nimport rect from './intersect-rect'\n\nexport default {\n  node,\n  circle,\n  ellipse,\n  polygon,\n  rect\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/intersect/index.js","/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine (p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  const a1 = p2.y - p1.y\n  const b1 = p1.x - p2.x\n  const c1 = (p2.x * p1.y) - (p1.x * p2.y)\n\n  // Compute r3 and r4.\n  const r3 = ((a1 * q1.x) + (b1 * q1.y) + c1)\n  const r4 = ((a1 * q2.x) + (b1 * q2.y) + c1)\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n    return /* DONT_INTERSECT */\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  const a2 = q2.y - q1.y\n  const b2 = q1.x - q2.x\n  const c2 = (q2.x * q1.y) - (q1.x * q2.y)\n\n  // Compute r1 and r2\n  const r1 = (a2 * p1.x) + (b2 * p1.y) + c2\n  const r2 = (a2 * p2.x) + (b2 * p2.y) + c2\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n    return /* DONT_INTERSECT */\n  }\n\n  // Line segments intersect: compute intersection point.\n  const denom = (a1 * b2) - (a2 * b1)\n  if (denom === 0) {\n    return /* COLLINEAR */\n  }\n\n  const offset = Math.abs(denom / 2)\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  let num = (b1 * c2) - (b2 * c1)\n  const x = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom)\n\n  num = (a2 * c1) - (a1 * c2)\n  const y = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom)\n\n  return { x, y }\n}\n\nfunction sameSign (r1, r2) {\n  return r1 * r2 > 0\n}\n\nexport default intersectLine\n\n\n\n// WEBPACK FOOTER //\n// ./lib/intersect/intersect-line.js","import _ from 'lodash'\nimport { layout } from 'dagre-layout'\n\nimport positionNodes from './position-nodes'\nimport positionEdgeLabels from './position-edge-labels'\nimport positionClusters from './position-clusters'\nimport createNodes from './create-nodes'\nimport createClusters from './create-clusters'\nimport createEdgeLabels from './create-edge-labels'\nimport createEdgePaths from './create-edge-paths'\nimport shapes from './shapes'\nimport arrows from './arrows'\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render () {\n  let _createNodes = createNodes\n  let _createClusters = createClusters\n  let _createEdgeLabels = createEdgeLabels\n  let _createEdgePaths = createEdgePaths\n  let _shapes = shapes\n  let _arrows = arrows\n\n  const fn = function (svg, g) {\n    preProcessGraph(g)\n\n    const outputGroup = createOrSelectGroup(svg, 'output')\n    const clustersGroup = createOrSelectGroup(outputGroup, 'clusters')\n    const edgePathsGroup = createOrSelectGroup(outputGroup, 'edgePaths')\n    const edgeLabels = _createEdgeLabels(createOrSelectGroup(outputGroup, 'edgeLabels'), g)\n    const nodes = _createNodes(createOrSelectGroup(outputGroup, 'nodes'), g, _shapes)\n\n    layout(g)\n\n    positionNodes(nodes, g)\n    positionEdgeLabels(edgeLabels, g)\n    _createEdgePaths(edgePathsGroup, g, _arrows)\n\n    const clusters = _createClusters(clustersGroup, g)\n    positionClusters(clusters, g)\n\n    postProcessGraph(g)\n  }\n\n  fn.createNodes = function (value) {\n    if (!arguments.length) {\n      return _createNodes\n    }\n    _createNodes = value\n    return fn\n  }\n\n  fn.createClusters = function (value) {\n    if (!arguments.length) {\n      return _createClusters\n    }\n    _createClusters = value\n    return fn\n  }\n\n  fn.createEdgeLabels = function (value) {\n    if (!arguments.length) {\n      return _createEdgeLabels\n    }\n    _createEdgeLabels = value\n    return fn\n  }\n\n  fn.createEdgePaths = function (value) {\n    if (!arguments.length) {\n      return _createEdgePaths\n    }\n    _createEdgePaths = value\n    return fn\n  }\n\n  fn.shapes = function (value) {\n    if (!arguments.length) {\n      return _shapes\n    }\n    _shapes = value\n    return fn\n  }\n\n  fn.arrows = function (value) {\n    if (!arguments.length) {\n      return _arrows\n    }\n    _arrows = value\n    return fn\n  }\n\n  return fn\n}\n\nconst NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: 'rect'\n}\n\nconst EDGE_DEFAULT_ATTRS = {\n  arrowhead: 'normal',\n  lineInterpolate: 'linear'\n}\n\nfunction preProcessGraph (g) {\n  g.nodes().forEach(function (v) {\n    const node = g.node(v)\n    if (!_.has(node, 'label') && !g.children(v).length) { node.label = v }\n\n    if (_.has(node, 'paddingX')) {\n      _.defaults(node, {\n        paddingLeft: node.paddingX,\n        paddingRight: node.paddingX\n      })\n    }\n\n    if (_.has(node, 'paddingY')) {\n      _.defaults(node, {\n        paddingTop: node.paddingY,\n        paddingBottom: node.paddingY\n      })\n    }\n\n    if (_.has(node, 'padding')) {\n      _.defaults(node, {\n        paddingLeft: node.padding,\n        paddingRight: node.padding,\n        paddingTop: node.padding,\n        paddingBottom: node.padding\n      })\n    }\n\n    _.defaults(node, NODE_DEFAULT_ATTRS)\n\n    _.each(['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom'], function (k) {\n      node[k] = Number(node[k])\n    })\n\n    // Save dimensions for restore during post-processing\n    if (_.has(node, 'width')) { node._prevWidth = node.width }\n    if (_.has(node, 'height')) { node._prevHeight = node.height }\n  })\n\n  g.edges().forEach(function (e) {\n    const edge = g.edge(e)\n    if (!_.has(edge, 'label')) { edge.label = '' }\n    _.defaults(edge, EDGE_DEFAULT_ATTRS)\n  })\n}\n\nfunction postProcessGraph (g) {\n  _.each(g.nodes(), function (v) {\n    const node = g.node(v)\n\n    // Restore original dimensions\n    if (_.has(node, '_prevWidth')) {\n      node.width = node._prevWidth\n    } else {\n      delete node.width\n    }\n\n    if (_.has(node, '_prevHeight')) {\n      node.height = node._prevHeight\n    } else {\n      delete node.height\n    }\n\n    delete node._prevWidth\n    delete node._prevHeight\n  })\n}\n\nfunction createOrSelectGroup (root, name) {\n  let selection = root.select('g.' + name)\n  if (selection.empty()) {\n    selection = root.append('g').attr('class', name)\n  }\n  return selection\n}\n\nexport default render\n\n\n\n// WEBPACK FOOTER //\n// ./lib/render.js","import d3 from 'd3'\n\nimport util from './util'\n\nfunction positionNodes (selection, g) {\n  const created = selection.filter(function () { return !d3.select(this).classed('update') })\n\n  function translate (v) {\n    const node = g.node(v)\n    return 'translate(' + node.x + ',' + node.y + ')'\n  }\n\n  created.attr('transform', translate)\n\n  util.applyTransition(selection, g)\n    .style('opacity', 1)\n    .attr('transform', translate)\n}\n\nexport default positionNodes\n\n\n\n// WEBPACK FOOTER //\n// ./lib/position-nodes.js","import d3 from 'd3'\nimport _ from 'lodash'\n\nimport util from './util'\n\nfunction positionEdgeLabels (selection, g) {\n  const created = selection.filter(function () { return !d3.select(this).classed('update') })\n\n  function translate (e) {\n    const edge = g.edge(e)\n    return _.has(edge, 'x') ? 'translate(' + edge.x + ',' + edge.y + ')' : ''\n  }\n\n  created.attr('transform', translate)\n\n  util.applyTransition(selection, g)\n    .style('opacity', 1)\n    .attr('transform', translate)\n}\n\nexport default positionEdgeLabels\n\n\n\n// WEBPACK FOOTER //\n// ./lib/position-edge-labels.js","import d3 from 'd3'\nimport util from './util'\n\nfunction positionClusters (selection, g) {\n  const created = selection.filter(function () { return !d3.select(this).classed('update') })\n\n  function translate (v) {\n    const node = g.node(v)\n    return 'translate(' + node.x + ',' + node.y + ')'\n  }\n\n  created.attr('transform', translate)\n\n  util.applyTransition(selection, g)\n      .style('opacity', 1)\n      .attr('transform', translate)\n\n  util.applyTransition(created.selectAll('rect'), g)\n      .attr('width', function (v) { return g.node(v).width })\n      .attr('height', function (v) { return g.node(v).height })\n      .attr('x', function (v) {\n        const node = g.node(v)\n        return -node.width / 2\n      })\n      .attr('y', function (v) {\n        const node = g.node(v)\n        return -node.height / 2\n      })\n}\n\nexport default positionClusters\n\n\n\n// WEBPACK FOOTER //\n// ./lib/position-clusters.js","import _ from 'lodash'\nimport d3 from 'd3'\n\nimport addLabel from './label/add-label'\nimport util from './util'\n\nfunction createNodes (selection, g, shapes) {\n  const simpleNodes = g.nodes().filter(function (v) { return !util.isSubgraph(g, v) })\n  const svgNodes = selection.selectAll('g.node')\n    .data(simpleNodes, function (v) { return v })\n    .classed('update', true)\n\n  svgNodes.selectAll('*').remove()\n  svgNodes.enter()\n    .append('g')\n      .attr('class', 'node')\n      .style('opacity', 0)\n  svgNodes.each(function (v) {\n    const node = g.node(v)\n    const thisGroup = d3.select(this)\n    const labelGroup = thisGroup.append('g').attr('class', 'label')\n    const labelDom = addLabel(labelGroup, node)\n    const shape = shapes[node.shape]\n    const bbox = _.pick(labelDom.node().getBBox(), 'width', 'height')\n\n    node.elem = this\n\n    if (node.id) { thisGroup.attr('id', node.id) }\n    if (node.labelId) { labelGroup.attr('id', node.labelId) }\n    util.applyClass(thisGroup, node['class'],\n      (thisGroup.classed('update') ? 'update ' : '') + 'node')\n\n    if (_.has(node, 'width')) { bbox.width = node.width }\n    if (_.has(node, 'height')) { bbox.height = node.height }\n\n    bbox.width += node.paddingLeft + node.paddingRight\n    bbox.height += node.paddingTop + node.paddingBottom\n    labelGroup.attr('transform', 'translate(' +\n      ((node.paddingLeft - node.paddingRight) / 2) + ',' +\n      ((node.paddingTop - node.paddingBottom) / 2) + ')')\n\n    const shapeSvg = shape(d3.select(this), bbox, node)\n    util.applyStyle(shapeSvg, node.style)\n\n    const shapeBBox = shapeSvg.node().getBBox()\n    node.width = shapeBBox.width\n    node.height = shapeBBox.height\n  })\n\n  util.applyTransition(svgNodes.exit(), g)\n    .style('opacity', 0)\n    .remove()\n\n  return svgNodes\n}\n\nexport default createNodes\n\n\n\n// WEBPACK FOOTER //\n// ./lib/create-nodes.js","import util from '../util'\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel (root, node) {\n  const domNode = root.append('text')\n\n  const lines = processEscapeSequences(node.label).split('\\n')\n  for (let i = 0; i < lines.length; i += 1) {\n    domNode\n      .append('tspan')\n        .attr('xml:space', 'preserve')\n        .attr('dy', '1em')\n        .attr('x', '1')\n        .text(lines[i])\n  }\n\n  util.applyStyle(domNode, node.labelStyle)\n\n  return domNode\n}\n\nfunction processEscapeSequences (text) {\n  let newText = ''\n  let escaped = false\n  let ch = null\n  for (let i = 0; i < text.length; i += 1) {\n    ch = text[i]\n    if (escaped) {\n      switch (ch) {\n        case 'n': newText += '\\n'; break\n        default: newText += ch\n      }\n      escaped = false\n    } else if (ch === '\\\\') {\n      escaped = true\n    } else {\n      newText += ch\n    }\n  }\n  return newText\n}\n\nexport default addTextLabel\n\n\n\n// WEBPACK FOOTER //\n// ./lib/label/add-text-label.js","import util from '../util'\n\nfunction addHtmlLabel (root, node) {\n  const fo = root\n    .append('foreignObject')\n      .attr('width', '100000')\n\n  const div = fo\n    .append('xhtml:div')\n  div.attr('xmlns', 'http://www.w3.org/1999/xhtml')\n\n  const label = node.label\n  switch (typeof label) {\n    case 'function':\n      div.insert(label)\n      break\n    case 'object':\n      // Currently we assume this is a DOM object.\n      div.insert(function () { return label })\n      break\n    default: div.html(label)\n  }\n\n  util.applyStyle(div, node.labelStyle)\n  div.style('display', 'inline-block')\n  // Fix for firefox\n  div.style('white-space', 'nowrap')\n\n  const client = div[0][0].getBoundingClientRect()\n  fo\n    .attr('width', client.width)\n    .attr('height', client.height)\n\n  return fo\n}\n\nexport default addHtmlLabel\n\n\n\n// WEBPACK FOOTER //\n// ./lib/label/add-html-label.js","import util from '../util'\n\nfunction addSVGLabel (root, node) {\n  const domNode = root\n\n  domNode.node().appendChild(node.label)\n\n  util.applyStyle(domNode, node.labelStyle)\n\n  return domNode\n}\n\nexport default addSVGLabel\n\n\n\n// WEBPACK FOOTER //\n// ./lib/label/add-svg-label.js","import d3 from 'd3'\n\nimport util from './util'\nimport addLabel from './label/add-label'\n\nfunction createClusters (selection, g) {\n  const clusters = g.nodes().filter(function (v) { return util.isSubgraph(g, v) })\n  const svgClusters = selection.selectAll('g.cluster')\n    .data(clusters, function (v) { return v })\n\n  svgClusters.selectAll('*').remove()\n  svgClusters.enter()\n    .append('g')\n      .attr('class', 'cluster')\n      .attr('id', function (v) {\n        const node = g.node(v)\n        return node.id\n      })\n      .style('opacity', 0)\n\n  util.applyTransition(svgClusters, g)\n    .style('opacity', 1)\n\n  svgClusters.each(function (v) {\n    const node = g.node(v)\n    const thisGroup = d3.select(this)\n    d3.select(this).append('rect')\n    const labelGroup = thisGroup.append('g').attr('class', 'label')\n    addLabel(labelGroup, node, node.clusterLabelPos)\n  })\n\n  svgClusters.selectAll('rect').each(function (c) {\n    const node = g.node(c)\n    const domCluster = d3.select(this)\n    util.applyStyle(domCluster, node.style)\n  })\n\n  util.applyTransition(svgClusters.exit(), g)\n    .style('opacity', 0)\n    .remove()\n\n  return svgClusters\n}\n\nexport default createClusters\n\n\n\n// WEBPACK FOOTER //\n// ./lib/create-clusters.js","import d3 from 'd3'\nimport _ from 'lodash'\n\nimport addLabel from './label/add-label'\nimport util from './util'\n\nfunction createEdgeLabels (selection, g) {\n  const svgEdgeLabels = selection.selectAll('g.edgeLabel')\n    .data(g.edges(), function (e) { return util.edgeToId(e) })\n    .classed('update', true)\n\n  svgEdgeLabels.selectAll('*').remove()\n  svgEdgeLabels.enter()\n    .append('g')\n      .classed('edgeLabel', true)\n      .style('opacity', 0)\n  svgEdgeLabels.each(function (e) {\n    const edge = g.edge(e)\n    const label = addLabel(d3.select(this), g.edge(e), 0, 0).classed('label', true)\n    const bbox = label.node().getBBox()\n\n    if (edge.labelId) { label.attr('id', edge.labelId) }\n    if (!_.has(edge, 'width')) { edge.width = bbox.width }\n    if (!_.has(edge, 'height')) { edge.height = bbox.height }\n  })\n\n  util.applyTransition(svgEdgeLabels.exit(), g)\n    .style('opacity', 0)\n    .remove()\n\n  return svgEdgeLabels\n}\n\nexport default createEdgeLabels\n\n\n\n// WEBPACK FOOTER //\n// ./lib/create-edge-labels.js","import d3 from 'd3'\nimport _ from 'lodash'\n\nimport intersectNode from './intersect/intersect-node'\nimport util from './util'\n\nfunction createEdgePaths (selection, g, arrows) {\n  const svgPaths = selection.selectAll('g.edgePath')\n    .data(g.edges(), function (e) { return util.edgeToId(e) })\n    .classed('update', true)\n\n  enter(svgPaths, g)\n  exit(svgPaths, g)\n\n  util.applyTransition(svgPaths, g)\n    .style('opacity', 1)\n\n  // Save DOM element in the path group, and set ID and class\n  svgPaths.each(function (e) {\n    const domEdge = d3.select(this)\n    const edge = g.edge(e)\n    edge.elem = this\n\n    if (edge.id) {\n      domEdge.attr('id', edge.id)\n    }\n\n    util.applyClass(domEdge, edge['class'],\n      (domEdge.classed('update') ? 'update ' : '') + 'edgePath')\n  })\n\n  svgPaths.selectAll('path.path')\n    .each(function (e) {\n      const edge = g.edge(e)\n      edge.arrowheadId = _.uniqueId('arrowhead')\n\n      const domEdge = d3.select(this)\n        .attr('marker-end', function () {\n          return 'url(#' + edge.arrowheadId + ')'\n        })\n        .style('fill', 'none')\n\n      util.applyTransition(domEdge, g)\n        .attr('d', function (e) { return calcPoints(g, e) })\n\n      util.applyStyle(domEdge, edge.style)\n    })\n\n  svgPaths.selectAll('defs *').remove()\n  svgPaths.selectAll('defs')\n    .each(function (e) {\n      const edge = g.edge(e)\n      const arrowhead = arrows[edge.arrowhead]\n      arrowhead(d3.select(this), edge.arrowheadId, edge, 'arrowhead')\n    })\n\n  return svgPaths\n}\n\nfunction calcPoints (g, e) {\n  const edge = g.edge(e)\n  const tail = g.node(e.v)\n  const head = g.node(e.w)\n  const points = edge.points.slice(1, edge.points.length - 1)\n  points.unshift(intersectNode(tail, points[0]))\n  points.push(intersectNode(head, points[points.length - 1]))\n\n  return createLine(edge, points)\n}\n\nfunction createLine (edge, points) {\n  const line = d3.svg.line()\n    .x(function (d) { return d.x })\n    .y(function (d) { return d.y })\n\n  if (_.has(edge, 'lineInterpolate')) {\n    line.interpolate(edge.lineInterpolate)\n  }\n\n  if (_.has(edge, 'lineTension')) {\n    line.tension(Number(edge.lineTension))\n  }\n\n  return line(points)\n}\n\nfunction getCoords (elem) {\n  const bbox = elem.getBBox()\n  const matrix = elem.ownerSVGElement.getScreenCTM()\n    .inverse()\n    .multiply(elem.getScreenCTM())\n    .translate(bbox.width / 2, bbox.height / 2)\n  return { x: matrix.e, y: matrix.f }\n}\n\nfunction enter (svgPaths, g) {\n  const svgPathsEnter = svgPaths.enter()\n    .append('g')\n      .attr('class', 'edgePath')\n      .style('opacity', 0)\n  svgPathsEnter.append('path')\n    .attr('class', 'path')\n    .attr('d', function (e) {\n      const edge = g.edge(e)\n      const sourceElem = g.node(e.v).elem\n      const points = _.range(edge.points.length).map(function () { return getCoords(sourceElem) })\n      return createLine(edge, points)\n    })\n  svgPathsEnter.append('defs')\n}\n\nfunction exit (svgPaths, g) {\n  const svgPathExit = svgPaths.exit()\n  util.applyTransition(svgPathExit, g)\n    .style('opacity', 0)\n    .remove()\n\n  util.applyTransition(svgPathExit.select('path.path'), g)\n    .attr('d', function (e) {\n      const source = g.node(e.v)\n\n      if (source) {\n        const points = _.range(this.getTotalLength()).map(function () { return source })\n        return createLine({}, points)\n      } else {\n        return d3.select(this).attr('d')\n      }\n    })\n}\n\nexport default createEdgePaths\n\n\n\n// WEBPACK FOOTER //\n// ./lib/create-edge-paths.js","import intersectRect from './intersect/intersect-rect'\nimport intersectEllipse from './intersect/intersect-ellipse'\nimport intersectCircle from './intersect/intersect-circle'\nimport intersectPolygon from './intersect/intersect-polygon'\n\nfunction rect (parent, bbox, node) {\n  const shapeSvg = parent.insert('rect', ':first-child')\n        .attr('rx', node.rx)\n        .attr('ry', node.ry)\n        .attr('x', -bbox.width / 2)\n        .attr('y', -bbox.height / 2)\n        .attr('width', bbox.width)\n        .attr('height', bbox.height)\n\n  node.intersect = function (point) {\n    return intersectRect(node, point)\n  }\n\n  return shapeSvg\n}\n\nfunction ellipse (parent, bbox, node) {\n  const rx = bbox.width / 2\n  const ry = bbox.height / 2\n  const shapeSvg = parent.insert('ellipse', ':first-child')\n        .attr('x', -bbox.width / 2)\n        .attr('y', -bbox.height / 2)\n        .attr('rx', rx)\n        .attr('ry', ry)\n\n  node.intersect = function (point) {\n    return intersectEllipse(node, rx, ry, point)\n  }\n\n  return shapeSvg\n}\n\nfunction circle (parent, bbox, node) {\n  const r = Math.max(bbox.width, bbox.height) / 2\n  const shapeSvg = parent.insert('circle', ':first-child')\n        .attr('x', -bbox.width / 2)\n        .attr('y', -bbox.height / 2)\n        .attr('r', r)\n\n  node.intersect = function (point) {\n    return intersectCircle(node, r, point)\n  }\n\n  return shapeSvg\n}\n\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond (parent, bbox, node) {\n  const w = (bbox.width * Math.SQRT2) / 2\n  const h = (bbox.height * Math.SQRT2) / 2\n  const points = [\n        { x: 0, y: -h },\n        { x: -w, y: 0 },\n        { x: 0, y: h },\n        { x: w, y: 0 }\n  ]\n  const shapeSvg = parent.insert('polygon', ':first-child')\n    .attr('points', points.map(function (p) { return p.x + ',' + p.y }).join(' '))\n\n  node.intersect = function (p) {\n    return intersectPolygon(node, points, p)\n  }\n\n  return shapeSvg\n}\n\nexport default {\n  rect,\n  ellipse,\n  circle,\n  diamond\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/shapes.js","import util from './util'\n\nfunction normal (parent, id, edge, type) {\n  const marker = parent.append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto')\n\n  const path = marker.append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0')\n  util.applyStyle(path, edge[type + 'Style'])\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class'])\n  }\n}\n\nfunction vee (parent, id, edge, type) {\n  const marker = parent.append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto')\n\n  const path = marker.append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 L 4 5 z')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0')\n  util.applyStyle(path, edge[type + 'Style'])\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class'])\n  }\n}\n\nfunction undirected (parent, id, edge, type) {\n  const marker = parent.append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto')\n\n  const path = marker.append('path')\n    .attr('d', 'M 0 5 L 10 5')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0')\n  util.applyStyle(path, edge[type + 'Style'])\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class'])\n  }\n}\n\nexport default {\n  normal,\n  vee,\n  undirected,\n  default: normal\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/arrows.js","module.exports = {\"name\":\"dagre-d3-renderer\",\"version\":\"0.4.26\",\"description\":\"A D3-based renderer for Dagre\",\"keywords\":[\"graph\",\"dagre\",\"graphlib\",\"renderer\",\"d3\"],\"main\":\"dist/dagre-d3.core.js\",\"scripts\":{\"lint\":\"standard\",\"karma\":\"node -r babel-register ./node_modules/.bin/karma start --single-run\",\"test\":\"yarn lint && yarn karma && phantomjs test/demo-test.js\",\"upgrade\":\"yarn-upgrade-all && yarn remove d3 && yarn add d3@3.5.17\",\"build\":\"webpack --progress --colors\",\"build:watch\":\"yarn build --watch\",\"release\":\"yarn build -p\"},\"dependencies\":{\"d3\":\"3.5.17\",\"dagre-layout\":\"^0.8.0\",\"graphlib\":\"^2.1.1\",\"lodash\":\"^4.17.4\"},\"devDependencies\":{\"babel-core\":\"^6.26.0\",\"babel-loader\":\"^7.1.2\",\"babel-preset-env\":\"^1.6.1\",\"chai\":\"^4.1.2\",\"karma\":\"^1.7.1\",\"karma-chrome-launcher\":\"^2.2.0\",\"karma-firefox-launcher\":\"^1.1.0\",\"karma-mocha\":\"^1.3.0\",\"karma-safari-launcher\":\"^1.0.0\",\"mocha\":\"^4.0.1\",\"phantomjs-prebuilt\":\"^2.1.16\",\"standard\":\"^10.0.3\",\"webpack\":\"^3.10.0\",\"webpack-node-externals\":\"^1.6.0\",\"yarn-upgrade-all\":\"^0.2.0\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/tylingsoft/dagre-d3-renderer.git\"},\"license\":\"MIT\",\"standard\":{\"ignore\":[\"dist/**/*.js\"]}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./package.json\n// module id = 48\n// module chunks = 0"],"sourceRoot":""}